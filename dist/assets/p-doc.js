define('p-doc/adapters/application', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].RESTAdapter.extend({
        //host: 'http://localhost:3001/',
        namespace: "p-doc/api",

        buildURL: function() {
            var token_pdoc = this.app_init.get('token_pdoc');
            var normalURL = this._super.apply(this, arguments);
            return normalURL + '?token=' + token_pdoc;
        }
    });

});
define('p-doc/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'p-doc/config/environment', 'p-doc/helpers/display-helper', 'p-doc/helpers/show-selections-helper'], function (exports, Ember, Resolver, loadInitializers, config, displayHelper, showSelectionsHelper) {

  'use strict';

  Ember['default'].Handlebars.registerBoundHelper('display-helper', displayHelper['default']);
  Ember['default'].Handlebars.registerBoundHelper('show-selections-helper', showSelectionsHelper['default']);

  Ember['default'].MODEL_FACTORY_INJECTIONS = true;

  var App = Ember['default'].Application.extend({
    modulePrefix: config['default'].modulePrefix,
    podModulePrefix: config['default'].podModulePrefix,
    Resolver: Resolver['default']
  });

  loadInitializers['default'](App, config['default'].modulePrefix);

  exports['default'] = App;

});
define('p-doc/components/auto-complete', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {

    'use strict';

    var get = Ember['default'].get,
        set = Ember['default'].set;
    //addObserver = Ember.addObserver;
    
    exports['default'] = Ember['default'].Component.extend({
        classNameBindings: [':autocomplete'],
        minChars: 1,
        searchPath: 'name',
        query: null,
        selectionIndex: -1,
    
        KEY_DOWN: 40,
        KEY_UP: 38,
        TAB: 9,
        ENTER: 13,
        ESCAPE: 27,
    
        displayResults: [],
        thereIsAVal : false,
    
        init: function(){
            //console.log('init');
            this._super.apply(this, arguments);
            Ember['default'].addObserver(this, 'query', this.queryDidChange);
            set(this, 'displayResults', []);
        },
    
        down: function( ev ) {
            if ( ev.keyCode === this.KEY_DOWN ) {
                this.send('moveSelection', 'down');
                return false;
            }
        }.on( 'keyDown' ),
    
        up: function( ev ) {
            if ( ev.keyCode === this.KEY_UP ) {
                this.send('moveSelection', 'up');
                return false;
            }
        }.on( 'keyUp' ),
    
        press: function( ev ) {
            //console.log('keyPress');
            var _this = this;
    
            if ( ev.keyCode === this.ENTER ) {
                var displayResults = get(_this, 'displayResults');
                var displayResultsLength = get(_this, 'displayResults.length');
    
                if(!displayResultsLength){
                    return;
                }
    
                var active = displayResults.find(function( item ){
                    return get(item, 'active');
                });
    
                if(!active){
                    _this.send('hideResults');
                    return;
                }
                _this.send('addSelection', active);
            }
        }.on( 'keyPress' ),
    
        /*
         gestione degli eventi di tipo click e key-press
         @action: didInsertElement
         */
        didInsertElement: function(){
            var self = this; //allowedKeyCodes = Ember.A([this.KEY_UP, this.KEY_DOWN, this.TAB, this.ENTER, this.ESCAPE]);
    
            //this.set('allowedKeyCodes', allowedKeyCodes);
    
            Ember['default'].assert('You must supply a source for the autocomplete component', get(this, 'source'));
            //Ember.assert('You must supply a destination for the autocomplete component', get(this, 'destination'));
    
            this.$('ul.suggestions-autocomplete').on('mouseover', 'li', this.mouseOverAutocomplete.bind(this));
            this.$('ul.suggestions-autocomplete').on('mouseout', 'li', this.mouseOutAutocomplete.bind(this));
            this.$('ul.suggestions-autocomplete').on('mouseleave', this.mouseLeaveAutocomplete.bind(this));
        },
    
        actions: {
            addSelection: function(selection){
                //console.log('addSelection');
                set(this, 'query', '');
                set(this, 'destination', selection) ;
                set(this, 'thereIsAVal', true);
                this.send('hideResults', this );
    
                set(this, 'selectionIndex', -1);
            },
    
    
            hideResults: function( _this ){
                //console.log('hideResults');
                var _displayResults = get(_this, 'displayResults');
    
                set(_this, 'selectionIndex', -1);
    
                if(!get(_displayResults, 'length')){
                    _this.$('.no-results').addClass('hdn');
                }
    
                _this.$('.results').addClass('hdn');
            },
    
            removeSelection: function(){
                //console.log('removeSelection');
                //get(this, 'destination').removeObject(item);
                set(this, 'destination', null);
                set(this, 'thereIsAVal', false);
            },
    
            displayAllResults: function(query){
                //console.log('displayAllResults');
                var self = this;
                this._queryPromise(query).then(function(results){
                    self.processResults(query, results);
                    self.positionResults();
                });
            },
    
            /*azione a livello di layout per gestire il doppio pulsante rimuovielemento/cerca*/
            buttonManager: function( query ) {
                //console.log('buttonManager');
                if(this.thereIsAVal) {
                    this.send('removeSelection', query);
                } else {
                    this.send('displayAllResults', "");
                }
            },
    
            moveSelection: function( direction ){
                var self = this;
                //console.log('moveSelection: '+this.displayResults);
                var selectionIndex = get(this, 'selectionIndex'),
                    isUp = direction === 'up',
                    isDown = !isUp,
                    _displayResults = get(this, 'displayResults'),
                    _displayResultsLength = get(this, 'displayResults.length'),
                    searchPath = get(self, 'searchPath'),
                    hoverEl;
    
                if( !_displayResultsLength ){
                    set(self, 'selectionIndex', -1);
                    return;
                } else {
                    _displayResults.setEach('active', false);
                }
    
                hoverEl = this.$('li.result.hover');
    
                if(hoverEl !== undefined){
                    if(hoverEl.length){
                        var text = Ember['default'].$('span', hoverEl).text(),
                            selected = _displayResults.find(function(item){
                                return get(item, searchPath) === text;
                            });
    
                        selectionIndex = _displayResults.indexOf(selected);
    
                        this.$('ul.suggestions-autocomplete li').removeClass('hover');
                        this.$('input.autocomplete').focus();
                    }
                }
    
    
                if(isUp && selectionIndex <= 0){
                    selectionIndex =  0;
                }
                else if(isDown && selectionIndex === _displayResultsLength -1){
                    selectionIndex = _displayResultsLength -1;
                }else if(isDown){
                    selectionIndex++;
                }else{
                    selectionIndex--;
                }
    
                var active = get(self, 'displayResults').objectAt(selectionIndex);
    
                set(self, 'selectionIndex', selectionIndex);
    
                set(active, 'active', true);
            }
        },
    
        _queryPromise: function( query ){
            //console.log('_queryPromise');
            var source = get(this, 'source'),
                searchPath = get(this, 'searchPath'),
                store = get(this, 'store');
            return new Ember['default'].RSVP.Promise(function(resolve, reject){
                //return Ember.RSVP.Promise(function(resolve, reject){
                if(('undefined' !== typeof DS['default']) && (DS['default'].Model.detect(source))){
                    var queryExpression = {};
    
                    queryExpression[searchPath] = query;
    
                    var type = source.toString().humanize();
    
                    store.find(type, queryExpression).then(resolve, reject);
    
                }
                else if(source.then){
                    source.then(resolve, reject);
                }else{
                    resolve(source);
                }
            });
        },
    
        queryDidChange: function(){
            console.log('queryDidChange');
            var query = get(this, 'query'),
                displayResults = get(this, 'displayResults'),
                hasQuery = get(this, 'hasQuery'),
                self = this;
    
            if(!hasQuery){
                set(this, 'selectionIndex', -1);
                displayResults.clear();
                return;
            }
    
            this._queryPromise(query).then(function(results){
                    self.processResults(query, results);
                },
    
                function(e){
                    console.log(e.message);
                    console.log(e.stack);
                    throw e;
                });
        },
    
        processResults: function(query, source){
            //console.log('processResults');
            var self = this,
                displayResults = get(this, 'displayResults');
    
            var results = source.filter(function(item){
    
                if(item.get(get(self, 'searchPath'))){        // aggiunto controllo di esistenza:  if(item.get(get(self, 'searchPath'))){    mi serve per escludere dalla lista campi nulli
                    return item.get(get(self, 'searchPath')).toLowerCase().search(query.toLowerCase()) !== -1;
                }
            });
    
            if(get(results, 'length') === 0){
                return displayResults.clear();
            }
    
            this.positionResults();
    
            var searchPath = get(this, 'searchPath');
    
            displayResults.clear();
    
            displayResults.pushObjects(Ember['default'].A(results.sort(function(a, b){
                return Ember['default'].compare(get(a, searchPath), get(b, searchPath));
            })));
    
            //console.log('2 displayResults: '+displayResults);
        },
    
        hasQuery: Ember['default'].computed(function(){
            //console.log('hasQuery');
            var query = get(this, 'query');
            if(query && query.length > get(this, 'minChars')){
                this.positionResults();
                return true;
            }
    
            return false;
        }).property('query'),
    
        mouseOverAutocomplete: function( evt ){
            //console.log('mouseOver');
            var el = this.$(evt.target);
    
            var active = get(this, 'displayResults').filter(function(item){
                return get(item, 'active');
            });
    
            if(active || active.length){
                active.setEach('active', false);
                set(this, 'selectionIndex', -1);
            }
    
            if(el.hasClass('result-name')){
                return;
            }
            this.$('ul.suggestions-autocomplete li').removeClass('hover');
            el.addClass('hover');
        },
    
        mouseOutAutocomplete: function(evt){
            //console.log('mouseOut');
            var target = $(evt.target);
            if(target.parents('ul').hasClass('suggestions-autocomplete')){
                return;
            }
            this.$('ul.suggestions-autocomplete li').removeClass('hover');
        },
    
        mouseLeaveAutocomplete: function(){
            //console.log('mouseLeave');
            var _this = this;
            $( "div.ember-view" ).click(function() {        //clickando fuori dal contesto si chiude il menù a tendina
                _this.send('hideResults', _this)
            });
        },
    
        positionResults: function(){
            //console.log('positionResults');
            var results = this.$('.results');
    
            var suggestions = this.$('ul.suggestions-autocomplete'),
                el = this.$(),
                position = el.position();
    
            results.removeClass('hdn');
    
            suggestions.css('position', 'absolute');
            suggestions.css('left', position.left);
            suggestions.css('top', position.top + this.$().height());
    
            var width = el.outerWidth();
    
            suggestions.css('width', width);
        },
    
        autocomplete: Ember['default'].TextField.extend({
            init: function(){
                //console.log('autocomplete init');
                this._super.apply(this, arguments);
            }
        }),
    
        _yield: function(context, options) {
            //console.log('_yield');
            var get = Ember['default'].get,
    
                view = options.data.view,
                parentView = this._parentView,
                template = get(this, 'template');
    
            if (template) {
                Ember['default'].assert("A Component must have a parent view in order to yield.", parentView);
                view.appendChild(Ember['default'].View, {
                    isVirtual: true,
                    tagName: '',
                    _contextView: parentView,
                    template: template,
                    context: get(view, 'context'), // the default is get(parentView, 'context'),
                    controller: get(view, 'controller'), // the default is get(parentView, 'context'),
                    templateData: { keywords: parentView.cloneKeywords() }
                });
            }
        }
    });

});
define('p-doc/components/auto-suggest', ['exports', 'ember', 'ember-data'], function (exports, Ember, DS) {

    'use strict';

    var get = Ember['default'].get,
        set = Ember['default'].set,
        addObserver = Ember['default'].addObserver;
    
    exports['default'] = Ember['default'].Component.extend({
        actions: {
            addSelection: function(selection){
                console.log('1');
                var usecase = get(this, 'usecase');
                set(this, 'query', '');
    
                switch(usecase) {
                    case 'customModeWithoutSource':
                        get(this, 'destination').addObject(selection);
                        break;
    
                    case 'customMode':
                        var searchPath = get(this, 'searchPath'), selectedValue = null;
                        if( typeof selection === "string" ) {
                            selectedValue = selection;
                        } else {
                            selectedValue = get(selection, searchPath);
                        }
                        get(this, 'destination').addObject(selectedValue);
                        break;
    
                    case 'originalMode':
                        get(this, 'destination').addObject(selection);
                        break;
                }
    
                set(this, 'selectionIndex', -1);
                this.$('input[type=text]').focus();
            },
    
            moveSelection: function(direction){
                console.log('2');
                var selectionIndex = get(this, 'selectionIndex'),
                    isUp = direction === 'up',
                    isDown = !isUp,
                    displayResults = get(this, 'displayResults'),
                    displayResultsLength = get(displayResults, 'length'),
                    searchPath = get(this, 'searchPath'),
                    hoverEl;
    
                displayResults.setEach('active', false);
    
                if(!displayResultsLength){
                    set(this, 'selectionIndex', -1);
                    return;
                }
    
                hoverEl = this.$('li.result.hover');
    
                if(hoverEl.length){
                    var text = Ember['default'].$('span', hoverEl).text(),
                        selected = displayResults.find(function(item){
                            return get(item, searchPath) === text;
                        });
    
                    selectionIndex = displayResults.indexOf(selected);
    
                    this.$('ul.suggestions li').removeClass('hover');
    
                    this.$('input.autosuggest').focus();
                }
    
                if(isUp && selectionIndex <= 0){
                    selectionIndex =  0;
                }
                else if(isDown && selectionIndex === displayResultsLength -1){
                    selectionIndex = displayResultsLength -1;
                }else if(isDown){
                    selectionIndex++;
                }else{
                    selectionIndex--;
                }
    
                var active = get(this, 'displayResults').objectAt(selectionIndex);
    
                set(this, 'selectionIndex', selectionIndex);
    
                set(active, 'active', true);
            },
    
            hideResults: function(){
                console.log('3');
                var displayResults = get(this, 'displayResults');
    
                set(this, 'selectionIndex', -1);
    
                if(!get(displayResults, 'length')){
                    this.$('.no-results').addClass('hdn');
                }
    
                this.$('.results').addClass('hdn');
            },
    
            selectActive: function(){
                console.log('4');
                var usecase = get(this, 'usecase'),
                    query = get(this, 'query'),
                    displayResultsLength = get(this, 'displayResults.length');
    
                if(usecase === 'customModeWithoutSource'){
                    this.send('addSelection', query);
                    //return;
                }
    
                if(!displayResultsLength){
                    if(usecase === 'customMode'){
                        this.send('addSelection', query);
                    } else {
                        return;
                    }
                }
    
                var active = get(this, 'displayResults').find(function(item){
                    return get(item, 'active');
                });
    
                if(!active){
                    this.send('hideResults');
                    return;
                }
    
                this.send('addSelection', active);
            },
    
            removeSelection: function(item){
                console.log('5');
                var usecase = get(this, 'usecase');
    
                switch(usecase) {
                    case 'customModeWithoutSource':
                        get(this, 'destination').removeObject(String(item));
                        break;
    
                    case 'customMode':
                        get(this, 'destination').removeObject(String(item));
                        break;
    
                    case 'originalMode':
                        get(this, 'destination').removeObject(item);
                        break;
                }
    
    
            }
        },
    
        classNameBindings: [':autosuggest'],
        minChars: 1,
        searchPath: 'name',
        query: null,
        selectionIndex: -1,
    
        init: function(){
            console.log('6');
            this._super.apply(this, arguments);
            addObserver(this, 'query', this.queryDidChange);
            set(this, 'displayResults', Ember['default'].A());
        },
    
        didInsertElement: function(){
            console.log('7');
            this._super.apply(this, arguments);
            //Ember.assert('You must supply a source for the autosuggest component', get(this, 'source'));
            //Ember.assert('You must supply a destination for the autosuggest component', get(this, 'destination'));
    
            this.$('ul.suggestions').on('mouseover', 'li', this.mouseOver.bind(this));
            this.$('ul.suggestions').on('mouseout', 'li', this.mouseOut.bind(this));
        },
    
        _queryPromise: function(query){
            console.log('8');
            var source = get(this, 'source'),
                searchPath = get(this, 'searchPath'),
                store = get(this, 'store');
    
            return new Ember['default'].RSVP.Promise(function(resolve, reject){
                if(('undefined' !== typeof DS['default']) && (DS['default'].Model.detect(source))){
                    var queryExpression = {};
    
                    queryExpression[searchPath] = query;
    
                    var type = source.toString().humanize();
    
                    store.find(type, queryExpression).then(resolve, reject);
                }
                else if(source.then){
                    source.then(resolve, reject);
                }else{
                    resolve(source);
                }
            });
        },
    
        queryDidChange: function(){
            console.log('9');
            var query = get(this, 'query'),
                displayResults = get(this, 'displayResults'),
                hasQuery = get(this, 'hasQuery'),
                usecase = get(this, 'usecase'),
                self = this;
    
    
            if(!hasQuery){
                set(this, 'selectionIndex', -1);
                displayResults.clear();
                return;
            }
    
            if( usecase !== 'customModeWithoutSource' ) {
    
                this._queryPromise(query).then(function(results){
                        self.processResults(query, results);
                    },
                    function(e){
                        console.log(e.message);
                        console.log(e.stack);
                        throw e;
                    });
            }
        },
    
        processResults: function(query, source){
            console.log('10');
            var self = this,
                displayResults = get(this, 'displayResults');
    
            var results = source.filter(function(item){
                return item.get(get(self, 'searchPath')).toLowerCase().search(query.toLowerCase()) !== -1;
            }).filter(function(item){
                return !get(self, 'destination').contains(item);
            });
    
            if(get(results, 'length') === 0){
                return displayResults.clear();
            }
    
            this.positionResults();
    
            var searchPath = get(this, 'searchPath');
    
            displayResults.clear();
    
            displayResults.pushObjects(Ember['default'].A(results.sort(function(a, b){
                return Ember['default'].compare(get(a, searchPath), get(b, searchPath));
            })));
            self.send('moveSelection', 'down'); // quando compare la lista dei risultati và in focus il suo primo elemento
        },
    
        hasQuery: Ember['default'].computed(function(){
            console.log('11');
            var query = get(this, 'query'), usecase = get(this, 'usecase');
    
            if( usecase !== 'customModeWithoutSource' ) {
                if(query && query.length > get(this, 'minChars')){
                    this.positionResults();
                    return true;
                }
                return false;
            }
    
    
    
        }).property('query'),
    
        mouseOver: function(evt){
            console.log('12');
            var el = this.$(evt.target);
    
            var active = get(this, 'displayResults').filter(function(item){
                return get(item, 'active');
            });
    
            if(active || active.length){
                active.setEach('active', false);
                set(this, 'selectionIndex', -1);
            }
    
            if(el.hasClass('result-name')){
                return;
            }
    
            this.$('ul.suggestions li').removeClass('hover');
            el.addClass('hover');
        },
    
        mouseOut: function(evt){
            console.log('13');
            var target = $(evt.target);
    
            if(target.parents('ul').hasClass('suggestions')){
                return;
            }
    
            this.$('ul.suggestions li').removeClass('hover');
        },
    
        positionResults: function(){
            console.log('14');
    
            var results = this.$('.results');
    
            var //input = this.$('input.autosuggest'),
                suggestions = this.$('ul.suggestions'),
            //selections = this.$('ul.selections'),
                el = this.$(),
                position = el.position();
    
            results.removeClass('hdn');
    
            suggestions.css('position', 'absolute');
            suggestions.css('left', position.left);
            suggestions.css('top', position.top + this.$().height());
    
            var width = el.outerWidth();
    
            suggestions.css('width', width);
        },
    
        autosuggest: Ember['default'].TextField.extend({
            KEY_DOWN: 40,
            KEY_UP: 38,
            COMMA: 188,
            TAB: 9,
            ENTER: 13,
            ESCAPE: 27,
    
            init: function(){
                console.log('15');
                this._super.apply(this, arguments);
    
                var allowedKeyCodes = Ember['default'].A([this.KEY_UP, this.KEY_DOWN, this.COMMA, this.TAB, this.ENTER, this.ESCAPE]);
                this.set('allowedKeyCodes', allowedKeyCodes);
            },
    
            keyDown: function(e){
                console.log('16');
                var keyCode = e.keyCode;
    
                if(!this.get('allowedKeyCodes').contains(keyCode)){
                    return;
                }
    
                var controller = get(this, 'controller');
    
                switch(keyCode){
                    case this.KEY_UP:
                        this.sendAction('moveSelection', 'up');
                        break;
                    case this.KEY_DOWN:
                        this.sendAction('moveSelection', 'down');
                        break;
                    case this.ENTER:
                        this.sendAction('selectActive');
                        break;
                    case this.ESCAPE:
                        this.sendAction('hideResults');
                        break;
                    default:
                        console.log(keyCode);
                }
            },
    
            focusOut: function() {
                console.log('17');
                var self = this;
                setTimeout( function(){ self.sendAction('hideResults'); } , 200 );
            }
        }),
    
        _yield: function(context, options) {
            var get = Ember['default'].get,
                view = options.data.view,
                parentView = this._parentView,
                template = get(this, 'template');
    
            if (template) {
                Ember['default'].assert("A Component must have a parent view in order to yield.", parentView);
                view.appendChild(Ember['default'].View, {
                    isVirtual: true,
                    tagName: '',
                    _contextView: parentView,
                    template: template,
                    context: get(view, 'context'), // the default is get(parentView, 'context'),
                    controller: get(view, 'controller'), // the default is get(parentView, 'context'),
                    templateData: { keywords: parentView.cloneKeywords() }
                });
            }
        }
    });
    

});
define('p-doc/components/bootstrap-datepicker-inline', ['exports', 'ember', 'ember-cli-bootstrap-datepicker/components/bootstrap-datepicker-inline'], function (exports, Ember, BootstrapDatepickerInlineComponent) {

	'use strict';

	exports['default'] = BootstrapDatepickerInlineComponent['default'];

});
define('p-doc/components/bootstrap-datepicker', ['exports', 'ember', 'ember-cli-bootstrap-datepicker/components/bootstrap-datepicker'], function (exports, Ember, BootstrapDatepickerComponent) {

	'use strict';

	exports['default'] = BootstrapDatepickerComponent['default'];

});
define('p-doc/components/custom-modal', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Component.extend({
        show: function() {
            this.$('.modal').modal();
        }.on('didInsertElement')
    });

});
define('p-doc/components/select-2', ['exports', 'ember-select-2/components/select-2'], function (exports, Select2Component) {

	'use strict';

	/*
		This is just a proxy file requiring the component from the /addon folder and
		making it available to the dummy application!
	 */
	exports['default'] = Select2Component['default'];

});
define('p-doc/components/speed-meter', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Component.extend({
        classNames: ['speed-meter'],
        layoutName: 'components/speed-meter',
        control_target: null,
        control_width: 300,
        control_height: 100,
        control_speed: null,
        rateSize: 100,
    
        //iCurrentSpeed:50,
        iTargetSpeed:50,
        //bDecrement:null,
        job:null,
    
        setup: function() {
            if(this.get('target')) {
                this.set('control_target', this.get('target'));
            }
            if(this.get('speed')) {
                this.set('control_speed', this.get('speed'));
            }
            if(this.get('custom_width')) {
                this.set('control_width', this.get('custom_width'));
            }
            if(this.get('custom_height')) {
                this.set('control_height', this.get('custom_height'));
            }
            if(this.get('rateSize')) {
                this.set('rateSize', this.get('rateSize'));
            }
    
            this.draw(this.control_speed, this.control_target); //MAX control_speed 100
    
        }.on('didInsertElement'),
    
        degToRad:function(angle)
        {
            // Degrees to radians
            return ((angle * Math.PI) / 180);
        },
    
        radToDeg:function(angle)
        {
            // Radians to degree
            return ((angle * 180) / Math.PI);
        },
    
        createLine:function(fromX, fromY, toX, toY, fillStyle, lineWidth, alpha)
        {
            // Create a line object using Javascript object notation
            return {
                from: {
                    X: fromX,
                    Y: fromY
                },
                to:	{
                    X: toX,
                    Y: toY
                },
                fillStyle: fillStyle,
                lineWidth: lineWidth,
                alpha: alpha
            };
        },
    
    
        drawLine:function(options, line)
        {
            // Draw a line using the line object passed in
            options.ctx.beginPath();
    
            // Set attributes of open
            options.ctx.globalAlpha = line.alpha;
            options.ctx.lineWidth = line.lineWidth;
            options.ctx.fillStyle = line.fillStyle;
            options.ctx.strokeStyle = line.fillStyle;
            options.ctx.moveTo(line.from.X, line.from.Y);
    
            // Plot the line
            options.ctx.lineTo(
                line.to.X,
                line.to.Y
            );
    
            options.ctx.stroke();
        },
    
        drawBackground:function(options)
        {
            /* Black background with alphs transparency to
             * blend the edges of the metallic edge and
             * black background
             */
    
            //background-color: rgba(245, 245, 245, 0.4); border: 0px
    
            options.ctx.globalAlpha = 0.6;
            options.ctx.fillStyle = "rgba(245, 245, 245, 0.9); border: 0px";
    
            var i = (170 / 100) * Number(this.rateSize),
                i_max = (180 / 100) * Number(this.rateSize);
    
    
            // Draw semi-transparent circles
            for (i ; i < i_max ; i++)     // (var i = 170; i < 180 ; i++)
            {
                options.ctx.beginPath();
    
                options.ctx.arc(options.center.X,
                    options.center.Y,
                        1 * i, 0,
                    Math.PI,
                    true);
    
                options.ctx.fill();
            }
        },
    
    
        drawSpeedometerColourArc: function (options)
        {
            /* Draws the colour arc.  Three different colours
             * used here; thus, same arc drawn 3 times with
             * different colours.
             * TODO: Gradient possible?
             */
    
            var delta = (180/6);
    
            var startOfRed = delta;
            var startOfYellow = 180;
            var startOfGreen = 270 - delta;
            var endOfGreen = 300 + delta;
    
            this.drawSpeedometerPart(options, 1.0, "rgb(255, 0, 0)", startOfRed, startOfYellow);
            this.drawSpeedometerPart(options, 0.9, "rgb(255, 255, 0)", startOfYellow, startOfGreen);
            this.drawSpeedometerPart(options, 0.9, "rgb(82, 240, 55)", startOfGreen, endOfGreen);
    
        },
    
        drawSpeedometerPart: function (options, alphaValue, strokeStyle, startPos, endPos) {
            /* Draw part of the arc that represents
             * the colour speedometer arc
             */
    
            if(endPos == null) {
                endPos = 0 - (Math.PI / 360 * 10);
            }
    
            options.ctx.beginPath();
    
            options.ctx.globalAlpha = alphaValue;
            options.ctx.lineWidth = 5;
            options.ctx.strokeStyle = strokeStyle;
    
            options.ctx.arc(options.center.X,                               //The x-coordinate of the center of the circle
                options.center.Y,                                           //The y-coordinate of the center of the circle
                options.levelRadius,                                        //The radius of the circle
                    Math.PI + (Math.PI / 360 * startPos),                   //The starting angle, in radians
                    Math.PI + (Math.PI / 360 * endPos),                     //The ending angle, in radians
                false);
    
            options.ctx.stroke();
        },
    
    
        applyDefaultContextSettings:function(options)
        {
            /* Helper function to revert to gauges
             * default settings
             */
    
            options.ctx.lineWidth = 2;
            options.ctx.globalAlpha = 0.5;
            options.ctx.strokeStyle = "rgb(255, 255, 255)";
            options.ctx.fillStyle = 'rgb(255,255,255)';
        },
    
    
        drawLargeTickMarks:function(options)
        {
            /* The small tick marks against the coloured
             * arc drawn every 5 mph from 10 degrees to
             * 170 degrees.
             */
    
            var tickvalue = options.levelRadius - 8;
            var iTick = 0;
            var gaugeOptions = options.gaugeOptions;
            var iTickRad = 0;
            var delta = 180/6;
    
            this.applyDefaultContextSettings(options);
    
            // Tick every 20 degrees (small ticks)
            for (iTick = delta/2; iTick < 180; iTick += delta)
            {
                iTickRad = this.degToRad(iTick);
    
                var onArchX = gaugeOptions.radius - (Math.cos(iTickRad) * tickvalue);
                var onArchY = gaugeOptions.radius - (Math.sin(iTickRad) * tickvalue);
                var innerTickX = gaugeOptions.radius - (Math.cos(iTickRad) * gaugeOptions.radius);
                var innerTickY = gaugeOptions.radius - (Math.sin(iTickRad) * gaugeOptions.radius);
    
                var fromX = (options.center.X - gaugeOptions.radius) + onArchX;
                var fromY = (gaugeOptions.center.Y - gaugeOptions.radius) + onArchY;
    
                var toX = (options.center.X - gaugeOptions.radius) + innerTickX;
                var toY = (gaugeOptions.center.Y - gaugeOptions.radius) + innerTickY;
    
                // Create a line expressed in JSON
                //var line = this.createLine(fromX, fromY, toX, toY, "rgb(127,127,127)", 3, 0.6);
                var line;
                if( this.rateSize <= 60 ){
                    line = this.createLine(fromX, fromY, toX, toY, "rgba(0, 0, 0, 0.8)", 1, 0.6);
                } else {
                    line = this.createLine(fromX, fromY, toX, toY, "rgba(0, 0, 0, 0.8)", 2, 0.6);
                }
    
                // Draw the line
                this.drawLine(options, line);
    
            }
        },
    
        drawSmallTickMarks:function(options)
        {
            /* The large tick marks against the coloured
             * arc drawn every 10 mph from 10 degrees to
             * 170 degrees.
             */
    
            var tickvalue = options.levelRadius - 8;
            var iTick = 0;
            var gaugeOptions = options.gaugeOptions;
            var iTickRad = 0;
    
            var innerTickY;
            var innerTickX;
            var onArchX;
            var onArchY;
    
            var fromX;
            var fromY;
    
            var toX;
            var toY;
            var line;
    
            var delta = 180/6;
    
            this.applyDefaultContextSettings(options);
    
            //tickvalue = options.levelRadius - 2;
            tickvalue = options.levelRadius + 2;
    
            // 10 units (major ticks)
            for (iTick = delta; iTick < 180; iTick += delta)
            {
                iTickRad = this.degToRad(iTick);
    
                /* Calculate the X and Y of both ends of the
                 * line I need to draw at angle represented at Tick.
                 * The aim is to draw the a line starting on the
                 * coloured arc and continueing towards the outer edge
                 * in the direction from the center of the gauge.
                 */
    
                onArchX = gaugeOptions.radius - (Math.cos(iTickRad) * tickvalue);
                onArchY = gaugeOptions.radius - (Math.sin(iTickRad) * tickvalue);
                innerTickX = gaugeOptions.radius - (Math.cos(iTickRad) * gaugeOptions.radius);
                innerTickY = gaugeOptions.radius - (Math.sin(iTickRad) * gaugeOptions.radius);
    
                fromX = (options.center.X - gaugeOptions.radius) + onArchX;
                fromY = (gaugeOptions.center.Y - gaugeOptions.radius) + onArchY;
    
                toX = (options.center.X - gaugeOptions.radius) + innerTickX;
                toY = (gaugeOptions.center.Y - gaugeOptions.radius) + innerTickY;
    
                // Create a line expressed in JSON
                //line =  this.createLine(fromX, fromY, toX, toY, "rgb(127,127,127)", 3, 0.6);
                line = this.createLine(fromX, fromY, toX, toY, "rgba(0, 0, 0, 0.8)", 1, 0.6);
    
                // Draw the line
                this.drawLine(options, line);
            }
        },
    
        drawTicks:function(options)
        {
            /* Two tick in the coloured arc!
             * Small ticks every 5
             * Large ticks every 10
             */
    
            this.drawSmallTickMarks(options);
            this.drawLargeTickMarks(options);
        },
    
    
        drawTextMarkers:function(options)
        {
            /* The text labels marks above the coloured
             * arc drawn every 10 mph from 10 degrees to
             * 170 degrees.
             */
    
            var innerTickX = 0;
            var innerTickY = 0;
            var iTick = 0;
            var iTickToPrint = 0;
    
            /*queste 3 non c'erano*/
            var gaugeOptions = options.gaugeOptions;
            var deltaRadius = (gaugeOptions.radius/10); // 10
            var radius = gaugeOptions.radius +deltaRadius ;
    
            var delta = 180/6;
    
            this.applyDefaultContextSettings(options);
    
            // Font styling
            //options.ctx.font = 'italic 11px sans-serif';
    
            if( this.rateSize <= 60 ){
                options.ctx.font = 'bold 8px digital';
            } else {
                options.ctx.font = 'bold 12px digital';
            }
    
            options.ctx.textBaseline = 'top';
            options.ctx.fillStyle = "rgba(0, 0, 0, 0.8)";
    
            options.ctx.beginPath();
    
            // Tick every 20 (small ticks)
            for (iTick = delta/2; iTick <= 180; iTick += delta)
            {
    //            innerTickX = gaugeOptions.radius - (Math.cos(this.degToRad(iTick)) * gaugeOptions.radius);
    //            innerTickY = gaugeOptions.radius - (Math.sin(this.degToRad(iTick)) * gaugeOptions.radius);
    
                innerTickX = radius - (Math.cos(this.degToRad(iTick)) * radius);
                innerTickY = radius - (Math.sin(this.degToRad(iTick)) * radius);
    
    
                options.ctx.fillText(iTickToPrint, (options.center.X - radius - (deltaRadius/2) ) + innerTickX ,
                        (gaugeOptions.center.Y - radius - deltaRadius ) + innerTickY );
    
    
    //            // Some cludging to center the values (TODO: Improve)
    //            if(iTick )       {
    //                options.ctx.fillText(iTickToPrint, (options.center.X - gaugeOptions.radius - 12) + innerTickX,
    //                        (gaugeOptions.center.Y - gaugeOptions.radius - 12) + innerTickY + 5);
    //            }
    //            if(iTick < 50)
    //            {
    //                options.ctx.fillText(iTickToPrint, (options.center.X - gaugeOptions.radius - 12) + innerTickX - 5,
    //                        (gaugeOptions.center.Y - gaugeOptions.radius - 12) + innerTickY + 5);
    //            }
    //            else if(iTick < 90)
    //            {
    //                options.ctx.fillText(iTickToPrint, (options.center.X - gaugeOptions.radius - 12) + innerTickX,
    //                        (gaugeOptions.center.Y - gaugeOptions.radius - 12) + innerTickY );
    //            }
    //            else if(iTick === 90)
    //            {
    //                options.ctx.fillText(iTickToPrint, (options.center.X - gaugeOptions.radius - 12) + innerTickX + 4,
    //                        (gaugeOptions.center.Y - gaugeOptions.radius - 12) + innerTickY );
    //            }
    //            else if(iTick < 145)
    //            {
    //                options.ctx.fillText(iTickToPrint, (options.center.X - gaugeOptions.radius - 12) + innerTickX + 10,
    //                        (gaugeOptions.center.Y - gaugeOptions.radius - 12) + innerTickY );
    //            }
    //            else
    //            {
    //                options.ctx.fillText(iTickToPrint, (options.center.X - gaugeOptions.radius - 12) + innerTickX + 15,
    //                        (gaugeOptions.center.Y - gaugeOptions.radius - 12) + innerTickY + 5);
    //            }
    
                // MPH increase by 10 every 20 degrees
                iTickToPrint += 20;
            }
    
            options.ctx.stroke();
    
        },
    
    
    
        drawNeedleDial:function(options, alphaValue, strokeStyle, fillStyle)
        {
            /* Draws the metallic dial that covers the base of the
             * needle.
             */
    
            options.ctx.globalAlpha = alphaValue;
            options.ctx.lineWidth = 1;
            options.ctx.strokeStyle = strokeStyle;
            options.ctx.fillStyle = fillStyle;
    
            var dimCircle = (50 / 100) * Number(this.rateSize);
    
            // Draw several transparent circles with alpha
            for (var i = 0;i < dimCircle; i++)
            {
                options.ctx.beginPath();
    
                options.ctx.arc(options.center.X,
                    options.center.Y,
                        1*i,
                    0,
                    Math.PI,
                    true);
    
                options.ctx.fill();
    
                options.ctx.stroke();
            }
        },
    
    
    
    
    
        //
    //
    //    function convertSpeedToAngle(options) {
    //    /* Helper function to convert a speed to the
    //     * equivelant angle.
    //     */
    //    var iSpeed = (options.speed / 10),
    //        iSpeedAsAngle = ((iSpeed * 20) + 10) % 180;
    //
    //    // Ensure the angle is within range
    //    if (iSpeedAsAngle > 180) {
    //        iSpeedAsAngle = iSpeedAsAngle - 180;
    //    } else if (iSpeedAsAngle < 0) {
    //        iSpeedAsAngle = iSpeedAsAngle + 180;
    //    }
    //
    //    return iSpeedAsAngle;
    //}
    //
        convertSpeedToAngle:function(options)
        {
            /* Helper function to convert a speed to the
             * equivalent angle.
             */
            var delta = 180/6;
            var iSpeed = (options.speed),   //(options.speed / 10)
                iSpeedAsAngle = ((iSpeed * delta/20) + delta/2) % 180;
    
    
            // Ensure the angle is within range
            if (iSpeedAsAngle > 180) {
                iSpeedAsAngle = iSpeedAsAngle - 180;
            } else if (iSpeedAsAngle < 0) {
                iSpeedAsAngle = iSpeedAsAngle + 180;
            }
    
            return iSpeedAsAngle;
        },
    
    
        //function drawNeedle(options) {
    
    //    var iSpeedAsAngle = convertSpeedToAngle(options),
    //        iSpeedAsAngleRad = degToRad(iSpeedAsAngle),
    //        gaugeOptions = options.gaugeOptions,
    //        innerTickX = gaugeOptions.radius - (Math.cos(iSpeedAsAngleRad) * 20),
    //        innerTickY = gaugeOptions.radius - (Math.sin(iSpeedAsAngleRad) * 20),
    //        fromX = (options.center.X - gaugeOptions.radius) + innerTickX,
    //        fromY = (gaugeOptions.center.Y - gaugeOptions.radius) + innerTickY,
    //        endNeedleX = gaugeOptions.radius - (Math.cos(iSpeedAsAngleRad) * gaugeOptions.radius),
    //        endNeedleY = gaugeOptions.radius - (Math.sin(iSpeedAsAngleRad) * gaugeOptions.radius),
    //        toX = (options.center.X - gaugeOptions.radius) + endNeedleX,
    //        toY = (gaugeOptions.center.Y - gaugeOptions.radius) + endNeedleY,
    //        line = createLine(fromX, fromY, toX, toY, "rgb(255,0,0)", 5, 0.6);
    //
    //    drawLine(options, line);
    //
    //    // Two circle to draw the dial at the base (give its a nice effect?)
    //    drawNeedleDial(options, 0.6, "rgb(127, 127, 127)", "rgb(255,255,255)");
    //    drawNeedleDial(options, 0.2, "rgb(127, 127, 127)", "rgb(127,127,127)");
    //
    //}
    
        drawNeedle:function(options)
        {
            /* Draw the needle in a nice read colour at the
             * angle that represents the options.speed value.
             */
    
            var iSpeedAsAngle = this.convertSpeedToAngle(options);
            var iSpeedAsAngleRad = this.degToRad(iSpeedAsAngle);
    
            var gaugeOptions = options.gaugeOptions;
    
            var innerTickX = gaugeOptions.radius - (Math.cos(iSpeedAsAngleRad) * 20);
            var innerTickY = gaugeOptions.radius - (Math.sin(iSpeedAsAngleRad) * 20);
    
            var fromX = (options.center.X - gaugeOptions.radius) + innerTickX;
            var fromY = (gaugeOptions.center.Y - gaugeOptions.radius) + innerTickY;
    
            var endNeedleX = gaugeOptions.radius - (Math.cos(iSpeedAsAngleRad) * gaugeOptions.radius);
            var endNeedleY = gaugeOptions.radius - (Math.sin(iSpeedAsAngleRad) * gaugeOptions.radius);
    
            var toX = (options.center.X - gaugeOptions.radius) + endNeedleX;
            var toY = (gaugeOptions.center.Y - gaugeOptions.radius) + endNeedleY;
    
            this.createPolygon(options, fromX, fromY, toX, toY, iSpeedAsAngle);
    
            // Two circle to draw the dial at the base (give its a nice effect?)
            this.drawNeedleDial(options, 0.6, "rgba(114, 124, 128, 0.8)", "rgba(114, 124, 128, 0.8)");
            //this.drawNeedleDial(options, 0.2, "rgb(127, 127, 127)", "rgb(127,127,127)");
    
        },
    
        //x1    y1    x2   y2
        createPolygon:function(options, fromX, fromY, toX, toY, angle)
        {
            var value = 10/angle +1;
            if( this.rateSize >= 60 && angle > 30 && angle <= 120  ){
                value = value + 1;
            }
    
            var m = ( fromX - toX ) / ( toY - fromY );
            //var q = (( fromY * toX ) - ( toY * fromX )) / ( toX - fromX);
    
            var q_luca = -m * fromX + fromY;
            var y_minus = m * (fromX -value) + q_luca;
            var y_plus =  m * (fromX +value) + q_luca;
    
            //var m_luc = -183/49, q_luc = 1410.73;
    
            options.ctx.fillStyle = '#f00';
            options.ctx.beginPath();
            options.ctx.moveTo(fromX - value, y_minus);
            options.ctx.lineTo(toX,toY);
            options.ctx.lineTo(fromX + value, y_plus);
            options.ctx.closePath();
            options.ctx.fill();
        },
    
    
        buildOptionsAsJSON:function(canvas, iSpeed)
        {
            /* Setting for the speedometer
             * Alter these to modify its look and feel
             */
    
            var centerX = (210/100)* Number(this.rateSize),
                centerY = (210/100)* Number(this.rateSize),
                radius = (140/100)* Number(this.rateSize),
                outerRadius = (200/100)* Number(this.rateSize);
    
            // Create a speedometer object using Javascript object notation
            return {
                ctx: canvas.getContext('2d'),
                speed: iSpeed,
                center:	{
                    X: centerX,
                    Y: centerY
                },
                levelRadius: radius - 10,
                gaugeOptions: {
                    center:	{
                        X: centerX,
                        Y: centerY
                    },
                    radius: radius
                },
                radius: outerRadius
            };
        },
    
    
        clearCanvas:function(options)
        {
            options.ctx.clearRect(0, 0, 800, 600);
            this.applyDefaultContextSettings(options);
        },
    
    //    MAIN
    
    
        draw:function(iSpeed, target)
        {
            /* Main entry point for drawing the speedometer
             * If canvas is not support alert the user.
             */
    
            var canvas = document.getElementById(target);
    
            // Canvas good?
            if (canvas != null && canvas.getContext)
            {
                var options = this.buildOptionsAsJSON(canvas, iSpeed);
    
                // Clear canvas
                this.clearCanvas(options);
    
                // Draw the metallic styled edge
                //this.drawMetallicArc(options);
    
                // Draw thw background
                this.drawBackground(options);
    
                // Draw tick marks
                this.drawTicks(options);
    
                // Draw labels on markers
                this.drawTextMarkers(options);
    
                // Draw speeometer colour arc
                this.drawSpeedometerColourArc(options);
    
                // Draw the needle and base
                this.drawNeedle(options);
    
            }
            else
            {
                console.log("Canvas not supported by your browser!");
            }
        },
    
    
        drawWithInputValue:function()
        {
    
            var txtSpeed = document.getElementById('txtSpeed');
    
            if (txtSpeed !== null) {
    
                this.iTargetSpeed = txtSpeed.value;
    
                // Sanity checks
                if (isNaN(this.iTargetSpeed)) {
                    this.iTargetSpeed = 0;
                } else if (this.iTargetSpeed < 0) {
                    this.iTargetSpeed = 0;
                } else if (this.iTargetSpeed > 80) {
                    this.iTargetSpeed = 80;
                }
    
                this.job = setTimeout("draw()", 5);
    
            }
        }
    });

});
define('p-doc/controllers/account/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].ObjectController.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
        app_controller_companyType: Ember['default'].computed.alias('controllers.application.company_type'),
    
        is_admin: function(){
            return ( this.get('app_controller_companyType') === 'admin' );
        }.property('app_controller_companyType'),
        is_certifier: function(){
            return ( this.get('app_controller_companyType') === 'certifier' );
        }.property('app_controller_companyType'),
    
        mode_view: true,
        //  *** define tab order
        tabList: Ember['default'].A(
            {'paymentDetails': false},
            {'buyCredits': false},
            {'orderHistory': false}
        ),
    
        cardNumber1: null,
        cardNumber2: null,
        cardNumber3: null,
        cardNumber4: null,
    
        mm: null,
        yyyy: null,
    
        cvc: null,
    
        main_record: null,
        listCurrency: [
            'eur',
            'usd'
        ],
        listType: [
            'certification',
            'visualization'
        ],
    
        // campi nel model new-payment-plan
    
        type: null,
        planName: null,
        planDescription: null,
        planAmount: null,
        planCurrency: null,
        planCredit: null
    });

});
define('p-doc/controllers/admin/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].ObjectController.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
    
        view_new_field: false,
        view_totWeight: true,
        mode_view: true,
    
        new_record: null,
        record_to_delete: null,
        main_record: null,
    
        type_document: [
           'company',
            'driver',
            'truck',
            'trailer'
        ],
        type_period: [
            'days',
            'months',
            'years'
        ],
        selectedValidity: 'years',
    //    types: [
    //        {name: "Days", id: "days"},
    //        {name: "Months", id: "months"},
    //        {name: "Years", id: "years"}
    //    ],
    
        //  *** define tab order
        tabList: Ember['default'].A(
            {'general': false},
            {'company': false},
            {'driver': false},
            {'truck': false},
            {'trailer': false}
        )
    });

});
define('p-doc/controllers/application', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Controller.extend({
        is_login: false,
        LOG_TRANSITIONS: true,
    
        visibility: [
            'private',
            'public'
        ],
        /*****************************
         * GENERALS
         */
        company_record: null,
        user_record: null,
        temp_company_id: null,
    
        /*****************************
         * LOCAL STORAGE
         */
        user_grants: JSON.parse(localStorage["user_grants"] ? localStorage["user_grants"] : "[\" \"]"),
    
        token_pdoc: localStorage['token_pdoc'],
        company_id: localStorage['company_id'],
        company_type: localStorage['company_type'],
        user_id: localStorage['user_id'],
        user_type: localStorage['user_type'],
        is_admin: localStorage['is_admin'],
        comp_country: localStorage['comp_country'],
    
        tokenChanged: function() {localStorage.token_pdoc = this.token_pdoc; this.app_init.set('token_pdoc', this.token_pdoc);}.observes('token_pdoc'),
        company_idChanged: function() { localStorage.company_id = this.company_id; }.observes('company_id'),
        company_typeChanged: function() { localStorage.company_type = this.company_type; }.observes('company_type'),
        user_idChanged: function() { localStorage.user_id = this.user_id; }.observes('user_id'),
        user_typeChanged: function() { localStorage.user_type = this.user_type; }.observes('user_type'),
        is_adminChanged: function() { localStorage.is_admin = this.is_admin; }.observes('is_admin'),
        comp_country_changed: function() {
            localStorage.comp_country = this.comp_country;
    
            if( this.comp_country === 'Italy') {
                this.isEnglish = 'italian';
            } else {
                this.isEnglish =  'english';
            }
    
        }.observes('comp_country'),
    
        formData: new FormData(),
        formData_size: null,
        stripe_clientKey: stripe_clientKey,
        is_certifier: function(){
            return ( this.get('company_type') === 'certifier' );
        }.property('company_type'),
        user_type_admin: function(){
          return String(this.get('user_type')) === 'admin';
        }.property('user_type'),
        isLinked: false,
        /**********************
         auto-suggest
         */
        auto_suggest_Services: Ember['default'].A(),
        auto_suggest_Segments: Ember['default'].A(),
        auto_suggest_Areas: Ember['default'].A(),
        auto_suggest_Configurations: Ember['default'].A(),
    
        /*****************************
         * AUTOCOMPLETE
         */
    
        records_company: Ember['default'].A(),
        records_docTemplate: Ember['default'].A(),
        records_companyCertifier: Ember['default'].A(),
        records_notifications: Ember['default'].A(),
        records_paymentPlans: Ember['default'].A(),
        records_posts: Ember['default'].A(),
    
        autocompleteUser: [],
        autocompleteCompany: [],
    
        autocomplete_patents: Ember['default'].A([
            Ember['default'].Object.create({id: 1, type: "AM"}),
            Ember['default'].Object.create({id: 2, type: "A1"}),
            Ember['default'].Object.create({id: 3, type: "A2"}),
            Ember['default'].Object.create({id: 4, type: "A"}),
            Ember['default'].Object.create({id: 5, type: "B"}),
            Ember['default'].Object.create({id: 6, type: "B1"}),
            Ember['default'].Object.create({id: 7, type: "BE"}),
            Ember['default'].Object.create({id: 8, type: "C1"}),
            Ember['default'].Object.create({id: 9, type: "C1E"}),
            Ember['default'].Object.create({id: 10, type: "C"}),
            Ember['default'].Object.create({id: 11, type: "CE"}),
            Ember['default'].Object.create({id: 12, type: "D1"}),
            Ember['default'].Object.create({id: 13, type: "D1E"}),
            Ember['default'].Object.create({id: 14, type: "D"}),
            Ember['default'].Object.create({id: 15, type: "KA"}),
            Ember['default'].Object.create({id: 16, type: "KB"})
        ]),
    
        paymentPlans: Ember['default'].A(),
    
        /*****************************
         * INFINITE SCROLL
         */
        firstIndex: 0,
        perPage: 25,
        queryExpressResults: null,
        queryExpressResults_length: null,
        isAll: false,
        items: Ember['default'].A(),
        searchResultList: Ember['default'].A(),
        searchResults: function() { return this.searchResultList; }.property('searchResultList'),
    
    
        /*****************************
         * LANGUAGE
         */
        isEnglish: null,
    
        translationType: function(){
            switch(this.isEnglish){
                case 'english':
                    return this.lan_en.english;
                case 'italian':
                    return this.lan_it.italian;
                default:
                    return this.lan_en.english;
            }
        }.property('isEnglish'),
    
        translation: function(){
            switch(this.isEnglish){
                case 'english':
                    return this.lan_en;
                case 'italian':
                    return this.lan_it;
                default:
                    return this.lan_en;
            }
        }.property('isEnglish'),
    
        lan_it: {
            publicToYourContactsNetwork: 'Pubblica alla tua rete di contatti', companyDetails: "Anagrafica", invoiceNumber: 'Numero fattura', rate: 'Punteggio', limit: 'Limite', goodsConfiscation: 'Confisca', vehicleConfiscation: 'Sequestro', fiscalResponsibility: 'Resp.Fiscale',
            validity: 'Validità', alert: 'Avviso', grace: 'Grazia', loadModel: 'Carica modello', attach: 'Allega', premium: 'Avanzato', medium: 'Intermedio', smart: 'Base', "for": 'Per', euro: 'Euro',
            byNow: 'Acquista ora!', amount: 'Importo', cardNumber: 'Numero di carta', account: 'Account', general: 'Generale', postToYourLinks: 'Pubblica alla tua rete di contatti', submit: 'Pubblica',
            news: 'Nuove', hideNotifications: 'Notifiche nascoste', emas: 'Emas', admin: 'Admin', extra: 'Extra', certifier: 'Certificatore', send: 'Invia', template: 'Template',
            paymentDetails: 'dettagli pagamento', credits: 'Crediti', orderHistory: 'Storico cliente', buyCredits: 'Acquisto crediti', newDocument: 'documento', hideLinkRequests: 'Richieste di connessione nascoste',
            showHideLinkRequests: 'Mostra le richieste di connessione nascoste...', resume: 'Rigenera', date: 'Data', Close: 'Chiudi', gracePeriod: 'Periodo di grazia', removeCertifier: 'Rimuovi',
            more: 'Dettagli', deadline: 'Scadenza', value: 'Valore', certificate: 'Certifica', download: 'Scarica', hide: 'Nascondi', note: 'Note', highlight: 'In evidenza',
            showHideNotifications: 'Mostra le notifiche nascoste...', linkRequests: 'Richieste di connessione', notifications: 'Notifiche', save: 'Salva', type: 'Tipo',
            edit: 'Modifica', country: 'Paese', logo: 'Logo', links: 'Links', "new": 'Nuovo', "return": 'Indietro', chassisNumber: 'Targa', registrationYear: 'Anno di immatricolazione',
            configuration: 'Configurazione', category: 'Categoria', tare: 'Tara', weight: 'Peso', linksRequest: 'Richieste di collegamento', generals: 'Generali',
            model: 'Modello', brand: 'Marca', view: 'Visualizza', goTo: 'Vai', "delete": 'Cancella', lastName: 'Cognome', firstName: 'Nome', curriculum: 'Curriculum', searchCompanies: 'Ricerca',
            languages: 'Lingue', skype: 'Contatto Skype', phone: 'Telefono', patents: 'Patenti', language: 'Lingua', english: 'Inglese', italian: 'Italiano', yourProfile: 'Il tuo profilo', name: "Nome",
            profile: "Profilo", company: 'Società', transportListCode: "Num. iscrizione all'albo", chamberOfCommerce: "Camera di commercio", emails: "E-mail", password: "Password",
            description: "Descrizione", services: "Servizi offerti", segments: "Tratte coperte", areas: "Aree coperte", driver: 'Autista', drivers: 'Autisti', truck: 'Camion', trucks: 'Camions',
            trailer: 'Rimorchio', trailers: 'Rimorchi', clerks: 'Impiegati', changePassword: 'Cambia password', driversList: "Lista autisti", driverDetails: "Anagrafica autista", trucksList: 'Lista camions',
            list: "Lista", vehicleDetails: "Dettagli veicolo", clerksList: 'Lista impiegati', clerk: 'Impiegato', trailersList: 'Lista rimorchi', details:'Dettagli', username: 'Username',
            birthDate: 'Data di nascita', title: 'Titolo', text: 'Testo', loadImage: 'Carica immagine', attached: 'Allega', documents: 'Documenti', validityDate: 'Inizio validità', deadLine: 'Scadenza',
            returnToList: 'Torna alla lista', files: 'Files', filesToDownload: 'Files da scaricare', accept:'Accetta', sendRequest:'Invia richiesta', search: 'Cerca', expiration: 'Scadenza', street: 'Via', district:'Regione',
            city: 'Città', province: 'Provincia', zipCode: 'CAP', vatNumber: 'Codice fiscale', fax: 'Fax', totalWeight: 'Peso compessivo', email: 'Email', Ratings: 'Punteggio', from: 'Da', ChangePassword: 'Cambio password', CurrentPassword:'Password attuale',
            NewPassword:'Nuova password', ConfirmNewPassword:'Conferma password', AreYouSureYouWantToDeleteThisRecord: 'Sei sicuro di voler cancellare questo record', AddFiles:'Add files',
            newPaymentPlan: 'Nuovo piano di pagamento', selectTheCurrency: 'seleziona la valuta', currency: 'valuta', selectTheType: 'Seleziona il tipo', rating: 'Punteggio',
            isLimited: 'Punteggio limitato', newClerk: 'Nuovo impiegato', newDriver: 'New autista', newTruck: 'New camion', newTrailer: 'Nuovo traino', pricePlan: 'Tariffario', visualizationCredit: 'credito per la visualizzazione',
            certificationCredit: 'credito per la certificazione', yourCompany: 'La tua società', setCertifier: 'Aggiungi', vehicleModel: 'Modello', approved: 'Approvato', booleanRating: 'Punteggio booleano'
        },
    
        lan_en: {
            publicToYourContactsNetwork: 'Public to your contacts network', companyDetails: 'Company Details', invoiceNumber: 'Invoice number', rate: 'Rate', limit: 'Limit', goodsConfiscation: 'Goods Confisc.', vehicleConfiscation: 'Vehicle Confisc.',
            fiscalResponsibility: 'Fiscal Resp.', emas: 'Emas', validity: 'Validity', alert: 'Alert', grace: 'Grace', loadModel: 'Load model', attach: 'Attach', premium: 'Premium', medium: 'Medium',
            smart: 'Smart', "for": 'For', euro: 'Euro', buyNow: 'Buy now!', amount: 'Amount', cardNumber: 'Card number', account: 'Account', general: 'General', postToYourLinks: 'Post to your links',
            submit: 'Submit', news: 'News', hideNotifications: 'Hide notifications', linksRequest: 'Links request', generals: 'Generals', admin: 'Admin', extra: 'Extra', send: 'Send', removeCertifier: 'Remove',
            paymentDetails: 'Payment details', credits: 'Credits', orderHistory: 'Order history', buyCredits: 'Buy credits', document: 'document', hideLinkRequests: 'Hide link requests',
            showHideLinkRequests: 'Show hidden link requests...', resume: 'Resume', date: 'Date', Close: 'Close', gracePeriod: 'Grace period', more: 'More', deadline: 'Deadline',
            value: 'Value', certificate: 'Certificate', download: 'Download', hide: 'Hide', note: 'Note', highlight: 'Highlight', showHideNotifications: 'Show hidden notifications...',
            linkRequests: 'Link requests', notifications: 'Notifications', save: 'Save', type: 'Type', edit: 'Edit', country: 'Country', logo: 'Logo', links: 'Links', "new": 'New',
            "return": 'Return', chassisNumber: 'Chassis number', registrationYear: 'Registration year', configuration: 'Configuration', category: 'Category', tare: 'Tare', certifier: 'Certifier',
            weight: 'Weight', model: 'Model', brand: 'Brand', view: 'View',goTo: 'Go to', "delete": 'Delete', lastName: 'Last Name', firstName: 'First Name', curriculum: 'Curriculum',
            languages: 'Languages', skype: 'Skype', phone: 'Phone', patents: 'Patents', language: 'Language', english: 'English', italian: 'Italian', yourProfile: 'Your Profile', name: "Name",
            profile: "Profile", company: 'Company', transportListCode: "Transport List Code", chamberOfCommerce: "Chamber Of Commerce", emails: "E-mail", password: "Password", description: "Description",
            services: "Services", segments: "Segments", areas: "Areas", driver: 'Driver', drivers: 'Drivers', truck: 'Truck', trucks: 'Trucks', trailer: 'Trailer', trailers: 'Trailers', clerks: 'Clerks',
            changePassword: 'Change password', driversList: "Drivers list", driverDetails: "Driver details", trucksList: 'Trucks list', list: "List", vehicleDetails: 'Vehicle details', clerksList: 'Clerks list',
            clerk: 'Clerk', trailersList: 'Trailers list', details:'Details', username: 'Username', birthDate: 'Birth date', title: 'Title', text: 'Testo', loadImage: 'Load image', attached: 'Attached',
            documents: 'Documents', validityDate: 'Validity date', deadLine: 'DeadLine', template: 'Template', returnToList: 'Return to list', files: 'Files', accept:'Accept',
            filesToDownload: 'Files to download', sendRequest:'Send request', searchCompanies: 'Search companies', search: 'Search', expiration: 'Expiration', street: 'Street', district: 'District',  city: 'City',
            province: 'Province', zipCode: 'Zip code', vatNumber: 'Vat number', fax: 'Fax', totalWeight: 'Total weight', email: 'Email', Ratings: 'Ratings', from: 'From', ChangePassword: 'Change password',
            CurrentPassword:'Current password', NewPassword:'New password', ConfirmNewPassword:'Confirm new password', AreYouSureYouWantToDeleteThisRecord: 'Are you sure you want to delete this record',
            AddFiles:'aggiungi files', newPaymentPlan: 'New payment plan', selectTheCurrency: 'select the currency', currency: 'Currency', selectTheType: 'Select the type', rating: 'Rating',
            isLimited: 'Limited rating', newClerk: 'New clerk', newDriver: 'New driver', newTruck: 'New truck', newTrailer: 'New trailer', pricePlan: 'Price plan', visualizationCredit: 'Visualization credit',
            certificationCredit: 'Certification credit', yourCompany: 'Your company', setCertifier: 'Set', vehicleModel: 'Vehicle model', approved: 'Approved' , booleanRating: 'Boolean rating'
        },
    
        actions:{
    //        /*     ***infinite scroll***     */
            getMore: function() {
                if (this.get('loadingMore')) { return; } // don't load new data if we already are
                this.set('loadingMore', true);
    
                this.get('target').send('getMore'); // pass this action up the chain to the events hash on the route
            },
    
            gotMore: function(items, page) {
                this.set('loadingMore', false);
                this.set('page', page);
                //this.pushObjects(items);
            },
    
            /*     ***logout***     */
            logout: function(){
                this.set('grantsValue', null);
                this.set('user_record', null);
                this.set('userId', null);
                this.set('token_pdoc', null);
                this.app_init.set('token_pdoc', this.token_pdoc);
                this.set('username', null);
                this.set('selectedDepot', null);
                this.set('userProfile', null);
                this.set('company', null);
                this.set('companyType', null);
                this.set('isAdmin', null);
    
                localStorage.removeItem('user_record');
                localStorage.removeItem('grantsValue');
                localStorage.removeItem('userId');
                localStorage.removeItem('token_pdoc');
                localStorage.removeItem('username');
                localStorage.removeItem('selectedDepot');
                localStorage.removeItem('userProfile');
                localStorage.removeItem('company');
                localStorage.removeItem('companyType');
                localStorage.removeItem('isAdmin');
    
                localStorage.clear();
                this.transitionToRoute('login/main');
                location.reload();
            }
        },
    
    
    
    
        /*****************************
         * NATIONS
         */
        nations_name: [
            'Afganistan', 'Aland Islands', 'Albania', 'Algeria', 'American Samoa', 'Andorra', 'Angola', 'Anguilla', 'Antigua & Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria',
            'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bonaire','Bosnia-Herzegovina','Botswana',
            'Brazil','British Indian Ocean Territory','British Virgin Islands','Brunei Darussalam','Bulgaria','Burkina Faso','Burundi','Cambodia','Cameroon','Canada',
            'Cape Verde Islands','Cayman Islands','Central African Republic','Chile','China','Christmas Island','Cocos (Keeling) Islands','Colombia','Comoros','Congo (Brazzaville)',
            'Congo (Kinshasa)','Cook Islands','Costa Rica','Croatia','Cuba','Curaçao','Cyprus','Czech Republic','Denmark','Djibouti','Dominica','Dominican Republic','East Timor','Ecuador',
            'Egypt','El Salvador','Equatorial Guinea','Eritrea','Estonia','Ethiopia','Faeroe Islands','Falkland Islands','Fiji','Finland','France','French Guiana','French Polynesia',
            'French Southern Territories','Gabon','Gambia','Georgia','Germany','Ghana','Gibralter','Greece','Greenland','Grenada','Guadeloupe','Guam','Guatemala','Guernsey','Guinea',
            'Guinea-Bissau','Guyana','Haiti','Holy See','Honduras','Hong Kong','Hungary','Iceland','India','Indonesia','Iran','Iraq','Ireland','Isle of Man','Israel','Italy','Ivory Coast',
            'Jamaica','Japan','Jersey','Jordan','Kazakhstan','Kenya','Kiribati','Kosovo','Kuwait','Kyrgyzstan','Laos','Latvia','Lebanon','Lesotho','Liberia','Libya','Liechtenstein',
            'Lithuania','Luxembourg','Macau','Macedonia','Madagascar','Malawi','Malaysia','Maldives','Mali','Malta','Marshall Islands','Martinique','Mauritania','Mauritius','Mayotte','Mexico',
            'Micronesia','Moldova','Monaco','Mongolia','Montenegro','Montserrat','Morocco','Mozambique','Myanmar','Namibia','Nauru','Nepal','Netherlands Antilles','Netherlands','New Caledonia',
            'New Zealand','Nicaragua','Niger','Nigeria','Niue','Norfolk Island','North Korea','Northern Mariana Islands','Norway','Oman','Pakistan','Palau','Palestinian Territories','Panama',
            'Papua New Guinea','Paraguay','Peru','Philippines','Pitcairn Islands','Poland','Portugal','Puerto Rico','Qatar','Romania','Russia','Rwanda','Réunion','Saba','Saint Barthélemy',
            'Saint Christopher & Nevis','Saint Helena','Saint Lucia','Saint Martin','Saint Pierre & Miquelon','Saint Vincent & The Grenadines','Samoa','San Marino','Sao Tome & Principe',
            'Saudi Arabia','Senegal','Serbia','Seychelles','Sierra Leone','Singapore','Sint Eustatius','Sint Maarten','Slovakia','Slovenia','Solomon Islands','Somalia','South Africa',
            'South Georgia & The South Sandwish Islands','South Sudan','Spain','Sri Lanka','Sudan','Suriname','Swaziland','Sweden','Switzerland','Syria','Taiwan','Tajikistan','Thailand','Togo',
            'Tokelau','Tonga','Trinidad & Tobago','Tunisia','Turkey','Turkmenistan','Turks & Caicos Islands','Tuvalu','Uganda','Ukraine','United Arab Emirates','United Kingdom','United States',
            'United States Virgin Islands','Uruguay','Uzbekistan','Vanuatu','Venezuela','Vietnam','Wallis & Futuna','Western Sahara','Yemen','Zambia','Zimbabwe'
        ],
    
    
        nations: Ember['default'].A([
                {
                    id: 1,
                    euname: "AFGHANISTAN",
                    iso3: "AFG",
                    iso2: "AF",
                    grc: "AFG",
                    isonum: "4",
                    country: "Afganistan"
                },
                {
                    id: 2,
                    "linked_country": "Finland",
                    "iso3": "ALA",
                    "iso2": "AX",
                    "grc": "ALA",
                    "isonum": "248",
                    "country": "Aland Islands",
                    "imperitive": "Postal"
                },
                {
                    id: 3,
                    "euname": "Albania",
                    "iso3": "ALB",
                    "iso2": "AL",
                    "grc": "ALB",
                    "isonum": "8",
                    "country": "Albania"
                },
                {
                    id: 4,
                    "euname": "ALGERIA",
                    "iso3": "DZA",
                    "iso2": "DZ",
                    "grc": "ALG",
                    "isonum": "12",
                    "country": "Algeria"
                },
                {
                    id: 5,
                    "linked_country": "United States of America",
                    "iso3": "ASM",
                    "iso2": "AS",
                    "grc": "AMS",
                    "isonum": "16",
                    "country": "American Samoa",
                    "imperitive": "Geographical"
                },
                {
                    id: 6,
                    "euname": "ANDORRA",
                    "iso3": "AND",
                    "iso2": "AD",
                    "grc": "AND",
                    "isonum": "20",
                    "country": "Andorra"
                },
                {
                    id: 7,
                    "euname": "ANGOLA",
                    "iso3": "AGO",
                    "iso2": "AO",
                    "grc": "ANG",
                    "isonum": "24",
                    "country": "Angola"
                },
                {
                    id: 8,
                    "linked_country": "United Kingdom",
                    "iso3": "AIA",
                    "iso2": "AI",
                    "grc": "ANU",
                    "isonum": "660",
                    "country": "Anguilla",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 9,
                    "euname": "ANTIGUA AND BARBUDA",
                    "iso3": "ATG",
                    "iso2": "AG",
                    "grc": "ANT",
                    "isonum": "28",
                    "country": "Antigua & Barbuda"
                },
                {
                    id: 10,
                    "euname": "Argentina",
                    "iso3": "ARG",
                    "iso2": "AR",
                    "grc": "ARG",
                    "isonum": "32",
                    "country": "Argentina"
                },
                {
                    id: 11,
                    "euname": "Armenia",
                    "iso3": "ARM",
                    "iso2": "AM",
                    "grc": "ARM",
                    "isonum": "51",
                    "country": "Armenia"
                },
                {
                    id: 12,
                    "euname": "ARUBA",
                    "linked_country": "Netherlands",
                    "iso3": "ABW",
                    "iso2": "AW",
                    "grc": "ARU",
                    "isonum": "533",
                    "country": "Aruba",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 13,
                    "euname": "Australia",
                    "iso3": "AUS",
                    "iso2": "AU",
                    "grc": "AST",
                    "isonum": "36",
                    "country": "Australia"
                },
                {
                    id: 14,
                    "euname": "Austria",
                    "iso3": "AUT",
                    "iso2": "AT",
                    "grc": "AUS",
                    "isonum": "40",
                    "country": "Austria"
                },
                {
                    id: 15,
                    "euname": "AZERBAIJAN",
                    "iso3": "AZE",
                    "iso2": "AZ",
                    "grc": "AZE",
                    "isonum": "31",
                    "country": "Azerbaijan"
                },
                {
                    id: 16,
                    "euname": "BAHAMAS",
                    "iso3": "BHS",
                    "iso2": "BS",
                    "grc": "BAH",
                    "isonum": "44",
                    "country": "Bahamas"
                },
                {
                    id: 17,
                    "euname": "BAHRAIN",
                    "iso3": "BHR",
                    "iso2": "BH",
                    "grc": "BAR",
                    "isonum": "48",
                    "country": "Bahrain"
                },
                {
                    id: 18,
                    "euname": "BANGLADESH",
                    "iso3": "BGD",
                    "iso2": "BD",
                    "grc": "BAN",
                    "isonum": "50",
                    "country": "Bangladesh"
                },
                {
                    id: 19,
                    "euname": "Barbados",
                    "iso3": "BRB",
                    "iso2": "BB",
                    "grc": "BAB",
                    "isonum": "52",
                    "country": "Barbados"
                },
                {
                    id: 20,
                    "euname": "BELARUS",
                    "iso3": "BLR",
                    "iso2": "BY",
                    "grc": "BEO",
                    "isonum": "112",
                    "country": "Belarus"
                },
                {
                    id: 21,
                    "euname": "Belgium",
                    "iso3": "BEL",
                    "iso2": "BE",
                    "grc": "BEL",
                    "isonum": "56",
                    "country": "Belgium"
                },
                {
                    id: 22,
                    "euname": "BELIZE",
                    "iso3": "BLZ",
                    "iso2": "BZ",
                    "grc": "BEI",
                    "isonum": "84",
                    "country": "Belize"
                },
                {
                    id: 23,
                    "euname": "Benin",
                    "iso3": "BEN",
                    "iso2": "BJ",
                    "grc": "BEN",
                    "isonum": "204",
                    "country": "Benin"
                },
                {
                    id: 24,
                    "linked_country": "United Kingdom",
                    "iso3": "BMU",
                    "iso2": "BM",
                    "grc": "BER",
                    "isonum": "60",
                    "country": "Bermuda",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 25,
                    "euname": "BHUTAN",
                    "iso3": "BTN",
                    "iso2": "BT",
                    "grc": "BHU",
                    "isonum": "64",
                    "country": "Bhutan"
                },
                {
                    id: 26,
                    "euname": "BOLIVIA",
                    "iso3": "BOL",
                    "iso2": "BO",
                    "grc": "BOL",
                    "isonum": "68",
                    "country": "Bolivia"
                },
                {
                    id: 27,
                    "linked_country": "Netherlands",
                    "iso3": "BES",
                    "iso2": "BQ",
                    "grc": "BON",
                    "isonum": "535",
                    "country": "Bonaire",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 28,
                    "euname": "Bosnia-Herzegovina",
                    "iso3": "BIH",
                    "iso2": "BA",
                    "grc": "BOS",
                    "isonum": "70",
                    "country": "Bosnia-Herzegovina"
                },
                {
                    id: 29,
                    "euname": "BOTSWANA",
                    "iso3": "BWA",
                    "iso2": "BW",
                    "grc": "BOT",
                    "isonum": "72",
                    "country": "Botswana"
                },
                {
                    id: 30,
                    "euname": "Brazil",
                    "iso3": "BRA",
                    "iso2": "BR",
                    "grc": "BRA",
                    "isonum": "76",
                    "country": "Brazil"
                },
                {
                    id: 31,
                    "linked_country": "United Kingdom, United States of America",
                    "iso3": "IOT",
                    "iso2": "IO",
                    "grc": "BIO",
                    "isonum": "86",
                    "country": "British Indian Ocean Territory",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 32,
                    "euname": "British Virgin Islands",
                    "linked_country": "United Kingdom",
                    "iso3": "VGB",
                    "iso2": "VG",
                    "grc": "BVI",
                    "isonum": "92",
                    "country": "British Virgin Islands",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 33,
                    "euname": "BRUNEI",
                    "iso3": "BRN",
                    "iso2": "BN",
                    "grc": "BRU",
                    "isonum": "96",
                    "country": "Brunei Darussalam"
                },
                {
                    id: 34,
                    "euname": "Bulgaria",
                    "iso3": "BGR",
                    "iso2": "BG",
                    "grc": "BUL",
                    "isonum": "100",
                    "country": "Bulgaria"
                },
                {
                    id: 35,
                    "euname": "BURKINA FASO",
                    "iso3": "BFA",
                    "iso2": "BF",
                    "grc": "BUK",
                    "isonum": "854",
                    "country": "Burkina Faso"
                },
                {
                    id: 36,
                    "euname": "BURUNDI",
                    "iso3": "BDI",
                    "iso2": "BI",
                    "grc": "BUU",
                    "isonum": "108",
                    "country": "Burundi"
                },
                {
                    id: 37,
                    "euname": "Cambodia",
                    "iso3": "KHM",
                    "iso2": "KH",
                    "grc": "CAM",
                    "isonum": "116",
                    "country": "Cambodia"
                },
                {
                    id: 38,
                    "euname": "Cameroon",
                    "iso3": "CMR",
                    "iso2": "CM",
                    "grc": "CAE",
                    "isonum": "120",
                    "country": "Cameroon"
                },
                {
                    id: 39,
                    "euname": "Canada",
                    "iso3": "CAN",
                    "iso2": "CA",
                    "grc": "CAN",
                    "isonum": "124",
                    "country": "Canada"
                },
                {
                    id: 40,
                    "euname": "CAPE VERDE",
                    "iso3": "CPV",
                    "iso2": "CV",
                    "grc": "CAP",
                    "isonum": "132",
                    "country": "Cape Verde Islands"
                },
                {
                    id: 41,
                    "linked_country": "United Kingdom",
                    "iso3": "CYM",
                    "iso2": "KY",
                    "grc": "CAY",
                    "isonum": "136",
                    "country": "Cayman Islands",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 42,
                    "euname": "CENTRAL AFRICAN, REPUBLIC",
                    "iso3": "CAF",
                    "iso2": "CF",
                    "grc": "CEN",
                    "isonum": "140",
                    "country": "Central African Republic"
                },
                {
                    id: 43,
                    "euname": "Chad",
                    "iso3": "TCD",
                    "iso2": "TD",
                    "grc": "CHA",
                    "isonum": "148",
                    "country": "Chad"
                },
                {
                    id: 44,
                    "euname": "CHILE",
                    "iso3": "CHL",
                    "iso2": "CL",
                    "grc": "CHI",
                    "isonum": "152",
                    "country": "Chile"
                },
                {
                    id: 45,
                    "euname": "CHINA",
                    "iso3": "CHN",
                    "iso2": "CN",
                    "grc": "CHN",
                    "isonum": "156",
                    "country": "China"
                },
                {
                    id: 46,
                    "linked_country": "Australia",
                    "iso3": "CXR",
                    "iso2": "CX",
                    "grc": "CHR",
                    "isonum": "162",
                    "country": "Christmas Island",
                    "imperitive": "Geographical"
                },
                {
                    id: 47,
                    "linked_country": "Australia",
                    "iso3": "CCK",
                    "iso2": "CC",
                    "grc": "COC",
                    "isonum": "166",
                    "country": "Cocos (Keeling) Islands",
                    "imperitive": "Geographical"
                },
                {
                    id: 48,
                    "euname": "Colombia",
                    "iso3": "COL",
                    "iso2": "CO",
                    "grc": "CLO",
                    "isonum": "170",
                    "country": "Colombia"
                },
                {
                    id: 49,
                    "euname": "COMOROS",
                    "iso3": "COM",
                    "iso2": "KM",
                    "grc": "COM",
                    "isonum": "174",
                    "country": "Comoros"
                },
                {
                    id: 50,
                    "euname": "CONGO",
                    "iso3": "COG",
                    "iso2": "CG",
                    "grc": "CNG",
                    "isonum": "178",
                    "country": "Congo (Brazzaville)"
                },
                {
                    id: 51,
                    "euname": "CONGO, DEMOCRATIC REPUBLIC OF",
                    "iso3": "ZAR",
                    "iso2": "CD",
                    "grc": "ZAI",
                    "isonum": "180",
                    "country": "Congo (Kinshasa)"
                },
                {
                    id: 52,
                    "euname": "COOK ISLANDS",
                    "linked_country": "New Zealand",
                    "iso3": "COK",
                    "iso2": "CK",
                    "grc": "COO",
                    "isonum": "184",
                    "country": "Cook Islands",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 53,
                    "euname": "Costa Rica",
                    "iso3": "CRI",
                    "iso2": "CR",
                    "grc": "COS",
                    "isonum": "188",
                    "country": "Costa Rica"
                },
                {
                    id: 54,
                    "euname": "Croatia",
                    "iso3": "HRV",
                    "iso2": "HR",
                    "grc": "CRO",
                    "isonum": "191",
                    "country": "Croatia"
                },
                {
                    id: 55,
                    "euname": "CUBA",
                    "iso3": "CUB",
                    "iso2": "CU",
                    "grc": "CUB",
                    "isonum": "192",
                    "country": "Cuba"
                },
                {
                    id: 56,
                    "linked_country": "Netherlands",
                    "iso3": "CUW",
                    "iso2": "CW",
                    "grc": "CUR",
                    "isonum": "531",
                    "country": "Curaçao",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 57,
                    "euname": "Cyprus",
                    "iso3": "CYP",
                    "iso2": "CY",
                    "grc": "CYP",
                    "isonum": "196",
                    "country": "Cyprus"
                },
                {
                    id: 58,
                    "euname": "Czech Republic",
                    "iso3": "CZE",
                    "iso2": "CZ",
                    "grc": "CZE",
                    "isonum": "203",
                    "country": "Czech Republic"
                },
                {
                    id: 59,
                    "euname": "Denmark",
                    "iso3": "DNK",
                    "iso2": "DK",
                    "grc": "DEN",
                    "isonum": "208",
                    "country": "Denmark"
                },
                {
                    id: 60,
                    "euname": "DJIBOUTI",
                    "iso3": "DJI",
                    "iso2": "DJ",
                    "grc": "DJI",
                    "isonum": "262",
                    "country": "Djibouti"
                },
                {
                    id: 61,
                    "euname": "DOMINIQUE",
                    "iso3": "DMA",
                    "iso2": "DM",
                    "grc": "DOI",
                    "isonum": "212",
                    "country": "Dominica"
                },
                {
                    id: 62,
                    "euname": "Dominican Republic",
                    "iso3": "DOM",
                    "iso2": "DO",
                    "grc": "DOM",
                    "isonum": "214",
                    "country": "Dominican Republic"
                },
                {
                    id: 63,
                    "euname": "EAST TIMOR",
                    "iso3": "TLS",
                    "iso2": "TL",
                    "grc": "ETI",
                    "isonum": "626",
                    "country": "East Timor"
                },
                {
                    id: 64,
                    "euname": "Ecuador",
                    "iso3": "ECU",
                    "iso2": "EC",
                    "grc": "ECU",
                    "isonum": "218",
                    "country": "Ecuador"
                },
                {
                    id: 65,
                    "euname": "EGYPT",
                    "iso3": "EGY",
                    "iso2": "EG",
                    "grc": "EGY",
                    "isonum": "818",
                    "country": "Egypt"
                },
                {
                    id: 66,
                    "euname": "El Salvador",
                    "iso3": "SLV",
                    "iso2": "SV",
                    "grc": "ELS",
                    "isonum": "222",
                    "country": "El Salvador"
                },
                {
                    id: 67,
                    "euname": "EQUATORIAL GUINEA",
                    "iso3": "GNQ",
                    "iso2": "GQ",
                    "grc": "EQA",
                    "isonum": "226",
                    "country": "Equatorial Guinea"
                },
                {
                    id: 68,
                    "euname": "ERITREA",
                    "iso3": "ERI",
                    "iso2": "ER",
                    "grc": "ERI",
                    "isonum": "232",
                    "country": "Eritrea"
                },
                {
                    id: 69,
                    "euname": "Estonia",
                    "iso3": "EST",
                    "iso2": "EE",
                    "grc": "EST",
                    "isonum": "233",
                    "country": "Estonia"
                },
                {
                    id: 70,
                    "euname": "ETHIOPIA",
                    "iso3": "ETH",
                    "iso2": "ET",
                    "grc": "ETH",
                    "isonum": "231",
                    "country": "Ethiopia"
                },
                {
                    id: 71,
                    "euname": "FAROE ISLANDS",
                    "iso3": "FRO",
                    "iso2": "FO",
                    "grc": "FAE",
                    "isonum": "234",
                    "country": "Faeroe Islands"
                },
                {
                    id: 72,
                    "linked_country": "United Kingdom",
                    "iso3": "FLK",
                    "iso2": "FK",
                    "grc": "FAL",
                    "isonum": "238",
                    "country": "Falkland Islands",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 73,
                    "euname": "FIJI",
                    "iso3": "FJI",
                    "iso2": "FJ",
                    "grc": "FIJ",
                    "isonum": "242",
                    "country": "Fiji"
                },
                {
                    id: 74,
                    "euname": "Finland",
                    "iso3": "FIN",
                    "iso2": "FI",
                    "grc": "FIN",
                    "isonum": "246",
                    "country": "Finland"
                },
                {
                    id: 75,
                    "euname": "France",
                    "iso3": "FRA",
                    "iso2": "FR",
                    "grc": "FRA",
                    "isonum": "250",
                    "country": "France"
                },
                {
                    id: 76,
                    "euname": "FRENCH GUYANA",
                    "linked_country": "France",
                    "iso3": "GUF",
                    "iso2": "GF",
                    "grc": "FGU",
                    "isonum": "254",
                    "country": "French Guiana",
                    "imperitive": "Geographical; Telephone"
                },
                {
                    id: 77,
                    "euname": "FRENCH POLYNESIA",
                    "linked_country": "France",
                    "iso3": "PYF",
                    "iso2": "PF",
                    "grc": "FPO",
                    "isonum": "258",
                    "country": "French Polynesia",
                    "imperitive": "Geographical; Currency; Telephone"
                },
                {
                    id: 78,
                    "linked_country": "France",
                    "iso3": "ATF",
                    "iso2": "TF",
                    "grc": "FST",
                    "isonum": "260",
                    "country": "French Southern Territories",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 79,
                    "euname": "GABON",
                    "iso3": "GAB",
                    "iso2": "GA",
                    "grc": "GAB",
                    "isonum": "266",
                    "country": "Gabon"
                },
                {
                    id: 80,
                    "euname": "GAMBIA",
                    "iso3": "GMB",
                    "iso2": "GM",
                    "grc": "GAM",
                    "isonum": "270",
                    "country": "Gambia"
                },
                {
                    id: 81,
                    "euname": "GEORGIA",
                    "iso3": "GEO",
                    "iso2": "GE",
                    "grc": "GEO",
                    "isonum": "268",
                    "country": "Georgia"
                },
                {
                    id: 82,
                    "euname": "Germany",
                    "iso3": "DEU",
                    "iso2": "DE",
                    "grc": "GER",
                    "isonum": "276",
                    "country": "Germany"
                },
                {
                    id: 83,
                    "euname": "Ghana",
                    "iso3": "GHA",
                    "iso2": "GH",
                    "grc": "GHA",
                    "isonum": "288",
                    "country": "Ghana"
                },
                {
                    id: 84,
                    "euname": "GIBRALTAR",
                    "linked_country": "United Kingdom",
                    "iso3": "GIB",
                    "iso2": "GI",
                    "grc": "GIB",
                    "isonum": "292",
                    "country": "Gibralter",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 85,
                    "euname": "Greece",
                    "iso3": "GRC",
                    "iso2": "GR",
                    "grc": "GRE",
                    "isonum": "300",
                    "country": "Greece"
                },
                {
                    id: 86,
                    "euname": "GREENLAND",
                    "linked_country": "Denmark",
                    "iso3": "GRL",
                    "iso2": "GL",
                    "grc": "GRN",
                    "isonum": "304",
                    "country": "Greenland",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 87,
                    "euname": "GRENADA",
                    "iso3": "GRD",
                    "iso2": "GD",
                    "grc": "GRA",
                    "isonum": "308",
                    "country": "Grenada"
                },
                {
                    id: 88,
                    "euname": "GUADELOUPE",
                    "linked_country": "France",
                    "iso3": "GLP",
                    "iso2": "GP",
                    "grc": "GUD",
                    "isonum": "312",
                    "country": "Guadeloupe",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 89,
                    "linked_country": "United States of America",
                    "iso3": "GUM",
                    "iso2": "GU",
                    "grc": "GUM",
                    "isonum": "316",
                    "country": "Guam",
                    "imperitive": "Geographical"
                },
                {
                    id: 90,
                    "euname": "Guatemala",
                    "iso3": "GTM",
                    "iso2": "GT",
                    "grc": "GUA",
                    "isonum": "320",
                    "country": "Guatemala"
                },
                {
                    id: 91,
                    "linked_country": "United Kingdom",
                    "iso3": "GGY",
                    "iso2": "GG",
                    "grc": "GUE",
                    "isonum": "831",
                    "country": "Guernsey",
                    "imperitive": "Postal"
                },
                {
                    id: 92,
                    "euname": "Guinea",
                    "iso3": "GIN",
                    "iso2": "GN",
                    "grc": "GUI",
                    "isonum": "324",
                    "country": "Guinea"
                },
                {
                    id: 93,
                    "euname": "GUINEA BISSAU",
                    "iso3": "GNB",
                    "iso2": "GW",
                    "grc": "GUB",
                    "isonum": "624",
                    "country": "Guinea-Bissau"
                },
                {
                    id: 94,
                    "euname": "GUYANA",
                    "iso3": "GUY",
                    "iso2": "GY",
                    "grc": "GUY",
                    "isonum": "328",
                    "country": "Guyana"
                },
                {
                    id: 95,
                    "euname": "HAITI",
                    "iso3": "HTI",
                    "iso2": "HT",
                    "grc": "HAI",
                    "isonum": "332",
                    "country": "Haiti"
                },
                {
                    id: 96,
                    "euname": "HOLY SEE (VATICAN CITY STATE)",
                    "iso3": "VAT",
                    "iso2": "VA",
                    "grc": "VAT",
                    "isonum": "336",
                    "country": "Holy See"
                },
                {
                    id: 97,
                    "euname": "Honduras",
                    "iso3": "HND",
                    "iso2": "HN",
                    "grc": "HON",
                    "isonum": "340",
                    "country": "Honduras"
                },
                {
                    id: 98,
                    "euname": "Hong Kong",
                    "linked_country": "China",
                    "iso3": "HKG",
                    "iso2": "HK",
                    "grc": "HOK",
                    "isonum": "344",
                    "country": "Hong Kong",
                    "imperitive": "Postal; Currency; Telephone"
                },
                {
                    id: 99,
                    "euname": "Hungary",
                    "iso3": "HUN",
                    "iso2": "HU",
                    "grc": "HUN",
                    "isonum": "348",
                    "country": "Hungary"
                },
                {
                    id: 100,
                    "euname": "Iceland",
                    "iso3": "ISL",
                    "iso2": "IS",
                    "grc": "ICE",
                    "isonum": "352",
                    "country": "Iceland"
                },
                {
                    id: 101,
                    "euname": "India",
                    "iso3": "IND",
                    "iso2": "IN",
                    "grc": "IND",
                    "isonum": "356",
                    "country": "India"
                },
                {
                    id: 102,
                    "euname": "INDONESIA",
                    "iso3": "IDN",
                    "iso2": "ID",
                    "grc": "INO",
                    "isonum": "360",
                    "country": "Indonesia"
                },
                {
                    id: 103,
                    "euname": "IRAN, ISLAMIC REPUBLIC OF",
                    "iso3": "IRN",
                    "iso2": "IR",
                    "grc": "IRA",
                    "isonum": "364",
                    "country": "Iran"
                },
                {
                    id: 104,
                    "euname": "IRAQ",
                    "iso3": "IRQ",
                    "iso2": "IQ",
                    "grc": "IRQ",
                    "isonum": "368",
                    "country": "Iraq"
                },
                {
                    id: 105,
                    "euname": "Ireland",
                    "iso3": "IRL",
                    "iso2": "IE",
                    "grc": "IRE",
                    "isonum": "372",
                    "country": "Ireland"
                },
                {
                    id: 106,
                    "linked_country": "United Kingdom",
                    "iso3": "IMN",
                    "iso2": "IM",
                    "grc": "ISL",
                    "isonum": "833",
                    "country": "Isle of Man",
                    "imperitive": "Postal"
                },
                {
                    id: 107,
                    "euname": "Israel",
                    "iso3": "ISR",
                    "iso2": "IL",
                    "grc": "ISR",
                    "isonum": "376",
                    "country": "Israel"
                },
                {
                    id: 108,
                    "euname": "Italy",
                    "iso3": "ITA",
                    "iso2": "IT",
                    "grc": "ITA",
                    "isonum": "380",
                    "country": "Italy"
                },
                {
                    id: 109,
                    "euname": "COTE D'IVOIRE",
                    "iso3": "CIV",
                    "iso2": "CI",
                    "grc": "IVO",
                    "isonum": "384",
                    "country": "Ivory Coast"
                },
                {
                    id: 110,
                    "euname": "Jamaica",
                    "iso3": "JAM",
                    "iso2": "JM",
                    "grc": "JAM",
                    "isonum": "388",
                    "country": "Jamaica"
                },
                {
                    id: 111,
                    "euname": "Japan",
                    "iso3": "JPN",
                    "iso2": "JP",
                    "grc": "JAP",
                    "isonum": "392",
                    "country": "Japan"
                },
                {
                    id: 112,
                    "euname": "JERSEY",
                    "linked_country": "United Kingdom",
                    "iso3": "JEY",
                    "iso2": "JE",
                    "grc": "JER",
                    "isonum": "832",
                    "country": "Jersey",
                    "imperitive": "Postal"
                },
                {
                    id: 113,
                    "euname": "JORDAN",
                    "iso3": "JOR",
                    "iso2": "JO",
                    "grc": "JOR",
                    "isonum": "400",
                    "country": "Jordan"
                },
                {
                    id: 114,
                    "euname": "KAZAKHSTAN",
                    "iso3": "KAZ",
                    "iso2": "KZ",
                    "grc": "KAZ",
                    "isonum": "398",
                    "country": "Kazakhstan"
                },
                {
                    id: 115,
                    "euname": "Kenya",
                    "iso3": "KEN",
                    "iso2": "KE",
                    "grc": "KEN",
                    "isonum": "404",
                    "country": "Kenya"
                },
                {
                    id: 116,
                    "euname": "KIRIBATI",
                    "iso3": "KIR",
                    "iso2": "KI",
                    "grc": "KII",
                    "isonum": "296",
                    "country": "Kiribati"
                },
                {
                    id: 117,
                    "linked_country": "Serbia",
                    "iso3": "KOS",
                    "grc": "KOS",
                    "country": "Kosovo",
                    "imperitive": "Postal; Currency; Telephone"
                },
                {
                    id: 118,
                    "euname": "KUWAIT",
                    "iso3": "KWT",
                    "iso2": "KW",
                    "grc": "KUW",
                    "isonum": "414",
                    "country": "Kuwait"
                },
                {
                    id: 119,
                    "euname": "KYRGYZSTAN",
                    "iso3": "KGZ",
                    "iso2": "KG",
                    "grc": "KIR",
                    "isonum": "417",
                    "country": "Kyrgyzstan"
                },
                {
                    id: 120,
                    "euname": "LAOS, PEOPLE'S DEMOCRATIC REPUBLIC",
                    "iso3": "LAO",
                    "iso2": "LA",
                    "grc": "LAO",
                    "isonum": "418",
                    "country": "Laos"
                },
                {
                    id: 121,
                    "euname": "Latvia",
                    "iso3": "LVA",
                    "iso2": "LV",
                    "grc": "LAT",
                    "isonum": "428",
                    "country": "Latvia"
                },
                {
                    id: 122,
                    "euname": "LEBANON",
                    "iso3": "LBN",
                    "iso2": "LB",
                    "grc": "LEB",
                    "isonum": "422",
                    "country": "Lebanon"
                },
                {
                    id: 123,
                    "euname": "LESOTHO",
                    "iso3": "LSO",
                    "iso2": "LS",
                    "grc": "LES",
                    "isonum": "426",
                    "country": "Lesotho"
                },
                {
                    id: 124,
                    "euname": "LIBERIA",
                    "iso3": "LBR",
                    "iso2": "LR",
                    "grc": "LIR",
                    "isonum": "430",
                    "country": "Liberia"
                },
                {
                    id: 125,
                    "euname": "LIBYA",
                    "iso3": "LBY",
                    "iso2": "LY",
                    "grc": "LIB",
                    "isonum": "434",
                    "country": "Libya"
                },
                {
                    id: 126,
                    "euname": "LIECHTENSTEIN",
                    "iso3": "LIE",
                    "iso2": "LI",
                    "grc": "LIE",
                    "isonum": "438",
                    "country": "Liechtenstein"
                },
                {
                    id: 127,
                    "euname": "LITUANIA",
                    "iso3": "LTU",
                    "iso2": "LT",
                    "grc": "LIT",
                    "isonum": "440",
                    "country": "Lithuania"
                },
                {
                    id: 128,
                    "euname": "Luxembourg",
                    "iso3": "LUX",
                    "iso2": "LU",
                    "grc": "LUX",
                    "isonum": "442",
                    "country": "Luxembourg"
                },
                {
                    id: 129,
                    "euname": "MACAO",
                    "linked_country": "China",
                    "iso3": "MAC",
                    "iso2": "MO",
                    "grc": "MCA",
                    "isonum": "446",
                    "country": "Macau",
                    "imperitive": "Postal; Currency; Telephone"
                },
                {
                    id: 130,
                    "euname": "MACEDONIA, FORMER YUGOSLAV REPUBLIC OF",
                    "iso3": "MKD",
                    "iso2": "MK",
                    "grc": "MCE",
                    "isonum": "807",
                    "country": "Macedonia"
                },
                {
                    id: 131,
                    "euname": "MADAGASCAR",
                    "iso3": "MDG",
                    "iso2": "MG",
                    "grc": "MAD",
                    "isonum": "450",
                    "country": "Madagascar"
                },
                {
                    id: 132,
                    "euname": "MALAWI",
                    "iso3": "MWI",
                    "iso2": "MW",
                    "grc": "MAW",
                    "isonum": "454",
                    "country": "Malawi"
                },
                {
                    id: 133,
                    "euname": "Malaysia",
                    "iso3": "MYS",
                    "iso2": "MY",
                    "grc": "MAA",
                    "isonum": "458",
                    "country": "Malaysia"
                },
                {
                    id: 134,
                    "euname": "MALDIVES",
                    "iso3": "MDV",
                    "iso2": "MV",
                    "grc": "MAV",
                    "isonum": "462",
                    "country": "Maldives"
                },
                {
                    id: 135,
                    "euname": "MALI",
                    "iso3": "MLI",
                    "iso2": "ML",
                    "grc": "MAI",
                    "isonum": "466",
                    "country": "Mali"
                },
                {
                    id: 136,
                    "euname": "Malta",
                    "iso3": "MLT",
                    "iso2": "MT",
                    "grc": "MAL",
                    "isonum": "470",
                    "country": "Malta"
                },
                {
                    id: 137,
                    "euname": "MARSHALL ISLANDS",
                    "iso3": "MHL",
                    "iso2": "MH",
                    "grc": "MAR",
                    "isonum": "584",
                    "country": "Marshall Islands"
                },
                {
                    id: 138,
                    "euname": "MARTINIQUE",
                    "linked_country": "France",
                    "iso3": "MTQ",
                    "iso2": "MQ",
                    "grc": "MAN",
                    "isonum": "474",
                    "country": "Martinique",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 139,
                    "euname": "Mauritania",
                    "iso3": "MRT",
                    "iso2": "MR",
                    "grc": "MAU",
                    "isonum": "478",
                    "country": "Mauritania"
                },
                {
                    id: 140,
                    "euname": "MAURITIUS",
                    "iso3": "MUS",
                    "iso2": "MU",
                    "grc": "MAT",
                    "isonum": "480",
                    "country": "Mauritius"
                },
                {
                    id: 141,
                    "euname": "MAYOTTE",
                    "linked_country": "France",
                    "iso3": "MYT",
                    "iso2": "YT",
                    "grc": "MAY",
                    "isonum": "175",
                    "country": "Mayotte",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 142,
                    "euname": "Mexico",
                    "iso3": "MEX",
                    "iso2": "MX",
                    "grc": "MEX",
                    "isonum": "484",
                    "country": "Mexico"
                },
                {
                    id: 143,
                    "euname": "MICRONESIA, FEDERATED STATES OF",
                    "iso3": "FSM",
                    "iso2": "FM",
                    "grc": "MIC",
                    "isonum": "583",
                    "country": "Micronesia"
                },
                {
                    id: 144,
                    "euname": "MOLDOVA, REPUBLIC OF",
                    "iso3": "MDA",
                    "iso2": "MD",
                    "grc": "MOL",
                    "isonum": "498",
                    "country": "Moldova"
                },
                {
                    id: 145,
                    "euname": "Monaco",
                    "iso3": "MCO",
                    "iso2": "MC",
                    "grc": "MON",
                    "isonum": "492",
                    "country": "Monaco"
                },
                {
                    id: 146,
                    "euname": "MONGOLIA",
                    "iso3": "MNG",
                    "iso2": "MN",
                    "grc": "MOG",
                    "isonum": "496",
                    "country": "Mongolia"
                },
                {
                    id: 147,
                    "euname": "Montenegro",
                    "iso3": "MNE",
                    "iso2": "ME",
                    "grc": "MOE",
                    "isonum": "499",
                    "country": "Montenegro"
                },
                {
                    id: 148,
                    "linked_country": "United Kingdom",
                    "iso3": "MSR",
                    "iso2": "MS",
                    "grc": "MOT",
                    "isonum": "500",
                    "country": "Montserrat",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 149,
                    "euname": "Morocco",
                    "iso3": "MAR",
                    "iso2": "MA",
                    "grc": "MOR",
                    "isonum": "504",
                    "country": "Morocco"
                },
                {
                    id: 150,
                    "euname": "Mozambique",
                    "iso3": "MOZ",
                    "iso2": "MZ",
                    "grc": "MOZ",
                    "isonum": "508",
                    "country": "Mozambique"
                },
                {
                    id: 151,
                    "euname": "Myanmar",
                    "iso3": "MMR",
                    "iso2": "MM",
                    "grc": "BUR",
                    "isonum": "104",
                    "country": "Myanmar"
                },
                {
                    id: 152,
                    "euname": "NAMIBIA",
                    "iso3": "NAM",
                    "iso2": "NA",
                    "grc": "NAM",
                    "isonum": "516",
                    "country": "Namibia"
                },
                {
                    id: 153,
                    "euname": "NAURU",
                    "iso3": "NRU",
                    "iso2": "NR",
                    "grc": "NAU",
                    "isonum": "520",
                    "country": "Nauru"
                },
                {
                    id: 154,
                    "euname": "NEPAL",
                    "iso3": "NPL",
                    "iso2": "NP",
                    "grc": "NEP",
                    "isonum": "524",
                    "country": "Nepal"
                },
                {
                    id: 155,
                    "euname": "Netherlands Antilles",
                    "iso3": "ANT",
                    "iso2": "AN",
                    "grc": "NAN",
                    "isonum": "530",
                    "country": "Netherlands Antilles",
                    "imperitive": "Legacy"
                },
                {
                    id: 156,
                    "euname": "Netherlands",
                    "iso3": "NLD",
                    "iso2": "NL",
                    "grc": "NET",
                    "isonum": "528",
                    "country": "Netherlands"
                },
                {
                    id: 157,
                    "euname": "NEW CALEDONIA",
                    "linked_country": "France",
                    "iso3": "NCL",
                    "iso2": "NC",
                    "grc": "NCA",
                    "isonum": "540",
                    "country": "New Caledonia",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 158,
                    "euname": "NEW ZEALAND",
                    "iso3": "NZL",
                    "iso2": "NZ",
                    "grc": "NEW",
                    "isonum": "554",
                    "country": "New Zealand"
                },
                {
                    id: 159,
                    "euname": "Nicaragua",
                    "iso3": "NIC",
                    "iso2": "NI",
                    "grc": "NIC",
                    "isonum": "558",
                    "country": "Nicaragua"
                },
                {
                    id: 160,
                    "euname": "Niger",
                    "iso3": "NER",
                    "iso2": "NE",
                    "grc": "NIE",
                    "isonum": "562",
                    "country": "Niger"
                },
                {
                    id: 161,
                    "euname": "Nigeria",
                    "iso3": "NGA",
                    "iso2": "NG",
                    "grc": "NIG",
                    "isonum": "566",
                    "country": "Nigeria"
                },
                {
                    id: 162,
                    "euname": "NIUE",
                    "iso3": "NIU",
                    "iso2": "NU",
                    "grc": "NIU",
                    "isonum": "570",
                    "country": "Niue"
                },
                {
                    id: 163,
                    "linked_country": "Australia",
                    "iso3": "NFK",
                    "iso2": "NF",
                    "grc": "NOF",
                    "isonum": "574",
                    "country": "Norfolk Island",
                    "imperitive": "Geographical; Telephone"
                },
                {
                    id: 164,
                    "euname": "KOREA, PEOPLE'S DEMOCRATIC REPUBLIC OF",
                    "iso3": "PRK",
                    "iso2": "KP",
                    "grc": "NKO",
                    "isonum": "408",
                    "country": "North Korea"
                },
                {
                    id: 165,
                    "linked_country": "United States of America",
                    "iso3": "MNP",
                    "iso2": "MP",
                    "grc": "NMI",
                    "isonum": "580",
                    "country": "Northern Mariana Islands",
                    "imperitive": "Geographical"
                },
                {
                    id: 166,
                    "euname": "Norway",
                    "iso3": "NOR",
                    "iso2": "NO",
                    "grc": "NOR",
                    "isonum": "578",
                    "country": "Norway"
                },
                {
                    id: 167,
                    "euname": "OMAN",
                    "iso3": "OMN",
                    "iso2": "OM",
                    "grc": "OMA",
                    "isonum": "512",
                    "country": "Oman"
                },
                {
                    id: 168,
                    "euname": "Pakistan",
                    "iso3": "PAK",
                    "iso2": "PK",
                    "grc": "PAK",
                    "isonum": "586",
                    "country": "Pakistan"
                },
                {
                    id: 169,
                    "euname": "PALAU",
                    "iso3": "PLW",
                    "iso2": "PW",
                    "grc": "PAL",
                    "isonum": "585",
                    "country": "Palau"
                },
                {
                    id: 170,
                    "euname": "PALESTINIAN OCCUPIED TERRITORY",
                    "linked_country": "Israel",
                    "iso3": "PSE",
                    "iso2": "PS",
                    "grc": "PLA",
                    "isonum": "275",
                    "country": "Palestinian Territories"
                },
                {
                    id: 171,
                    "euname": "PANAMA",
                    "iso3": "PAN",
                    "iso2": "PA",
                    "grc": "PAN",
                    "isonum": "591",
                    "country": "Panama"
                },
                {
                    id: 172,
                    "euname": "PAPUA NEW GUINEA",
                    "iso3": "PNG",
                    "iso2": "PG",
                    "grc": "PAP",
                    "isonum": "598",
                    "country": "Papua New Guinea"
                },
                {
                    id: 173,
                    "euname": "PARAGUAY",
                    "iso3": "PRY",
                    "iso2": "PY",
                    "grc": "PAR",
                    "isonum": "600",
                    "country": "Paraguay"
                },
                {
                    id: 174,
                    "euname": "PERU",
                    "iso3": "PER",
                    "iso2": "PE",
                    "grc": "PER",
                    "isonum": "604",
                    "country": "Peru"
                },
                {
                    id: 175,
                    "euname": "Philippines",
                    "iso3": "PHL",
                    "iso2": "PH",
                    "grc": "PHI",
                    "isonum": "608",
                    "country": "Philippines"
                },
                {
                    id: 176,
                    "linked_country": "United Kingdom",
                    "iso3": "PCN",
                    "iso2": "PN",
                    "grc": "PIT",
                    "isonum": "612",
                    "country": "Pitcairn Islands",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 177,
                    "euname": "Poland",
                    "iso3": "POL",
                    "iso2": "PL",
                    "grc": "POL",
                    "isonum": "616",
                    "country": "Poland"
                },
                {
                    id: 178,
                    "euname": "Portugal",
                    "iso3": "PRT",
                    "iso2": "PT",
                    "grc": "POR",
                    "isonum": "620",
                    "country": "Portugal"
                },
                {
                    id: 179,
                    "euname": "PUERTO RICO",
                    "linked_country": "United States",
                    "iso3": "PRI",
                    "iso2": "PR",
                    "grc": "PUE",
                    "isonum": "630",
                    "country": "Puerto Rico",
                    "imperitive": "Geographical"
                },
                {
                    id: 180,
                    "euname": "QATAR",
                    "iso3": "QAT",
                    "iso2": "QA",
                    "grc": "QAT",
                    "isonum": "634",
                    "country": "Qatar"
                },
                {
                    id: 181,
                    "euname": "Romania",
                    "iso3": "ROU",
                    "iso2": "RO",
                    "grc": "ROM",
                    "isonum": "642",
                    "country": "Romania"
                },
                {
                    id: 182,
                    "euname": "RUSSIA, FEDERATION OF",
                    "iso3": "RUS",
                    "iso2": "RU",
                    "grc": "RUS",
                    "isonum": "643",
                    "country": "Russia"
                },
                {
                    id: 183,
                    "euname": "RUANDA",
                    "iso3": "RWA",
                    "iso2": "RW",
                    "grc": "RWA",
                    "isonum": "646",
                    "country": "Rwanda"
                },
                {
                    id: 184,
                    "euname": "REUNION",
                    "linked_country": "France",
                    "iso3": "REU",
                    "iso2": "RE",
                    "grc": "REU",
                    "isonum": "638",
                    "country": "Réunion",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 185,
                    "linked_country": "The Netherlands",
                    "iso3": "BES",
                    "iso2": "BQ",
                    "grc": "SAB",
                    "isonum": "535",
                    "country": "Saba",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 186,
                    "linked_country": "France",
                    "iso3": "BLM",
                    "iso2": "BL",
                    "grc": "STB",
                    "isonum": "652",
                    "country": "Saint Barthélemy",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 187,
                    "euname": "SAINT KITTS AND NEVIS",
                    "iso3": "KNA",
                    "iso2": "KN",
                    "grc": "STC",
                    "isonum": "659",
                    "country": "Saint Christopher & Nevis"
                },
                {
                    id: 188,
                    "linked_country": "United Kingdom",
                    "iso3": "SHN",
                    "iso2": "SH",
                    "grc": "STH",
                    "isonum": "654",
                    "country": "Saint Helena",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 189,
                    "euname": "SAINT LUCIA",
                    "iso3": "LCA",
                    "iso2": "LC",
                    "grc": "STL",
                    "isonum": "662",
                    "country": "Saint Lucia"
                },
                {
                    id: 190,
                    "linked_country": "France",
                    "iso3": "MAF",
                    "iso2": "MF",
                    "grc": "STM",
                    "isonum": "663",
                    "country": "Saint Martin",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 191,
                    "linked_country": "France",
                    "iso3": "SPM",
                    "iso2": "PM",
                    "grc": "SPM",
                    "isonum": "666",
                    "country": "Saint Pierre & Miquelon",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 192,
                    "euname": "SAINT VINCENT AND THE GRENADINES",
                    "iso3": "VCT",
                    "iso2": "VC",
                    "grc": "STV",
                    "isonum": "670",
                    "country": "Saint Vincent & The Grenadines"
                },
                {
                    id: 193,
                    "euname": "SAMOA",
                    "iso3": "WSM",
                    "iso2": "WS",
                    "grc": "WSM",
                    "isonum": "882",
                    "country": "Samoa"
                },
                {
                    id: 194,
                    "euname": "SAINT MARINO",
                    "iso3": "SMR",
                    "iso2": "SM",
                    "grc": "SAN",
                    "isonum": "674",
                    "country": "San Marino"
                },
                {
                    id: 195,
                    "euname": "SAO TOME AND PRINCIPE",
                    "iso3": "STP",
                    "iso2": "ST",
                    "grc": "SAO",
                    "isonum": "678",
                    "country": "Sao Tome & Principe"
                },
                {
                    id: 196,
                    "euname": "SUADI ARABIA",
                    "iso3": "SAU",
                    "iso2": "SA",
                    "grc": "SAU",
                    "isonum": "682",
                    "country": "Saudi Arabia"
                },
                {
                    id: 197,
                    "euname": "Senegal",
                    "iso3": "SEN",
                    "iso2": "SN",
                    "grc": "SEN",
                    "isonum": "686",
                    "country": "Senegal"
                },
                {
                    id: 198,
                    "euname": "Serbia",
                    "iso3": "SRB",
                    "iso2": "RS",
                    "grc": "YUG",
                    "isonum": "688",
                    "country": "Serbia"
                },
                {
                    id: 199,
                    "euname": "SEYCHELLES",
                    "iso3": "SYC",
                    "iso2": "SC",
                    "grc": "SEY",
                    "isonum": "690",
                    "country": "Seychelles"
                },
                {
                    id: 200,
                    "euname": "SIERRA LEONE",
                    "iso3": "SLE",
                    "iso2": "SL",
                    "grc": "SIE",
                    "isonum": "694",
                    "country": "Sierra Leone"
                },
                {
                    id: 201,
                    "euname": "SINGAPORE",
                    "iso3": "SGP",
                    "iso2": "SG",
                    "grc": "SIN",
                    "isonum": "702",
                    "country": "Singapore"
                },
                {
                    id: 202,
                    "linked_country": "The Netherlands",
                    "iso3": "BES",
                    "iso2": "BQ",
                    "grc": "STE",
                    "isonum": "535",
                    "country": "Sint Eustatius",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 203,
                    "linked_country": "The Netherlands",
                    "iso3": "SXM",
                    "iso2": "SX",
                    "grc": "SMA",
                    "isonum": "534",
                    "country": "Sint Maarten",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 204,
                    "euname": "Slovakia",
                    "iso3": "SVK",
                    "iso2": "SK",
                    "grc": "SLO",
                    "isonum": "703",
                    "country": "Slovakia"
                },
                {
                    id: 205,
                    "euname": "Slovenia",
                    "iso3": "SVN",
                    "iso2": "SI",
                    "grc": "SLV",
                    "isonum": "705",
                    "country": "Slovenia"
                },
                {
                    id: 206,
                    "euname": "SOLOMON ISLANDS",
                    "iso3": "SLB",
                    "iso2": "SB",
                    "grc": "SOL",
                    "isonum": "90",
                    "country": "Solomon Islands"
                },
                {
                    id: 207,
                    "euname": "SOMALIA",
                    "iso3": "SOM",
                    "iso2": "SO",
                    "grc": "SOM",
                    "isonum": "706",
                    "country": "Somalia"
                },
                {
                    id: 208,
                    "euname": "South Africa",
                    "iso3": "ZAF",
                    "iso2": "ZA",
                    "grc": "SAF",
                    "isonum": "710",
                    "country": "South Africa"
                },
                {
                    id: 209,
                    "linked_country": "United Kingdom",
                    "iso3": "SGS",
                    "iso2": "GS",
                    "grc": "SGE",
                    "isonum": "239",
                    "country": "South Georgia & The South Sandwish Islands",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 210,
                    "euname": "KOREA, REPUBLIC OF",
                    "iso3": "KOR",
                    "iso2": "KR",
                    "grc": "SKO",
                    "isonum": "418",
                    "country": "South Korea"
                },
                {
                    id: 211,
                    "euname": "SOUTH SUDAN",
                    "iso3": "SSD",
                    "iso2": "SS",
                    "grc": "SSU",
                    "country": "South Sudan"
                },
                {
                    id: 212,
                    "euname": "Spain",
                    "iso3": "ESP",
                    "iso2": "ES",
                    "grc": "SPA",
                    "isonum": "724",
                    "country": "Spain"
                },
                {
                    id: 213,
                    "euname": "SRI LANKA",
                    "iso3": "LKA",
                    "iso2": "LK",
                    "grc": "SRI",
                    "isonum": "144",
                    "country": "Sri Lanka"
                },
                {
                    id: 214,
                    "euname": "Sudan",
                    "iso3": "SDN",
                    "iso2": "SD",
                    "grc": "SUD",
                    "isonum": "736",
                    "country": "Sudan"
                },
                {
                    id: 215,
                    "euname": "SURINAM",
                    "iso3": "SUR",
                    "iso2": "SR",
                    "grc": "SUR",
                    "isonum": "740",
                    "country": "Suriname"
                },
                {
                    id: 216,
                    "euname": "SWAZILAND",
                    "iso3": "SWZ",
                    "iso2": "SZ",
                    "grc": "SWA",
                    "isonum": "748",
                    "country": "Swaziland"
                },
                {
                    id: 217,
                    "euname": "Sweden",
                    "iso3": "SWE",
                    "iso2": "SE",
                    "grc": "SWE",
                    "isonum": "752",
                    "country": "Sweden"
                },
                {
                    id: 218,
                    "euname": "Switzerland",
                    "iso3": "CHE",
                    "iso2": "CH",
                    "grc": "SWI",
                    "isonum": "756",
                    "country": "Switzerland"
                },
                {
                    id: 219,
                    "euname": "SYRIA, ARAB REPUBLIC",
                    "iso3": "SYR",
                    "iso2": "SY",
                    "grc": "SYR",
                    "isonum": "760",
                    "country": "Syria"
                },
                {
                    id: 220,
                    "euname": "TAIWAN",
                    "linked_country": "China",
                    "iso3": "TWN",
                    "iso2": "TW",
                    "grc": "TAI",
                    "isonum": "158",
                    "country": "Taiwan"
                },
                {
                    id: 221,
                    "euname": "TAJIKISTAN",
                    "iso3": "TJK",
                    "iso2": "TJ",
                    "grc": "TAJ",
                    "isonum": "762",
                    "country": "Tajikistan"
                },
                {
                    id: 222,
                    "euname": "TANZANIA, UNITED RE UBLIC OF",
                    "iso3": "TZA",
                    "iso2": "TZ",
                    "grc": "TAN",
                    "isonum": "834",
                    "country": "Tanzania"
                },
                {
                    id: 223,
                    "euname": "THAILAND",
                    "iso3": "THA",
                    "iso2": "TH",
                    "grc": "THA",
                    "isonum": "764",
                    "country": "Thailand"
                },
                {
                    id: 224,
                    "euname": "TOGO",
                    "iso3": "TGO",
                    "iso2": "TG",
                    "grc": "TOG",
                    "isonum": "768",
                    "country": "Togo"
                },
                {
                    id: 225,
                    "linked_country": "New Zealand",
                    "iso3": "TKL",
                    "iso2": "TK",
                    "grc": "TOK",
                    "isonum": "772",
                    "country": "Tokelau",
                    "imperitive": "Geographical; Postal; Telephone"
                },
                {
                    id: 226,
                    "euname": "TONGA",
                    "iso3": "TON",
                    "iso2": "TO",
                    "grc": "TON",
                    "isonum": "776",
                    "country": "Tonga"
                },
                {
                    id: 227,
                    "euname": "TRINIDAD AND TOBAGO",
                    "iso3": "TTO",
                    "iso2": "TT",
                    "grc": "TRI",
                    "isonum": "780",
                    "country": "Trinidad & Tobago"
                },
                {
                    id: 228,
                    "euname": "Tunisia",
                    "iso3": "TUN",
                    "iso2": "TN",
                    "grc": "TUN",
                    "isonum": "788",
                    "country": "Tunisia"
                },
                {
                    id: 229,
                    "euname": "Turkey",
                    "iso3": "TUR",
                    "iso2": "TR",
                    "grc": "TUR",
                    "isonum": "792",
                    "country": "Turkey"
                },
                {
                    id: 230,
                    "euname": "TURKMENISTAN",
                    "iso3": "TKM",
                    "iso2": "TM",
                    "grc": "TUK",
                    "isonum": "795",
                    "country": "Turkmenistan"
                },
                {
                    id: 231,
                    "linked_country": "United Kingdom",
                    "iso3": "TCA",
                    "iso2": "TC",
                    "grc": "TUC",
                    "isonum": "796",
                    "country": "Turks & Caicos Islands",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 232,
                    "euname": "TUVALU",
                    "iso3": "TUV",
                    "iso2": "TV",
                    "grc": "TUV",
                    "isonum": "798",
                    "country": "Tuvalu"
                },
                {
                    id: 233,
                    "euname": "Uganda",
                    "iso3": "UGA",
                    "iso2": "UG",
                    "grc": "UGA",
                    "isonum": "800",
                    "country": "Uganda"
                },
                {
                    id: 234,
                    "euname": "Ukraine",
                    "iso3": "UKR",
                    "iso2": "UA",
                    "grc": "UKR",
                    "isonum": "804",
                    "country": "Ukraine"
                },
                {
                    id: 235,
                    "euname": "United Arab Emirates",
                    "iso3": "ARE",
                    "iso2": "AE",
                    "grc": "UAE",
                    "isonum": "784",
                    "country": "United Arab Emirates"
                },
                {
                    id: 236,
                    "euname": "United Kingdom",
                    "iso3": "GBR",
                    "iso2": "GB",
                    "grc": "UNI",
                    "isonum": "826",
                    "country": "United Kingdom"
                },
                {
                    id: 237,
                    "euname": "United States",
                    "iso3": "USA",
                    "iso2": "US",
                    "grc": "USA",
                    "isonum": "840",
                    "country": "United States"
                },
                {
                    id: 238,
                    "euname": "US VIRGIN ISLANDS",
                    "linked_country": "United States of America",
                    "iso3": "VIR",
                    "iso2": "VI",
                    "grc": "VIR",
                    "isonum": "850",
                    "country": "United States Virgin Islands",
                    "imperitive": "Geographical"
                },
                {
                    id: 239,
                    "euname": "URUGUAY",
                    "iso3": "URY",
                    "iso2": "UY",
                    "grc": "URU",
                    "isonum": "858",
                    "country": "Uruguay"
                },
                {
                    id: 240,
                    "euname": "UZBEKISTAN",
                    "iso3": "UZB",
                    "iso2": "UZ",
                    "grc": "UZB",
                    "isonum": "860",
                    "country": "Uzbekistan"
                },
                {
                    id: 241,
                    "euname": "VANUATU",
                    "iso3": "VUT",
                    "iso2": "VU",
                    "grc": "VAN",
                    "isonum": "548",
                    "country": "Vanuatu"
                },
                {
                    id: 242,
                    "euname": "VENEZUELA",
                    "iso3": "VEN",
                    "iso2": "VE",
                    "grc": "VEN",
                    "isonum": "862",
                    "country": "Venezuela"
                },
                {
                    id: 243,
                    "euname": "VIETNAM",
                    "iso3": "VNM",
                    "iso2": "VN",
                    "grc": "VIE",
                    "isonum": "704",
                    "country": "Vietnam"
                },
                {
                    id: 244,
                    "linked_country": "France",
                    "iso3": "WLF",
                    "iso2": "WF",
                    "grc": "WAL",
                    "isonum": "876",
                    "country": "Wallis & Futuna",
                    "imperitive": "Geographical; Postal; Currency; Telephone"
                },
                {
                    id: 245,
                    "euname": "WESTERN SAHARA",
                    "linked_country": "Morocco",
                    "iso3": "ESH",
                    "iso2": "EH",
                    "grc": "WSA",
                    "isonum": "732",
                    "country": "Western Sahara",
                    "imperitive": "Political"
                },
                {
                    id: 246,
                    "euname": "Yemen",
                    "iso3": "YEM",
                    "iso2": "YE",
                    "grc": "YEM",
                    "isonum": "887",
                    "country": "Yemen"
                },
                {
                    id: 247,
                    "euname": "ZAMBIA",
                    "iso3": "ZMB",
                    "iso2": "ZM",
                    "grc": "ZAM",
                    "isonum": "894",
                    "country": "Zambia"
                },
                {
                    id: 248,
                    "euname": "ZIMBABWE",
                    "iso3": "ZWE",
                    "iso2": "ZW",
                    "grc": "ZIM",
                    "isonum": "716",
                    "country": "Zimbabwe"
                }
            ])
    
    
    });
    
    //unique function
    Array.prototype.unique = function () {
        var r = [];
        o:for(var i = 0, n = this.length; i < n; i++)
        {
            for(var x = 0, y = r.length; x < y; x++)
            {
                if(r[x]===this[i])
                {
                    continue o;
                }
            }
            r[r.length] = this[i];
        }
        return r;
    };

});
define('p-doc/controllers/dashboard/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].ArrayController.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
    
        postTitle: null,
        postDescription: null,
    
        orderedPosts: null
    });

});
define('p-doc/controllers/link/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].ObjectController.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
    
        view_new_link: false,
        company_to_link: null
    });

});
define('p-doc/controllers/login/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Controller.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
    
        myList: [],
        newLog: 0,
        companyTypeList: [
            'carrier',
            'shipper',
            'supplier',
            'certifier'
        ],
    
        lan_it: {
            language: 'Lingua', english: 'Inglese', italian: 'Italiano', signUp: 'Registrati', login: 'Autenticati', backToLogin: 'Indietro', email: 'E-mail', password: 'Password',
            userName: 'Username', lastName: 'Cognome', firstName: 'Nome', selectACompanyType: 'Seleziona una tipo di società', selectACompany: 'Seleziona una società', zipCode: 'CAP',
            city: 'Città', street: 'Via', vatNumber: 'Cod. fiscale', name: 'Nome', newCompany: 'Nuova società', newUser: 'Nouvo utente', privacy: 'Privacy', terms: 'Termini', about: 'Chi siamo'
        },
        lan_en: {
            language: 'Language', english: 'English', italian: 'Italian', signUp: 'Sign up', login: 'Login', backToLogin: 'Back to login', email: 'E-mail', password: 'Password',
            userName: 'Username', lastName: 'Last name', firstName: 'First name', selectACompanyType: 'Select a company type', selectACompany: 'Select a company', zipCode: 'Zip code',
            city: 'City', street: 'Street', vatNumber: 'Vat number', name: 'Name', newCompany: 'New company', newUser: 'New user', privacy: 'Privacy', terms: 'Terms', about: 'About'
        },
    
        translationType: function(){
            switch(this.isEnglish){
                case 'english':
                    return this.lan_en.english;
                case 'italian':
                    return this.lan_it.italian;
                default:
                    return this.lan_en.english;
            }
        }.property('isEnglish'),
    
        isEnglish: 'default',
        translation: function(){
            switch(this.isEnglish){
                case 'english':
                    return this.lan_en;
                case 'italian':
                    return this.lan_it;
                default:
                    return this.lan_en;
            }
        }.property('isEnglish'),
    
        reset: function() {
            this.get('controllers.application').set('is_login', true);
            this.setProperties({
                username: '',
                password: '',
                //errorMessage: '',
                newLog: 0,
                firstName: '',
                lastName: '',
                pwd:'',
                userEmail: '',
                name:'',
                vatNumber: '',
                street: '',
                city: '',
                zipCode: '',
                country: '',
                email: '',
                companyType: 'client'
            });
        },
        actions:{
            login: function() {
    
                var self = this, data = this.getProperties('username', 'password');
    
                $.post('api/auth', data).then(function(response){
                    if (response.success) {
    
                        //inizializzo variabili globali in application
                        self.get('controllers.application').set('company_id', response.company_id);
                        self.get('controllers.application').set('token_pdoc', response.token);
                        self.get('controllers.application').set('company_type', response.company_type);
                        self.get('controllers.application').set('user_id', response.user_id);
                        self.get('controllers.application').set('user_type', response.userType);
                        self.get('controllers.application').set('is_admin', String(response.isAdmin));
                        self.get('controllers.application').set('comp_country', String(response.country));
    
    
                        /**DICHIARO PUBLISHABLE KEY.
                         *
                         * */
                        self.store.find('company', response.company_id).then(function( record ){
                            if( record.get('type') !== 'certifier' ) {
                                Stripe.setPublishableKey(stripe_publishableKey);
                            }
                        });
    
    //                        self.store.find('company', response.company_id).then(function( record ){
    //                            if( record.get('type') === 'certifier' ) {
    //                                Stripe.setPublishableKey(record.get('publishableKey'));
    //                            } else {
    //                                /** se non sono un certificatore uso la key del mio certificatore */
    //
    //                                record.get('certifier').then(function( subRecord ){
    //                                    Stripe.setPublishableKey(subRecord.get('publishableKey'));
    //                                });
    //                            }
    //                        });
    
    
    
                        self.store.find('company', response.company_id ).then(function( val ){
                            self.get('controllers.application').set('company_record', val);
    
                            self.get('controllers.application').company_record.reload();
                        });
                        self.transitionToRoute('dashboard/main');
                        self.get('controllers.application').set('is_login', false);
                    }
                }, function(){
                    new PNotify({
                        title: 'Warning',
                        text: 'Username or password incorrect, please check them.',
                        type: 'error'
                    });
                });
            }
        }
    });

});
define('p-doc/controllers/notification/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].ObjectController.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
    
        isView: true,
        status_hide: false,
    
        selectedRecord: null,
    
        //  *** define tab order
        tabList: Ember['default'].A(
            {'general': false},
            {'linksRequest': false}
        ),
    
        bool: [
            false,
            true,
        ],
        description: null,
        rating: null,
    });

});
define('p-doc/controllers/search-company/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Controller.extend({
        needs: ['application'],
        app_controller: Ember['default'].computed.alias('controllers.application'),
    
        types_list: [
            "shipper",
            "carrier",
            "supplier",
            "certifier"
        ],
    
        search_services: null,
        search_type: null,
        search_country: null,
        name: null,
    
        before_search: false,
        is_loading: false
    });

});
define('p-doc/controllers/your-profile/main', ['exports', 'ember'], function (exports, Ember) {

   'use strict';

   exports['default'] = Ember['default'].ObjectController.extend({
       needs: ['application'],
       app_controller: Ember['default'].computed.alias('controllers.application'),
   
       app_user_id: Ember['default'].computed.alias('controllers.application.user_id'),
       app_user_type: Ember['default'].computed.alias('controllers.application.user_type'),
   
       app_company_id: Ember['default'].computed.alias('controllers.application.company_id'),
       app_company_type: Ember['default'].computed.alias('controllers.application.company_type'),
       app_is_linked: Ember['default'].computed.alias('controllers.application.isLinked'),
   
       is_admin: function(){
           return ( this.get('app_user_type') === 'admin');
       }.property('app_user_type'),
   
       is_certifier: function() {
           return ( this.get('app_company_type') === 'certifier' );
       }.property('app_company_type'),
   
       is_driver: function(){
           return ( this.get('app_user_type') === 'driver' );
       }.property('app_user_type'),
   
       is_supplier: function(){     //nella creazione di documenti, per decidere se far vedere la lista completa o solo 'other' and 'invoice'
           return ( this.get('app_company_type') === 'supplier' );
       }.property('app_company_type'),
   
       is_driver_and_canEdit: function(){
           return ( this.get('is_driver') && String(this.get('sub_record').get('id')) === String(this.get('app_user_id')) );
       }.property('is_driver', 'id', 'sub_record', 'app_user_id'),
   
       is_admin_or_clerk: function(){       // l'utente è di tipo admin o clerk
           var type =  this.get('app_user_type');
           return ( type === 'admin' || type === 'clerk' );
       }.property('app_user_type'),
   
       is_admin_for_this_company: function(){
           var my_company = String(this.get('id')) === String(this.get('app_company_id'));
           return  this.get('is_admin') && my_company ;
       }.property('is_admin', 'app_company_id', 'id'),
   
       can_edit_company: function(){         //è admin di questa company se la sua company è uguale alla company loggata
           var user_type = this.get('is_admin_or_clerk');
           var my_company = String(this.get('id')) === String(this.get('app_company_id'));
           return user_type && my_company ;
       }.property('is_admin_or_clerk', 'app_company_id', 'id'),
   
       canEdit: function(){
           return this.get('sub_record_document').get('canEdit');
       }.property('sub_record_document'),
   
       canEdit_companyDocument: function(){
           return this.get('record_isNew') || this.get('canEdit');
       }.property('record_isNew', 'canEdit'),
   
       canEdit_userProfile: function(){         //è admin di questa company se la sua company è uguale alla company loggata
           return this.get('record_isNew') || this.get('is_driver_and_canEdit') || this.get('can_edit_company') ;
       }.property('record_isNew', 'is_driver_and_canEdit', 'can_edit_company'),
   
       check_changePassword: function(){
           if( this.sub_record ){
               return ( String(this.sub_record.get('id')) === String(this.get('app_user_id')) || this.get('is_admin_for_this_company') );
           }
       }.property('sub_record', 'app_user_id', 'can_edit_company'),
   
       canCreate_subRecord_doc: function(){
           return ( this.get('app_is_linked') && this.get('is_admin_or_clerk') || this.get('is_driver_and_canEdit') );
       }.property( 'app_is_linked', 'is_admin_or_clerk', 'is_driver_and_canEdit' ),
   
       can_create_doc: function(){
           var isLink = this.get('app_is_linked');
           var hadPermission = this.get('is_admin_or_clerk');
          return ( isLink && hadPermission );        //solo un utente di tipo admin/clerk può creare un document e solo della company proprietaria o di una connessa
       }.property('app_is_linked', 'is_admin_or_clerk'),
   
       isView: true,
   
       isView_logo: true,
       isView_docList: true,
       isView_docDetails: true,
   
       rating_type: null,
       companyRecord: null,
       sub_record_company: null,
   
       main_record: null,
       record_to_delete: null,
       record_certifier: null,
       record_type: null,
       record_isNew: false,
   
       newRecordClerk: function(){
           return this.get('record_type') === 'clerk';
       }.property('record_type'),
       newRecordDriver: function(){
           return this.get('record_type') === 'driver';
       }.property('record_type'),
       newRecordTruck: function(){
           return this.get('record_type') === 'truck';
       }.property('record_type'),
       newRecordTrailer: function(){
           return this.get('record_type') === 'trailer';
       }.property('record_type'),
   
       newRecordUser: function(){
           return this.get('record_type') === 'clerk' || this.get('record_type') === 'driver' ;
       }.property('record_type'),
       newRecordVehicle: function(){
           return this.get('record_type') === 'trailer' || this.get('record_type') === 'truck' ;
       }.property('record_type'),
   
       types: [
           "shipper",
           "carrier",
           "supplier",
           "certifier"
       ],
       image_url: null,
   
       documentTypes: [
           "invoice",
           "document",
           "other"
       ],
   
       documentTypes_supplier: [
           "invoice",
           "other"
       ],
       //  *** define tab order
       tabList: Ember['default'].A(
           {'company': false},
           {'driver': false},
           {'truck': false},
           {'trailer': false},
           {'clerk': false}
       ),
   
      /***************************************
       * DRIVERS - TAB
       * */
   
       transition_to_list: true,
   
       sub_record: null,
       sub_record_document: null,
   
       /****************************************
        * NUOVI RECORD
        * */
       newConfigurations: [],
       newLanguages: [],
       newPatents: [],
       newFirstName: null,
       newLastName: null,
       newBirthDate: null,
       newPhone: null,
       newSkype: null,
       newEmail: null,
       newUsername: null,
       newPassword: null,
   
       newName: null,
       newBrand: null,
       newModel: null,
       newDescription: null,
       newRegistrationYear: null,
       newChassisNumber: null,
       newWeight: null,
       newTare: null,
       newCategory: null,
   
       /** change pwd */
       curr_pwd: null,
       new_pwd: null,
       confirm_pwd: null
    });

});
define('p-doc/helpers/display-helper', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = function(searchPath) {
        return new Ember['default'].Handlebars.SafeString(Ember['default'].get(this, searchPath));
    }

});
define('p-doc/helpers/display-result', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = function(searchPath, destination, size) {
        var myResult = Ember['default'].get(this, 'destination').get(searchPath);
        if(myResult !== undefined) {
            return myResult.substring(0, size);
        } else {
            return myResult;
        }
    }

});
define('p-doc/helpers/show-selections-helper', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = function(usecase, searchPath) {
        switch (usecase) {
            case 'originalMode':
                return new Ember['default'].Handlebars.SafeString(Ember['default'].get(this, searchPath));
            case 'customMode':
                return this;
            case 'customModeWithoutSource':
                return this;
        }
    }

});
define('p-doc/initializers/app-initializer', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = {
        name: "app_init",

            initialize: function(container, application) {
            container.typeInjection('component', 'store', 'store:main');
            application.register('global:variables', app_init, {singleton: true});
            application.inject('controller', 'app_init', 'global:variables'); //mi serve per inserire il valore del token al login
            application.inject('adapter', 'app_init', 'global:variables');   //mi serve per inserire il token nell'url delle chiamate al server
        }
    };

    var app_init = Ember['default'].Object.extend({
        token_pdoc: localStorage['token_pdoc']
    });

});
define('p-doc/initializers/export-application-global', ['exports', 'ember', 'p-doc/config/environment'], function (exports, Ember, config) {

  'use strict';

  exports.initialize = initialize;

  function initialize(container, application) {
    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);

    if (config['default'].exportApplicationGlobal) {
      window[classifiedName] = application;
    }
  };

  exports['default'] = {
    name: 'export-application-global',

    initialize: initialize
  };

});
define('p-doc/initializers/globals', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = {
        name: "Globals",
    
            initialize: function(container, application) {
            container.typeInjection('component', 'store', 'store:main');
            application.register('global:variables', globals, {singleton: true});
            application.inject('controller', 'globals', 'global:variables'); //mi serve per inserire il valore del token al login
            application.inject('adapter', 'globals', 'global:variables');   //mi serve per inserire il token nell'url delle chiamate al server
        }
    };
    
    var globals = Ember['default'].Object.extend({
        token_pdoc: localStorage['token_pdoc']
    });

});
define('p-doc/initializers/inject-store-into-autocomplete', ['exports'], function (exports) {

    'use strict';

    exports['default'] = {
        name: 'inject-store-into-autocomplete',
            after: "store",
    
            initialize: function(container, application) {
            container.typeInjection('component', 'store', 'store:main');
            application.inject('component:auto-complete', 'store', 'store:main');
            application.inject('component:auto-suggest', 'store', 'store:main');
    //        window.AutoCompleteComponent.reopen({
    //            store: container.lookup('store:main')
    //        });
        }
    };
    
    
    String.prototype.humanize = function() {
        var str;
        str = this.replace(/_id$/, "").replace(/_/g, ' ').replace(/([a-z\d]*)/gi, function(match) {
            return match;//.toLowerCase();
        });
        return str.split('.').pop().charAt(0).toLowerCase() + str.split('.').pop().slice(1);
    };

});
define('p-doc/initializers/inject-store-into-autosuggest', ['exports'], function (exports) {

    'use strict';

    exports['default'] = {
        name: 'inject-store-into-autosuggest',

            initialize: function(container, application) {
            container.typeInjection('component', 'store', 'store:main');
            application.inject('component:auto-suggest', 'store', 'store:main');
        }
    };

    String.prototype.humanize = function() {
        var str;
        str = this.replace(/_id$/, "").replace(/_/g, ' ').replace(/([a-z\d]*)/gi, function(match) {
            return match.toLowerCase();
        });

        return str.split('.').pop();
    };

});
define('p-doc/models/company', ['exports', 'ember-data'], function (exports, DS) {

   'use strict';

   exports['default'] = DS['default'].Model.extend({
       canEdit: DS['default'].attr('boolean'),
       canRemove: DS['default'].attr('boolean'),
   
       cardNumber:DS['default'].attr('number'),
       certificationCredit:DS['default'].attr('number'),     //ammontare del credito per ottenere certificazioni
       visualizationCredit:DS['default'].attr('number'),     //ammontare del credito per visualizzare
   
       certificationScore: DS['default'].attr('number'),      //punteggio per certificazione
       allCertificationScore: DS['default'].attr('number'),
       serviceScore:DS['default'].attr('number'),            //punteggio per servizi offerti
       driverScore:DS['default'].attr('number'),             //punteggio per autisti
       truckScore:DS['default'].attr('number'),              //punteggio per camion
       trailerScore:DS['default'].attr('number'),            //punteggio per
   
       publishableKey: DS['default'].attr('string'),
       name: DS['default'].attr('string'),
       vat: DS['default'].attr('string'),                  //partita iva
       transportListCode: DS['default'].attr('string'),    //codice albo
       chamberOfCommerce: DS['default'].attr('string'),    //camera di commercio
       street: DS['default'].attr('string'),
       district: DS['default'].attr('string'),
       city: DS['default'].attr('string'),
       zipCode: DS['default'].attr('string'),
       province: DS['default'].attr('string'),
       country: DS['default'].attr('string'),
       fax: DS['default'].attr('string'),
       phone: DS['default'].attr('string'),
       description: DS['default'].attr('string'),
       type: DS['default'].attr('string'),           //carrier/shipper/supplier/certifier
       visibility: DS['default'].attr('string'), //public, private, root
   
       emails:DS['default'].attr('raw'),
       services:DS['default'].attr('raw'),         //servizi offerti (ex: trasporto animali)
       segments:DS['default'].attr('raw'),         //tratte coperte
       areas:DS['default'].attr('raw'),            //areee coperte
   
       certifier: DS['default'].belongsTo('company',{
           async: true,
           inverse: 'certifiedCompanies'}),
       certifiedCompanies: DS['default'].hasMany('company',{
           async: true,
           inverse: 'certifier'}),
   
       users : DS['default'].hasMany('user',{
           async: true }),
       vehicles: DS['default'].hasMany('vehicle',{
           async: true }),
       refills: DS['default'].hasMany('refill',{
           async: true}),
       links: DS['default'].hasMany('company',{
           async: true,
           inverse: 'childLinks'}),
       childLinks: DS['default'].hasMany('company',{
           async: true,
           inverse: 'links'}),
       notifications: DS['default'].hasMany('notification', {
           inverse: 'company',
           async: true}),
       docTemplates: DS['default'].hasMany('docTemplate', {
           async: true}),
       posts: DS['default'].hasMany('post', {
           async: true}),
       ratings: DS['default'].hasMany('rating', {
       async: true,
       inverse: 'company'}),
   
       documents: DS['default'].hasMany('document', {
           async: true,
           inverse: 'fakeCompany' }),
       files: DS['default'].hasMany('file', {
           async: true}),
       grants: DS['default'].hasMany('grant',{
          async:true }),
       configurations: DS['default'].hasMany('configuration',{
           async: true}),
       paymentPlans: DS['default'].hasMany('paymentPlan',{
           async: true}),
   
       /****************************************************
        *      PROPERTIES
        */
       show_serviceScore: function(){
           return this.get('serviceScore') !== undefined && this.get('serviceScore') !== null;
       }.property('serviceScore'),
       show_certificationScore: function(){
           return this.get('certificationScore') !== undefined && this.get('certificationScore') !== null;
       }.property('certificationScore'),
   
       totalCertificationRating: function(){
           var totRatings = 0, ratings = this.get('ratings');
   
           ratings.forEach( function(val) {
               if(val.get('type') === 'certification'){
                   totRatings += 1;
               }
           });
   
           return totRatings;
       }.property('ratings.@each.type'),
       totalServiceRating: function(){
           var totRatings = 0, ratings = this.get('ratings');
   
           ratings.forEach( function(val) {
               if(val.get('type') === 'service'){
                   totRatings += 1;
               }
           });
   
           return totRatings;
       }.property('ratings.@each.type'),
   
       totalWeight: function() {
           var totWeight = 0, weights = this.get('configurations');
   
           weights.forEach( function(val) {
               totWeight += Number(val.get('valueNum'));
           });
   
           return totWeight;
       }.property('configurations.@each.valueNum'),
       hideCardNumber: function() {
           var card = String(this.get('cardNumber'));
           return '**************' + card;
       }.property('cardNumber'),
       isCarrier: function() {
           return ( this.get('type') === 'carrier' );
       }.property('type'),
       isCertifier: function() {
           return ( this.get('type') === 'certifier' );
       }.property('type'),
       firedNotifications: function() {
           var notify = this.get("notifications"), fired = null;
           var today = moment(Date());
   
           notify.forEach(function(val){
               var date = moment(val.get('date'));
               var diff =  today.diff(date);
               if( val.get('highlighted') === true && diff > 0 ) {
                   fired += 1;
               }
           });
           return fired;
       }.property('notifications.@each.highlighted'),
   //    //  la somma di tutti i punteggi assegnati ai doc-template di type: company
       companyRating: function() {
           var docTemp = this.get("docTemplates"), tot = 0;
   
           if(docTemp){
               docTemp.forEach(function(val){
                   if( val.get('type') === 'company' ) {
                       tot += Number(val.get('rateValue'));
                   }
               });
               if(tot) {
                   return tot;
               } else {
                   return 0;
               }
           }
       }.property('docTemplates.@each.rateValue'),
   
       //  la somma di tutti i punteggi assegnati ai doc-template di type: truck
       truckRating: function() {
           var docTemp = this.get("docTemplates"), tot = 0;
   
           if(docTemp){
               docTemp.forEach(function(val){
                   if( val.get('type') === 'truck' ) {
                       tot += Number(val.get('rateValue'));
                   }
               });
               if(tot) {
                   return tot;
               } else {
                   return 0;
               }
           }
       }.property('docTemplates.@each.rateValue'),
      //  stringa per definire lo style della progress-bar
       progressCompanyRating: function() {
           return 'width:' + this.get('companyRating') + '%';
       }.property('companyRating'),
   
       // restituisce true nel caso in cui il punteggio totale sia maggiore di 100
       isCompanyRatingOut: function() {
           if ( this.get('companyRating') === 100 ) {
               return 'progress-bar progress-bar-success';
           } else if ( this.get('companyRating') > 100 ) {
               return 'progress-bar progress-bar-danger';
           } else {
               return 'progress-bar progress-bar-warning';
           }
       }.property('companyRating'),
   
       //  la somma di tutti i punteggi assegnati ai doc-template di type: driver
       driverRating: function() {
           var docTemp = this.get("docTemplates"), tot = 0;
           if(docTemp){
               docTemp.forEach(function(val){
                   if( val.get('type') === 'driver' ) {
                       tot += Number(val.get('rateValue'));
                   }
               });
               if(tot) {
                   return tot;
               } else {
                   return 0;
               }
           }
   
       }.property('docTemplates.@each.rateValue'),
   
       //  stringa per definire lo style della progress-bar
       progressDriverRating: function() {
           return 'width:' + this.get('driverRating') + '%';
       }.property('driverRating'),
   
       // restituisce true nel caso in cui il punteggio totale sia maggiore di 100
       isDriverRatingOut: function() {
           if ( this.get('driverRating') === 100 ) {
               return 'progress-bar progress-bar-success';
           } else if ( this.get('driverRating') > 100 ) {
               return 'progress-bar progress-bar-danger';
           } else {
               return 'progress-bar progress-bar-warning';
           }
       }.property('driverRating'),
   
   
       //  stringa per definire lo style della progress-bar
       progressTruckRating: function() {
           return 'width:' + this.get('truckRating') + '%';
       }.property('truckRating'),
   
       // restituisce true nel caso in cui il punteggio totale sia maggiore di 100
       isTruckRatingOut: function() {
           if ( this.get('truckRating') === 100 ) {
               return 'progress-bar progress-bar-success';
           } else if ( this.get('truckRating') > 100 ) {
               return 'progress-bar progress-bar-danger';
           } else {
               return 'progress-bar progress-bar-warning';
           }
       }.property('truckRating'),
   
       //  la somma di tutti i punteggi assegnati ai doc-template di type: trailer
       trailerRating: function() {
           var docTemp = this.get("docTemplates"), tot = 0;
   
           if(docTemp) {
               docTemp.forEach(function(val){
                   if( val.get('type') === 'trailer' ) {
                       tot += Number(val.get('rateValue'));
                   }
               });
               if(tot) {
                   return tot;
               } else {
                   return 0;
               }
           }
       }.property('docTemplates.@each.rateValue'),
   
       //  stringa per definire lo style della progress-bar
       progressTrailerRating: function() {
           return 'width:' + this.get('trailerRating') + '%';
       }.property('trailerRating'),
   
       // restituisce true nel caso in cui il punteggio totale sia maggiore di 100
       isTrailerRatingOut: function() {
           if ( this.get('trailerRating') === 100 ) {
               return 'progress-bar progress-bar-success';
           } else if ( this.get('trailerRating') > 100 ) {
               return 'progress-bar progress-bar-danger';
           } else {
               return 'progress-bar progress-bar-warning';
           }
       }.property('trailerRating')
   });

});
define('p-doc/models/configuration', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        valueNum: DS['default'].attr('number'),
    
        name: DS['default'].attr('string'),
        code: DS['default'].attr('string'),
        valueStr: DS['default'].attr('string'),
        visibility: DS['default'].attr('string'), //public, private, root
    
        company: DS['default'].belongsTo('company', {
            async: true})
    });

});
define('p-doc/models/doc-template', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    var attr = DS['default'].attr;
    
    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
        goodsConfiscation: attr('boolean'),    //confisca
        vehicleConfiscation: attr('boolean'),    //sequestro
        fiscalResponsibility: attr('boolean'),   //responsabilità economica
        emas: attr('boolean'),
        booleanRating: attr('boolean'),
        isLimited: attr('boolean'),    // se il certificato è scaduto il suo punteggio può arrivare ad un massimo prestabilito
    
        deadline: attr('custom-date'),         //scadenza
    
        validityNum: attr('number'),     //durata validità della certificazione
        alertNum: attr('number'),       //quanto tempo prima della scadenza deve essere mostrato l'avviso di scadenza
        graceNum: attr('number'),
        rateValue: attr('number'),      //punteggio da 0-100
        limit: attr('number'),
        visibility: DS['default'].attr('string'), //public, private, root
    
        name: attr('string'),
        type: attr('string'),          //company/driver/truck/trailer
        validityType: attr('string'),   //days/months/years
        alertType: attr('string'),         //days/months/years
        graceType: attr('string'),      //days/months/years
    
        company: DS['default'].belongsTo('company', {
            async: true }),
        files: DS['default'].hasMany('file', {
            async: true}),
        /***************************************************
         * PROPERTIES
         */
        isDeadline: function(){
            return ( this.get('deadline') !== null && this.get('deadline') !== '' && this.get('deadline') !== undefined );
        }.property('deadline'),
        isValidity: function(){
            return ( this.get('validityNum') !== null && this.get('validityNum') !== '' && this.get('validityNum') !== undefined );
        }.property('validityNum'),
    
        isCompany: function() {
            return (this.get('type') === 'company' );
        }.property('type'),
        isDriver: function() {
            return (this.get('type') === 'driver' );
        }.property('type'),
        isTruck: function() {
            return (this.get('type') === 'truck' );
        }.property('type'),
        isTrailer: function() {
            return (this.get('type') === 'trailer' );
        }.property('type'),
    
        showDeadline: function(){
            if( this.get('deadline') ){
                return moment(this.get('deadline')).format('LL');
            }
        }.property('deadline'),
    
        setBool: function(){
            if(this.get('goodsConfiscation')){
                this.set('vehicleConfiscation', false);
                this.set('fiscalResponsibility', false);
                this.set('emas', false);
            } else if(this.get('vehicleConfiscation')){
                this.set('goodsConfiscation', false);
                this.set('fiscalResponsibility', false);
                this.set('emas', false);
            }  else if(this.get('fiscalResponsibility')){
                this.set('goodsConfiscation', false);
                this.set('vehicleConfiscation', false);
                this.set('emas', false);
            } else if(this.get('emas')){
                this.set('goodsConfiscation', false);
                this.set('fiscalResponsibility', false);
                this.set('vehicleConfiscation', false);
            }
        }.property('goodsConfiscation', 'vehicleConfiscation', 'fiscalResponsibility', 'emas')
    });

});
define('p-doc/models/document', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
        isCertified: DS['default'].attr('boolean'),
        isOwnerCompany: DS['default'].attr('boolean'),
    
        date: DS['default'].attr('custom-date'),
        validityDate: DS['default'].attr('custom-date'),
        //deadline: DS.attr('custom-date'),
        expirationDate: DS['default'].attr('custom-date'),
        grace: DS['default'].attr('custom-date'),
        alert: DS['default'].attr('custom-date'),
    
        entity: DS['default'].attr('string'),
        name: DS['default'].attr('string'),
        entityType: DS['default'].attr('string'),   //user/company/vehicle
        note: DS['default'].attr('string'),
        type: DS['default'].attr('string'),      //invoice/document/other
        status: DS['default'].attr('string'),       //active/inactive
        visibility: DS['default'].attr('string'), //public, private, root
    
        company: DS['default'].belongsTo('company', {
            async: true}),
        fakeCompany: DS['default'].belongsTo('company', {
            async: true,
            inverse: 'documents'}),
        docTemplate: DS['default'].belongsTo('doc-template', {
            async: true}),
        certifier: DS['default'].belongsTo('company', {
            async: true }),
        files: DS['default'].hasMany('file', {
            async: true}),
        /*******************************************************
         * OBSERVES
         */
    
        set_alert: function(){
            var new_date;
            if( this.get('type') === 'document'){
                var docTemp_grace = this.get('docTemplate').get('alertNum');
                var validity = this.get('validityDate');
    
                switch (this.get('docTemplate').get('alertType')){
                    case 'days':
                        new_date = moment( validity , 'YYYY-MM-DD').add( docTemp_grace, 'day');
                        this.set('alert', new_date);
                        break;
                    case 'months':
                        new_date = moment( validity , 'YYYY-MM-DD').add( docTemp_grace, 'month');
                        this.set('alert', new_date);
                        break;
                    case 'years':
                        new_date = moment( validity , 'YYYY-MM-DD').add( docTemp_grace, 'year');
                        this.set('alert', new_date);
                        break;
                }
            }
    
        }.observes('docTemplate', 'validityDate', 'type'),
    
        set_grace: function(){
            var new_date;
            if( this.get('type') === 'document'){
                var docTemp_grace = this.get('docTemplate').get('graceNum');
    
                switch (this.get('docTemplate').get('graceType')){
                    case 'days':
                        new_date = moment(this.get('validityDate'), 'YYYY-MM-DD').add( docTemp_grace, 'day');
                        this.set('grace', new_date);
                        break;
                    case 'months':
                        new_date = moment(this.get('validityDate'), 'YYYY-MM-DD').add( docTemp_grace, 'month');
                        this.set('grace', new_date);
                        break;
                    case 'years':
                        new_date = moment(this.get('validityDate'), 'YYYY-MM-DD').add( docTemp_grace, 'year');
                        this.set('grace', new_date);
                        break;
                }
            }
    
        }.observes('docTemplate', 'validityDate', 'type'),
    
        set_expirationDate: function(){
            var new_date;
            if( this.get('type') === 'document'){
    
                var docTemp = this.get('docTemplate');
    
                if( docTemp ){
                    var docTemp_deadline = docTemp.get('validityNum');
                    if( docTemp_deadline ){
                        switch ( this.get('docTemplate').get('validityType')){
                            case 'days':
                                new_date = moment(this.get('validityDate'), 'YYYY-MM-DD').add( docTemp_deadline, 'day');
                                this.set('expirationDate', new_date);
                                break;
                            case 'months':
                                new_date = moment(this.get('validityDate'), 'YYYY-MM-DD').add( docTemp_deadline, 'month');
                                this.set('expirationDate', new_date);
                                break;
                            case 'years':
                                new_date = moment(this.get('validityDate'), 'YYYY-MM-DD').add( docTemp_deadline, 'year');
                                this.set('expirationDate', new_date);
                                break;
                        }
    
                    } else {
                        this.set('expirationDate', docTemp.get('deadline'));
                    }
                }
            }
    
        }.observes('docTemplate', 'validityDate', 'type'),
    
    
        /*******************************************************
         * PROPERTIES
         * */
        isInvoice: function(){
           return ( this.get('type') === 'invoice' );
        }.property('type'),
        isDocument: function(){
            return ( this.get('type') === 'document' );
        }.property('type'),
        isOther: function(){
            return ( this.get('type') === 'other' );
        }.property('type'),
    
        isActive: function(){
            return ( this.get('status') === 'active' );
        }.property('status'),
    
        date_toString: function() {
            if( this.get('date') ){
                return moment(this.get('date'), 'YYYY-MM-DD').format('LL');
            }
        }.property('date'),
        validityDate_toString: function() {
            if( this.get('validityDate') ){
                return moment(this.get('validityDate'), 'YYYY-MM-DD').format('LL');
            }
        }.property('validityDate'),
        showExpirationDate: function() {
            if( this.get('expirationDate') ){
                return moment(this.get('expirationDate'), 'YYYY-MM-DD').format('LL');
            }
        }.property('expirationDate'),
    //    deadline_toString: function() {
    //        if( this.get('deadline') ){
    //            return moment(this.get('deadline')).format('LL');
    //        }
    //    }.property('deadline'),
        grace_toString: function() {
            if( this.get('grace') ){
                return moment(this.get('grace'), 'YYYY-MM-DD').format('LL');
            }
        }.property('grace'),
        alert_toString: function() {
            if( this.get('alert') ){
                return moment(this.get('alert'), 'YYYY-MM-DD').format('LL');
            }
        }.property('alert')
    });

});
define('p-doc/models/file', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        key: DS['default'].attr('string'),
        name: DS['default'].attr('string'),
        code: DS['default'].attr('string'),
        path: DS['default'].attr('string'),
        entity: DS['default'].attr('string'),
        entityType: DS['default'].attr('string'),
        type: DS['default'].attr('string'),
    
        company: DS['default'].belongsTo('company',{
            inverse: 'files'}),
    //    authorizedCompanies: DS.hasMany('company',{
    //        async: true})
        visibility: DS['default'].attr('string'), //public, private, root
    
        /*********************************************
         *
         */
        isLogo: function(){
           return this.get('type') === 'LOGO';
        }.property('type')
    //    isLogo: function(){
    //        //var logo = this.get('name') ;
    //        return  true ;  //logo === 'fox-shipper.png';
    //    }.property('name')
    
    });

});
define('p-doc/models/grant', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        accessView: DS['default'].attr('string'),
        accessRemove: DS['default'].attr('string'),
        accessEdit: DS['default'].attr('string'),
        accessNew: DS['default'].attr('string'),
        access: DS['default'].attr('string'),
        name: DS['default'].attr('string'),
        value: DS['default'].attr('string')
    });

});
define('p-doc/models/notification', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
        highlighted: DS['default'].attr('boolean'),
    
        date: DS['default'].attr('custom-time'),
        deadline: DS['default'].attr('custom-date'),
        gracePeriod: DS['default'].attr('custom-date'),
    
        actionToken: DS['default'].attr('string'),
        detail: DS['default'].attr('string'),
        description: DS['default'].attr('string'),
        entity: DS['default'].attr('string'),
        entityType: DS['default'].attr('string'),
        fromCompanyDetail: DS['default'].attr('string'),
        fromUserDetail: DS['default'].attr('string'),
        name: DS['default'].attr('string'),
        status: DS['default'].attr('string'), //show/hide
        type: DS['default'].attr('string'),    // deadline/  (no action)
                                    // link/
                                    // certificationRating/serviceRating/
                                    // newRating (no action)
                                    // info
        visibility: DS['default'].attr('string'), //public, private, root
    
        valueNum: DS['default'].attr('number'),
    
        document: DS['default'].belongsTo('document', {
            async: true}),
        fromCompany: DS['default'].belongsTo('company', {
            async: true}),
    //    fromUser: DS.belongsTo('user', {
    //        async: true }),
        company: DS['default'].belongsTo('company', {
            async: true}),
        docTemplate: DS['default'].belongsTo('docTemplate', {
            async: true}),
        referringNotification: DS['default'].belongsTo('notification', {
            async: true,
            inverse: 'childNotification'}),
        childNotification: DS['default'].belongsTo('notification', {
            async: true,
            inverse: 'referringNotification'}),
        files: DS['default'].hasMany('files', {
            async: true}),
    
        /***************************************************
         *  PROPERTIES
         */
        is_actionToken: function(){
           return this.get('actionToken') !== null;
        }.property('actionToken'),
        showDate: function(){
    
            return moment.utc(this.get('date')).fromNow();
        }.property('date'),
        showDeadline: function(){
            return moment(this.get('deadline'),"YYYY-MM-DD" ).format("LL");
        }.property('deadline'),
        showGracePeriod: function(){
            return moment(this.get('gracePeriod'),"YYYY-MM-DD").format("LL");
        }.property('gracePeriod'),
    
        status_hide: function(){
            return ( this.get('status') === 'hide' );
        }.property('status'),
        viewNotification: function() {
            return ( this.get('status') === 'show' );
        }.property('status'),
    
        isServiceRating: function() {
            return ( this.get('type') === 'serviceRating' );
        }.property('type'),
        isDeadline: function() {
            return ( this.get('type') === 'deadline' );
        }.property('type'),
        isInfo: function() {
            return ( this.get('type') === 'info' );
        }.property('type'),
        isLink: function() {
            return ( this.get('type') === 'link' );
        }.property('type'),
        isCredit: function() {
            return ( this.get('type') === 'credit' );
        }.property('type'),
        isNewRating: function() {
            return ( this.get('type') === 'newRating' );
        }.property('type'),
        isCertificationRating: function() {
            return ( this.get('type') === 'certificationRating' );
        }.property('type')
    
    });

});
define('p-doc/models/payment-plan', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        amount : DS['default'].attr('number'),
        credit : DS['default'].attr('number'),
    
        name: DS['default'].attr('string'),
        description: DS['default'].attr('string'),
        currency : DS['default'].attr('string'),
        visibility: DS['default'].attr('string'), //public, private, root
        type: DS['default'].attr('string'), //certification, visualization
    
        company:  DS['default'].belongsTo('company',{
            async: true
        }),
    
        /******************************************************
         * PROPERTIES
         */
    
        isVisualization: function(){
           return this.get('type') === 'visualization';
        }.property('type')
    });

});
define('p-doc/models/post', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        name: DS['default'].attr('string'),
        title: DS['default'].attr('string'),
        description: DS['default'].attr('string'),
        visibility: DS['default'].attr('string'),
    
        date: DS['default'].attr('custom-time'),
    
        user: DS['default'].belongsTo('user', {
            async: true }),
        company: DS['default'].belongsTo('company', {
            async: true}),
        files: DS['default'].hasMany('files', {
            async: true}),
        /*************************************************
         * PROPERTIES
         */
        timeFrom: function(){
            return moment.utc(this.get('date'), 'YYYY-MM-DD HH:mm:ss Z').fromNow();
        }.property('date')
    
    });

});
define('p-doc/models/rating', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
        isLimited: DS['default'].attr('boolean'),
    
        limit: DS['default'].attr('number'),
        value: DS['default'].attr('number'),
    
        description: DS['default'].attr('string'),
        entity: DS['default'].attr('string'),
        entityType: DS['default'].attr('string'),
        fromCompanyDetail: DS['default'].attr('string'),
        type: DS['default'].attr('string'),   //certification/service
        status: DS['default'].attr('string'),
        visibility: DS['default'].attr('string'),
    
        date: DS['default'].attr('custom-date'),
        deadline: DS['default'].attr('custom-date'),
    
        fromCompany: DS['default'].belongsTo('company'),
        company: DS['default'].belongsTo('company', {
            inverse: 'ratings'
        }),
        docTemplate: DS['default'].belongsTo('doc-template'),
        document: DS['default'].belongsTo('document'),
    
        /**************************************
         * PROPERTIES
         * */
        isTypeService: function(){
           return (this.get('type') === 'service');
        }.property('type'),
        isTypeCertification: function(){
            return (this.get('type') === 'certification');
        }.property('type')
    });

});
define('p-doc/models/refill', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        amount: DS['default'].attr('number'),
        credit: DS['default'].attr('number'),
    
        date: DS['default'].attr('custom-date'),
    
        key: DS['default'].attr('string'),
        currency: DS['default'].attr('string'),
        visibility: DS['default'].attr('string'),
    
        company: DS['default'].belongsTo('company'),
        paymentPlan: DS['default'].belongsTo('paymentPlan'),
        user: DS['default'].belongsTo('user'),
    
        files: DS['default'].hasMany('files', {
            async: true}),
    
        /** PROPERTIES */
    
        showDate: function(){
            return moment(this.get('date')).format('LL');
        }.property('date')
    });

});
define('p-doc/models/tag', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        field:DS['default'].attr('string'),  // tipologia: service/area/segment/configuration
        model:DS['default'].attr('string'),  // company/vehicle/...
        isoCode:DS['default'].attr('string'),
        value:DS['default'].attr('string'),   // nome
        visibility: DS['default'].attr('string')
    });

});
define('p-doc/models/user', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        certificationScore:DS['default'].attr('number'),
    
        birthDate: DS['default'].attr('custom-time'),
    
        username:DS['default'].attr('string'),
        password:DS['default'].attr('string'),
        firstName: DS['default'].attr('string'),
        lastName: DS['default'].attr('string'),
        phone: DS['default'].attr('string'),
        skype: DS['default'].attr('string'),
        profile: DS['default'].attr('string'), //powerUser/user/admin
        type: DS['default'].attr('string'),   //clerk/driver
        curriculum: DS['default'].attr('string'),
        email: DS['default'].attr('string'),
        visibility: DS['default'].attr('string'),
    
        patents: DS['default'].attr('raw'),
        languages: DS['default'].attr('raw'),
    
        company: DS['default'].belongsTo('company'),
        files: DS['default'].hasMany('files', {
            async: true}),
        documents: DS['default'].hasMany('document', {
            async: true}),
        ratings: DS['default'].hasMany('rating', {
            async: true}),
        grants: DS['default'].hasMany('grant',{
            async:true }),
        /*************************************************
         * PROPERTIES
         */
        totalCertificationRating: function(){
            var totRatings = 0, ratings = this.get('ratings');
    
            ratings.forEach( function(val) {
                if(val.get('type') === 'certification'){
                    totRatings += 1;
                }
            });
    
            return totRatings;
        }.property('ratings.@each.type'),
        isAdmin: function(){
            return this.get('type') === 'admin';
        }.property('type'),
        isClerk: function(){
            return this.get('type') === 'clerk';
        }.property('type'),
        isDriver: function(){
            return this.get('type') === 'driver';
        }.property('type'),
    
        birthDate_toString: function(){
            return moment(this.get('birthDate')).format('LL');
        }.property('birthDate')
    });

});
define('p-doc/models/vehicle', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Model.extend({
        canEdit: DS['default'].attr('boolean'),
        canRemove: DS['default'].attr('boolean'),
    
        registrationYear: DS['default'].attr('custom-date'),
    
        weight: DS['default'].attr('number'),  //peso complessivo
        tare: DS['default'].attr('number'),
        certificationScore:DS['default'].attr('number'),
    
        brand: DS['default'].attr('string'),        //marca: iveco
        category: DS['default'].attr('string'),   //euro1, euro2, ... euro6
        chassisNumber: DS['default'].attr('string'),
        description: DS['default'].attr('string'),
        key:DS['default'].attr('string'),     // company key / name
        name: DS['default'].attr('string'),
        type: DS['default'].attr('string'),    // truck/trailer
        vehicleModel:  DS['default'].attr('string'),       //modello: Stralis
        visibility: DS['default'].attr('string'),
    
        vehicleConfigurations: DS['default'].attr('raw'),
    
        company: DS['default'].belongsTo('company', {
            async: true }),
        files: DS['default'].hasMany('files', {
            async: true}),
        documents: DS['default'].hasMany('document', {
            async: true}),
        ratings: DS['default'].hasMany('rating', {
            async: true}),
        /**************************  PROPERTIES  **************************/
        totalCertificationRating: function(){
            var totRatings = 0, ratings = this.get('ratings');
    
            ratings.forEach( function(val) {
                if(val.get('type') === 'certification'){
                    totRatings += 1;
                }
            });
    
            return totRatings;
        }.property('ratings.@each.type'),
        isTruck: function(){
            return this.get('type') === 'truck';
        }.property('type'),
        isTrailer: function(){
            return this.get('type') === 'trailer';
        }.property('type')
    });
    

});
define('p-doc/router', ['exports', 'ember', 'p-doc/config/environment'], function (exports, Ember, config) {

  'use strict';

  var Router = Ember['default'].Router.extend({
    location: config['default'].locationType
  });
  
  Router.map(function() {
      this.route('dashboard/main', {path: 'dashboard'});
      this.route('login/main', {path: 'login'});
  
      this.route('your-profile/main', {path: 'yourProfile/:company_id'});
      this.route('link/main', {path: 'links/:company_id'});
      this.route('notification/main', {path: 'notifications/:company_id'});
  
      this.route('admin/main', {path: 'admin/:company_id'});
      this.route('account/main', {path: 'account/:company_id'});
      this.route('search-company/main', {path: 'searchCompanies'});
  });
  
  exports['default'] = Router;

});
define('p-doc/routes/account/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function() {
            var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('account.main');
    
            //imposto la tab company come default per 'your-profile'
            if( controller.tabList.paymentDetails !== true &&  controller.tabList.buyCredits !== true &&  controller.tabList.orderHistory !== true ) {
                if (app_controller.company_type === 'certifier'){
                    controller.set('tabList.buyCredits', true);
                } else{
                    controller.set('tabList.paymentDetails', true);
                }
    
            }
    
            if( app_controller.company_type === 'certifier' ){
                app_controller.set('records_paymentPlans', this.store.find('payment-plan', { company: app_controller.company_id }));
            } else {
                _this.store.find('company', app_controller.company_id ).then(function( record ){
                    var certifier = record.get('certifier').get('id');
                    app_controller.set('records_paymentPlans', _this.store.find('payment-plan', { company: certifier }));
                });
            }
    
    
    //        if( !app_controller.paymentPlans.get('length') ) {
    //            this.store.findQuery("payment-plan").then(function(val){
    //                app_controller.set("paymentPlans", val);
    //            }, function( reason ){
    //                app_controller.send( 'message_manager', 'Failure', reason );
    //            });
    //        }
    
        },
        model: function( company ) {
            return this.store.find('company', company.company_id);
        },
    
        actions: {
            /**
             Gestione della tab navigation in 'your-profile'; rende attiva la tab selezionata dall'utente
    
             @action setTabs
             @for your-profile/main-page
             @param {string} tab selezionata dall'utente - (company/driver/truck/trailer/clerk)
             */
            setTabs: function( tabToActive ){
                this.controller.set('tabList.paymentDetails',false);
                this.controller.set('tabList.buyCredits',false);
                this.controller.set('tabList.orderHistory',false);
    
                this.controller.set('tabList.' + tabToActive, true);
    //            this.controller.set('view_new_field', false);
            },
    
            open_modal: function( path, record ) {
                this.controller.set('main_record', record);
    
                this.render(path, {
                    into: 'application',
                    outlet: 'overview',
                    view: 'modal-manager'
                });
            },
    
            change_mode: function( attr, value ){
                this.controller.set( attr, value );
            },
    
            send_toStripe: function( attr, value ){
                var _this = this, app_controller = _this.controllerFor('application');
    
                if( this.controller.mm != null && this.controller.yyyy != null &&
                    /^\d+$/.test(this.controller.cardNumber1) && /^\d+$/.test(this.controller.cardNumber2) &&
                    /^\d+$/.test(this.controller.cardNumber3) && /^\d+$/.test(this.controller.cardNumber4)
                    )
                {
    
                    var data = this.getProperties(), customerData = this.getProperties();
    
                    data.number = _this.controller.cardNumber1;
                    data.number = data.number + _this.controller.cardNumber2;
                    data.number = data.number + _this.controller.cardNumber3;
                    data.number = data.number + _this.controller.cardNumber4;
                    data.cvc = _this.controller.cvc;
                    data.exp_month = _this.controller.mm;
                    data.exp_year = _this.controller.yyyy;
    
                    this.store.find('company', app_controller.company_id).then(function(company){
                        company.set('cardNumber', _this.controller.cardNumber4);
    //                    .save().then(function( user_saved ){
    
                        Stripe.card.createToken(data, stripeResponseHandler);
    
                        function stripeResponseHandler(status, response) {
                            _this.controller.set('cvc', null);
                            _this.controller.set('mm', null);
                            _this.controller.set('yyyy', null);
                            _this.controller.set('cardNumber1', null);
                            _this.controller.set('cardNumber2', null);
                            _this.controller.set('cardNumber3', null);
                            _this.controller.set('cardNumber4', null);
                            _this.controller.set( attr, value );
                            if (response.error) {
                                // Show the errors on the form
                                new PNotify({ title: 'Error', text: response.error.message, type: 'warning', delay: 2000 });
                                _this.controller.set( attr, value );
                            } else {
                                // response contains id and card, which contains additional card details
                                customerData.token = response.id;
                                customerData.user_id = app_controller.user_id;
    
                                $.post('api/custom/customerCard?token=' + app_controller.token_pdoc, customerData).then(function(response){
                                    if (response.success) {
                                        new PNotify({
                                            title: 'Well done',
                                            text: 'You successfully save payment details',
                                            type: 'success',
                                            delay: 2000
                                        });
    
                                        company.save().then(function(){
                                            _this.controller.set('curr_pwd', null);
                                            _this.controller.set('new_pwd', null);
                                            _this.controller.set('confirm_pwd', null);
                                            _this.controller.set( attr, value );
                                        });
                                    }
                                }, function(){
                                    new PNotify({
                                        title: 'Error',
                                        text: 'A problem was occurred.',
                                        type: 'error',
                                        delay: 2000
                                    });
                                    _this.controller.set('curr_pwd', null);
                                    _this.controller.set('new_pwd', null);
                                    _this.controller.set('confirm_pwd', null);
                                    _this.controller.set( attr, value );
                                });
                            }
                        }
                    });
    
                } else {
                    app_controller.send( 'message_manager', 'Failure', 'The payment details are not correct, please check them' );
                    this.controller.set( attr, value );
                }
            },
            delete_plan: function( model, record ) {
                var _this = this, app_controller = _this.controllerFor('application');
                record.deleteRecord();
                record.save().then(function(val){
                    _this.store.findQuery("paymentPlan").then(function(val){
                        app_controller.set("autocompletePaymentPlan", val);
                    });
                });
            },
    
            link_to: function( path, id ){
                 if( id ){
                     this.transitionTo(path, id);
                 } else {
                     this.transitionTo(path);
                 }
            },
    
            new_refill: function(payment_id, company_id, user_id, $btn) {
                var _this = this, app_controller = _this.controllerFor('application'),
                    today = new Date(), data = this.getProperties();
    
                this.store.find('payment-plan', payment_id ).then(function( payment ){
                    data.paymentPlan = payment_id;
                    data.date = moment(today).format("YYYY-MM-DD");
                    data.amount = payment.get('amount');
                    data.credit = payment.get('credit');
                    data.currency = payment.get('currency');
                    data.company = company_id;
                    data.user = user_id;
    
                    $.post('api/custom/refill?token=' + app_controller.token_pdoc, data).then(function(response){
    
                        if (response.success) {
                            _this.store.find('company', company_id).then(function( record ){
                                record.reload();
                                $btn.set('disabled', false);
                                app_controller.send( 'message_manager', 'Success', 'You successfully save refill' );
                            });
                        }
                    }, function(response){
                        var json = response.responseText, obj = JSON.parse(json);
                        $btn.set('disabled', false);
                        app_controller.send( 'message_manager', 'Failure', 'A problem was occurred' );
    
                    });
                });
    
            },
    
            download_file: function( fileId ) {
                var _this = this, app_controller = _this.controllerFor('application'),
                    path = 'api/files/' + fileId + '?token=' + app_controller.token_pdoc + '&download=true';
    
                $.fileDownload(path)
                    // .done(function () { alert('File download a success!'); })
                    .fail(function () {
                        new PNotify({
                            title: 'Error',
                            text: 'The file was removed or cancelled.',
                            type: 'error',
                            delay: 4000
                        });
                    });
            }//,
    
    //        stripe_connect_to: function( companyId ) {
    //            var _this = this, app_controller = _this.controllerFor('application'),
    //                path = 'https://connect.stripe.com/oauth/authorize?response_type=code&state='+ companyId +'&client_id='+ stripe_clientKey;
    //
    ////            $.post(path)
    ////                .done(function () { alert('File download a success!'); })
    ////                .fail(function ( response ) {
    ////                    new PNotify({
    ////                        title: 'Error',
    ////                        text: 'An error was occurred',
    ////                        type: 'error',
    ////                        delay: 4000
    ////                    });
    ////                });
    //        }
        }
    });

});
define('p-doc/routes/admin/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function() {
            var app_controller = this.controllerFor('application'), controller = this.controllerFor('admin.main');
    
            //imposto la tab company come default per 'your-profile'
            if( controller.tabList.company !== true &&  controller.tabList.driver !== true &&  controller.tabList.truck !== true &&  controller.tabList.trailer !== true &&  controller.tabList.general !== true ) {
                controller.set('tabList.general', true);
            }
        },
        model: function( company ) {
            return this.store.find('company', company.company_id);
        },
    
        actions: {
            /**
             Gestione della tab navigation in 'your-profile'; rende attiva la tab selezionata dall'utente
    
             @action setTabs
             @for your-profile/main-page
             @param {string} tab selezionata dall'utente - (company/driver/truck/trailer/clerk)
             */
            setTabs: function( tabToActive ){
                this.controller.set('tabList.general',false);
                this.controller.set('tabList.company',false);
                this.controller.set('tabList.driver',false);
                this.controller.set('tabList.truck',false);
                this.controller.set('tabList.trailer',false);
    
                this.controller.set('tabList.' + tabToActive, true);
                this.controller.set('view_new_field', false);
            },
    
            change_mode: function( attr, value, type, record ){
                if( type === 'return' ){
                    record.deleteRecord();
                    record.save();
                }
    
                this.controller.set( attr, value );
            },
    
            create_record: function( record_company, attr, value, type ){
                var _this = this, app_controller=_this.controllerFor('application');
                var new_record = this.store.createRecord('doc-template', {
                    company: record_company,
                    type: type
                });
    
                new_record.save().then(function( record ){
                //    app_controller.send('message_manager', 'Success', 'The document was successfully created.');
                    _this.controller.set( 'new_record', new_record);
                    _this.send('change_mode', attr, value );
                });
            },
    
            set_record_multiple: function( record, attr1, val1, attr2, val2 ){
                if ( val2 === 'today' ){
                    var today = new Date();
                    val2 = moment(today).format();
                }
                record.set( attr1, val1 );
                record.set( attr2, val2 );
                record.save();
            },
    
            set_record: function( record, attr, value, check ){
                var _this = this, app_controller = _this.controllerFor('application');
    
                switch (attr){
                    case 'view_totWeight':
                        if( check > 100 ){
                            app_controller.send('message_manager', 'Failure', "Attention: Total weight is bigger than 100.");
                        } else {
                            record.forEach( function(sub_record, index){
                                sub_record.save().then(function(){
                                    if( record.get('length') === index+1 ){
                                        _this.send('change_mode', attr, value );
                                    }
                                });
                            });
                        }
    
                        break;
                    case 'view_new_field':
                        if( record.get('name') && record.get('rateValue') && record.get('alertNum') && record.get('graceNum') && ( record.get('validityNum') || record.get('deadline') ) ) {
                            record.save().then(function(){
                                _this.send('change_mode', attr, value );
                            });
                        } else {
                            $('[id^="changeState_"]').addClass("has-error");
                            new PNotify({ title: 'Warning', text: 'Controllare di aver compilato tutti i campi obbligatori.', type: 'warning', delay: 2000 });
                        }
    
                        break;
                    case 'mode_view':
                        record.save().then(function(){
                            _this.send('change_mode', attr, value );
                        });
                        break;
                    default :
                        record.set(attr, value);
                        break
                }
            },
    
            set_docTemplates: function( record, attr, value ){
                var _this = this;
    
                record.forEach(function(val, index) {
                    switch (val.get('isDirty')) {
                        case true:
                            val.save();
                            break;
    
                        case false:
                            break;
                    }
    
                    if( index+1 === record.get('length') ) {
                        _this.controller.set( attr, value );
                    }
                });
            },
    
    
            delete_record: function() {
                var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('admin/main');
    
                controller.record_to_delete.deleteRecord();
                controller.record_to_delete.save().then(function(){
                    app_controller.send('message_manager', 'Success', 'The document was successfully removed.');
    //                controller.main_record.reload();
                }, function(){
                    app_controller.send('message_manager', 'Failure', 'A problem eas occurred.');
                });
            },
    
            open_modal: function( path, record_to_delete, record) {
                var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('admin/main');
    
                switch (path){
                    case 'admin/modals/delete-record':
                        controller.set('record_to_delete', record_to_delete);
    
                        break;
                    case 'admin/modals/add-file':
                        controller.set('main_record', record);
    
                        break;
                }
    
                this.render(path, {
                    into: 'application',
                    outlet: 'overview',
                    view: 'modal-manager'
                });
            },
    
            update_files: function(mod, val, $btn){
                this.store.find( mod, val ).then(function( record ){
                    record.reload().then(function(){
                        $btn.button('reset');
                    });
                });
            },
    
            /**
             l'utente può scaricare un file
    
             @action download_file
             @for Booking Item List
             @param {record}
             */
            download_file: function( fileId ) {
                var self = this, app_controller = self.controllerFor('application'),
                    path = 'api/files/' + fileId + '?token=' + app_controller.token_pdoc + '&download=true';
    
                $.fileDownload(path)
                    // .done(function () { alert('File download a success!'); })
                    .fail(function ( text ) {
                        app_controller.send( 'message_manager', 'Failure', text );
                    });
            }
        }
    });

});
define('p-doc/routes/application', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function() {
            var app_controller = this.controllerFor('application');
    
            if( app_controller.company_id ) {
                this.store.find('company', app_controller.company_id).then(function( val ){
                    app_controller.set('company_record', val);
                });
            } else {
                this.transitionTo('login/main');
            }
    
            if( app_controller.user_id ) {
                this.store.find('user', app_controller.user_id).then(function( val ){
                    app_controller.set('user_record', val);
                });
            } else {
                this.transitionTo('login/main');
            }
    
            /** se non è presente in memoria il token l'utente viene ri-direzionato alla pagina di login **/
            if ( !app_controller.token_pdoc ){
                this.redirectToLogin();
            } else {
                this.redirectToDashboard();
            }
        },
    
        redirectToLogin: function() {
            this.transitionTo('login/main');
        },
    
        redirectToDashboard: function() {
            this.transitionTo('dashboard/main');
        },
    
        actions: {
            error: function( reason ) {
                var app_controller = this.controllerFor('application');
    
                switch ( String(reason.status) ){
                    case '400':        //BAD REQUEST, problemi con il token
                        app_controller.send('logout');
                        break;
                    case '401':
    //                    new PNotify({
    //                        title: 'Attention!',
    //                        text: reason.message,
    //                        type: 'error',
    //                        delay: 2000
    //                    });
                        break;
                    case '403':    //FORBIDDEN, non deve generare errore
                        break;
                    case '404':    //NOT FOUND
                        new PNotify({
                            title: 'Attention!',
                            text: reason.message,
                            type: 'error',
                            delay: 2000
                        });
                        break;
                    case '500':  //INTERNAL SERVER ERROR, dato dal server
                        new PNotify({
                            title: 'Attention!',
                            text: reason.message,
                            type: 'error',
                            delay: 2000
                        });
                        break;
                    default:
                        new PNotify({
                            title: 'Attention!',
                            text: 'Something went wrong: ' + reason.message,
                            type: 'error',
                            delay: 2000
                        });
                        this.redirectToDashboard();
                        break;
                }
    
            },
            closeSearch: function(){
                this.disconnectOutlet({
                    outlet: 'search-result',
                    parentView: "application"
                });
            },
    
            close_modal: function(outlet, parentView) {
                this.disconnectOutlet({
                    outlet: outlet,
                    parentView: parentView
                });
            },
    
            changeLanguage: function(val){
                this.controllerFor('application').set('isEnglish', val);
            },
    
            /**
             Link-to alla tab da cui si è arrivati
    
             @action return
             @for your-profile/driver-id
             @param {string} route della pagina - (your-profile.main-page)
             @param {string} tab selezionata dall'utente - (tabList.company/tabList.driver/tabList.truck/tabList.trailer/tabList.clerk)
             @param {key} tab selezionata dall'utente - (company/driver/truck/trailer/clerk)
             */
            "return": function( page, tab, id ) {
                var controller = this.controllerFor( page );
    
                switch(page) {
                    case 'your-profile/main-page':
                        controller.set('tabList.company', false);
                        controller.set('tabList.driver', false);
                        controller.set('tabList.truck', false);
                        controller.set('tabList.trailer', false);
                        controller.set('tabList.clerk', false);
    
                        controller.set(tab, true);
    
                        //this.transitionTo(page, id);
                        break;
    //                case 'links/main-page':
    //                    this.transitionTo(page, id);
    //                    break;
                }
    
                this.transitionTo(page, id);
            },
    
            /**
             Cambio di una singola pagina da View a Edit mode. Nel caso in cui si passi da Edit a View verrà fatto un
             salvataggio del modello in questione.
    
             @action change_state
             @for [ partials/-company-field; ...]
             @param {string} route della pagina - [links/company; ]
             @param {boolean} valore con cui viene aggiornata variabile locale isView - true/false
             @param {string} nome di un model
             @param {number} unique key
             */
            change_state: function( route, value, model, id ) {
                var controller = this.controllerFor(route);
    
                if ( value === true ) {
                    this.store.find(model, id).then(function(val){
                        val.save();
                    });
                }
    
                controller.set('isView', value);
            },
    
            set_value: function( route, variable, value ) {
                var controller = this.controllerFor(route);
    
                controller.set(variable, value);
            },
    
            /*****************************
             * INFINITE SCROLL
             */
            getMore: function(){
                var self = this, controller = self.controllerFor('application'),
                    items = [];
    
                // simulate latency
                Ember['default'].run.later( function() {
                    items = self.send('fetchPage', controller.firstIndex + 1, controller.perPage);
                }, 500);
            },
    
            fetchPage: function(firstIndex, perPage){
                var self = this, controller = self.controllerFor('application'),
                    items = Ember['default'].A([]),
                    lastIndex  = firstIndex + perPage;
    
                if(firstIndex <= controller.queryExpressResults_length) {
                    controller.queryExpressResults.forEach(function(equ, index){
    
                        if( index+1 >= firstIndex && index+1 <= lastIndex ) {
                            controller.items.pushObject(equ);
                            if(index+1 === controller.queryExpressResults_length){
                                controller.firstIndex = controller.queryExpressResults_length;
                                controller.set("searchResultList", controller.items);
                                return false;
                            }
                        } else if (index+1 > lastIndex){
                            controller.firstIndex = lastIndex;
                            controller.set("searchResultList", controller.items);
                            return false;
                        }
                    });
                }
                this.get('controller').send('gotMore', items, firstIndex);
            },
    
            /**
             Alla creazione di un nuovo record vengono controllati i campi che devono avere un valore univoco; se esiste
             già un record con valore uguale viene avvertito l'utente e viene cancellato il campo.
    
             @action checkUniqueField
             @for New record
             @param {string} modello da interrogare
             @param {string} campo da cercare
             @param {string} value del campo da cercare
             @param {string} path del controller di riferimento
             */
            checkUniqueField: function( myModel, myFilter, myVal, path ){
                var self = this, controller = self.controllerFor(path),
                    queryExpression = {}, searchPath = '';
    
                searchPath = myFilter; queryExpression[searchPath] = myVal;
    
                this.store.findQuery(myModel, queryExpression).then(function(val){
                    if(val.get('length') === 1){
                        controller.set('newName', null);
                        //SUCCESS
                        new PNotify({
                            title: 'Attention',
                            text: 'Already exists an item with this '+ myFilter,
                            delay: 2000
                        });
                    }
                });
            },
    
            linkto: function( path, record_id ){
                var self = this, controller = self.controllerFor('application');
    
                controller.set('company_id', record_id);
                controller.set('tabListDetails', false);
                controller.set('tabListUsers', false);
                controller.set('tabListFiles', false);
    
                this.transitionTo(path, record_id);
            },
    
            link_to: function( path, id) {
                if ( id ){
                    this.transitionTo(path, id);
                } else {
                    this.transitionTo(path);
                }
            },
    
            message_manager: function( type, text ){
    
                switch ( type ){
                    case 'Success':
                        new PNotify({
                            title: 'Success',
                            text: text,
                            type: 'success',
                            delay: 2000
                        });
                        break;
                    case 'Warning':
                        new PNotify({
                            title: 'Attention',
                            text: text,
                            delay: 2000
                        });
                        break;
                    case 'Failure':
                        new PNotify({
                            title: 'Error',
                            text: text,
                            type: 'error',
                            delay: 2000
                        });
                        break;
                }
            }
    
        }
    });
    

});
define('p-doc/routes/cal', ['exports', 'ember'], function (exports, Ember) {

	'use strict';

	exports['default'] = Ember['default'].Route.extend({
	});

});
define('p-doc/routes/dashboard/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function(){
            var app_controller = this.controllerFor('application');
    
            app_controller.set('records_posts', this.store.findQuery('post', { sortOrder: 'descendent', sortBy: 'date' } ));
        },
    
    //    model: function() {
    //        var _this = this, controller = _this.controllerFor('dashboard.main');
    //        //return this.store.find('post');
    //        return this.store.filter('post', { sortOrder: 'descendent', sortBy: 'date' }, function( post ) {
    //            return post;
    //        });
    ////
    ////        controller.set('orderedPosts', allPosts);
    //
    //    },
    
        actions: {
            delete_record: function( record_to_remove ){
                record_to_remove.deleteRecord();
                record_to_remove.save();
    
            },
    
            submit: function( record ){
                var _this = this, app_controller = _this.controllerFor('application');
    
                var new_record = _this.store.createRecord('post', {
                    name: "Post",
                    title: _this.controller.postTitle,
                    description: _this.controller.postDescription,
                    date: moment().format()
                });
    
                // belongsTo set() here
                new_record.set('company', record);
    
                Ember['default'].RSVP.all([
                    new_record.get('company'),
                ]).then(function() {
    
                    var onSuccess = function( ) {
                        app_controller.send( 'message_manager', 'Success', 'You have successfully saved the record.' );
    
                        _this.controller.set('postTitle', null);
                        _this.controller.set('postDescription', null);
    
                        app_controller.set('records_posts', _this.store.findQuery('post', { sortOrder: 'descendent', sortBy: 'date' } ));
    
    
                    }.bind(this);
    
                    var onFail = function() {
                        app_controller.send( 'message_manager', 'Failure', 'Something went wrong, the record was not saved.' );
                    }.bind(this);
    
                    // Save inside then() after I call get() on promises
                    new_record.save().then(onSuccess, onFail);
    
                }.bind(this));
            }
        }
    
    
    });

});
define('p-doc/routes/link/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function(){
            var _this = this, app_controller = _this.controllerFor('application');
    
            app_controller.set('records_company', this.store.findAll('company'));
    
        },
    
        model: function( company ) {
            return this.store.find('company', company.company_id);
        },
    
        actions: {
            transition_to: function( path, record ){
                switch ( path ){
                    case 'your-profile/main':
                        record.reload();
                        this.transitionTo( path, record.get('id') );
                        break;
                }
            },
    
            change_mode: function( attr, value ){
                var controller = this.controllerFor('link/main');
    
                controller.set( attr, value );
            },
    
            custom_unbindLinkedCompanies: function( record_id, company ){
                var _this = this, controller = _this.controllerFor('link.main'), app_controller = _this.controllerFor('application'),
                    data = this.getProperties();
    
                data.company = record_id;
                $.post('api/custom/unbindLinkedCompanies?token=' + app_controller.token_pdoc, data).then(function(response){
                    if (response.success) {
                        company.reload();
                        //NOT SAVED
                        new PNotify({
                            title: 'Success',
                            text: 'The linked companies was successfully deleted.',
                            type: 'success',
                            delay: 2000
                        });
                    }
                }, function(){
                    //NOT SAVED
                    new PNotify({
                        title: 'Not saved',
                        text: 'A problem has occurred.',
                        type: 'error',
                        delay: 2000
                    });
                });
            },
            custom_linkCompanies: function( record, attr, value ){
                var _this = this, controller = _this.controllerFor('link.main'), app_controller = _this.controllerFor('application'),
                    data = this.getProperties();
    
                data.company = record.get('id');
    //            this.store.find('company', app_controller.company).then(function( record ){
    
                    $.post('api/custom/linkCompanies?token=' + app_controller.token_pdoc, data).then(function(response){
                        if (response.success) {
                            controller.set('company_to_link', null);
                            controller.set( attr, value );
                            record.reload();
                            //NOT SAVED
                            new PNotify({
                                title: 'Success',
                                text: 'The request was sent.',
                                type: 'success',
                                delay: 2000
                            });
                        }
                    }, function(){
                        //NOT SAVED
                        new PNotify({
                            title: 'Not saved',
                            text: 'A problem has occurred.',
                            type: 'error',
                            delay: 2000
                        });
                    });
    //            });
            }
    
    //        queryCompanies: function(query, deferred) {
    //            this.store.find('company', { name: query.term })
    //                .then(deferred.resolve, deferred.reject);
    //        }
        }
    });

});
define('p-doc/routes/login/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        setupController: function(controller) {
            controller.reset();
        },
    
        actions: {
            changeLanguage: function(val){
                this.get('controller').set('isEnglish', val);
            },
    
            change_newLog: function( val ) {
                this.get('controller').set('newLog', val);
            },
    
            new_signUp: function() {
    
                var _this = this, data = this.controller.getProperties(
                    'firstName',
                    'lastName',
                    'username',
                    'pwd',
                    'userEmail',
                    'name',
                    'vatNumber',
                    'street',
                    'city',
                    'zipCode',
                    'country',
                    'companyEmail',
                    'companyType'
                );
    
                if( (data.firstName !== '' && data.firstName !== null) &&
                    (data.lastName !== '' && data.lastName !== null) &&
                    (data.username !== '' && data.username !== null) &&
                    (data.pwd !== '' && data.pwd !== null) &&
                    (data.userEmail !== '' && data.userEmail !== null) &&
                    (data.name !== '' && data.name !== null) &&
                    (data.vatNumber !== '' && data.vatNumber !== null) &&
                    (data.street !== '' && data.street !== null) &&
                    (data.city !== '' && data.city !== null) &&
                    (data.zipCode !== '' && data.zipCode !== null) &&
                    (data.country !== '' && data.country !== null) &&
                    (data.companyEmail !== '' && data.companyEmail !== null) &&
                    (data.companyType !== '' && data.companyType !== null) ){
    
                    data.userProfile = 'powerUser';
                    data.userType = 'admin';
                    // Clear out any error messages.
                    this.set('errorMessage', null);
                    $.post('api/signUp', data).then(function(response){
                        if (response.success) {
                            new PNotify({
                                title: 'Success',
                                text: 'We have sent to '+data.userEmail +' an email to verify your email address.',
                                type: 'success'
                            });
                        }
                        _this.get('controller').set('firstName', null);
                        _this.get('controller').set('lastName', null);
                        _this.get('controller').set('username', null);
                        _this.get('controller').set('pwd', null);
                        _this.get('controller').set('userEmail', null);
                        _this.get('controller').set('name', null);
                        _this.get('controller').set('vatNumber', null);
                        _this.get('controller').set('street', null);
                        _this.get('controller').set('city', null);
                        _this.get('controller').set('zipCode', null);
                        _this.get('controller').set('country', null);
                        _this.get('controller').set('companyEmail', null);
                        _this.get('controller').set('companyType', null);
    
                        _this.get('controller').set('newLog', 0);
    
                    }, function(){
                        new PNotify({
                            title: 'Error',
                            text: 'Something went wrong sending the email. Please check the e-mail field in your company profile.',
                            type: 'error'
                        });
                    });
                } else {
                    new PNotify({
                        title: 'Error',
                        text: 'All fields have to be compiled.',
                        type: 'error'
                    });
                }
    
            },
    
            open_modal: function( path ) {
                this.render( path, {
                    into: 'application',
                    outlet: 'overview'//,
                    //view: 'modal-manager'
                });
            }
        }
    });

});
define('p-doc/routes/notification/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function() {
            var app_controller = this.controllerFor('application'), controller = this.controllerFor('notification.main');
    
            //imposto la tab company come default per 'your-profile'
            if (controller.tabList.general !== true && controller.tabList.linksRequest !== true) {
                controller.set('tabList.general', true);
            }
    
            var today = Date();
            var queryExpression = 'company='+app_controller.company_id;
           queryExpression = queryExpression+'&sortBy=date&sortOrder=descendent&date={"lt":"'+moment(today).format('YYYY-MM-DD HH:mm:ss')+'"}';
    
            app_controller.set('records_notifications', this.store.findQuery('notification', queryExpression));
    
        },
    
        model: function( company ) {
            return this.store.find('company', company.company_id);
        },
    
        actions: {
            set_variable: function( attr, val ){
                 this.controller.set(attr, val);
            },
            /**
             Gestione della tab navigation in 'your-profile'; rende attiva la tab selezionata dall'utente
    
             @action setTabs
             @for your-profile/main-page
             @param {string} tab selezionata dall'utente - (company/driver/truck/trailer/clerk)
             */
            setTabs: function( tabToActive ){
                this.controller.set('tabList.general',false);
                this.controller.set('tabList.linksRequest',false);
    
                this.controller.set('tabList.' + tabToActive, true);
    //            this.controller.set('transition_to_list', true);
            },
    
            /**
             PUT su un record di un attributo
             @action set_record
             @for notification/main
             @param {object} uno specifico record di un model
             @param {string} attributo del record che deve essere modificato
             @param {object} nuovo valore dell'attributo
             */
            set_record: function( record, attr, value ) {
                record.set(attr, value).save();
            },
    
            open_modal: function( path, record ) {
                var controller = this.controllerFor('notification.main');
    
                controller.set('selectedRecord', record);
    
                this.render(path, {
                    into: 'application',
                    outlet: 'overview',
                    view: 'modal-manager'
                });
            },
    
            /**
             riassegno un valore ad una variabile del controller
    
             @action change_state
             @for notification/main
             @param {string} attributo del record che deve essere modificato
             @param {object} nuovo valore dell'attributo
             */
            change_state: function( attr, value ) {
                this.controller.set(attr, value);
            },
    
            show_hide_notifications: function( attr, value ) {
                this.controller.set(attr, value);
            },
    
            /************************************
             *
             * */
            custom_acceptedLink: function( record, recordFrom, recordTo, actionToken ){
                var _this = this, app_controller = _this.controllerFor('application'),
                    data = this.getProperties();
    
                data.actionFn = 'linkCompanies';
    
                $.post('api/action?actionToken=' + actionToken, data).then(function(response){
                    if (response.success) {
                        record.set('actionToken', null);
                        record.set('highlighted', false);
                        record.save();
    
                        recordTo.reload();
    
                        //SUCCESS
                        app_controller.send( 'message_manager', 'Success', 'You have successfully accepted the connection.' );
                    }
                }, function( response ){
                    //NOT SAVED
                    app_controller.send( 'message_manager', 'Failure', response );
                });
            },
    
            /**
             l'utente può scaricare un file
    
             @action download_file
             @for Booking Item List
             @param {record}
             */
            download_file: function( fileId ) {
                var self = this, app_controller = self.controllerFor('application'),
                    path = 'api/files/' + fileId + '?token=' + app_controller.token_pdoc + '&download=true';
    
                $.fileDownload(path)
                    // .done(function () { alert('File download a success!'); })
                    .fail(function ( text ) {
                        app_controller.send( 'message_manager', 'Failure', text );
                    });
            }
        }
    });

});
define('p-doc/routes/search-company/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function() {
            var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('search-company.main'),
                data = this.getProperties();
    
            app_controller.set('records_company', this.store.find('company'));
    
            data.model = 'company';
            data.field = 'service';
            $.post('api/custom/tag?token=' + app_controller.token_pdoc, data).then(function(response){
                    app_controller.set('auto_suggest_Services', response.tags);
            }, function( response ){
                app_controller.send( 'message_manager', 'Failure', response );
            });
    
            controller.set('is_loading', false);
            controller.set('before_search', true);
        },
    
        actions: {
            search_records: function() {
                var self = this,app_controller =self.controllerFor('application'), controller = self.controllerFor('search-company.main'),
                    queryExpression = 'sortBy="code"';
                controller.set('is_loading', true);
                controller.set("shipmentList", null);
    
                /*     ***infinite scroll***     */
                app_controller.set('searchResultList', []);
                app_controller.set('isAll', false);
                app_controller.set('perPage', 25);
                app_controller.set('firstIndex', 0);
                app_controller.set('items', []);
    
    
    
                //recupero l'id del booking scelto
                if(controller.name != "" && controller.name != null ){
    //                searchPath = "id"; queryExpression[searchPath] = controller.name;
                    queryExpression = queryExpression+'&id='+controller.name;
                }
                //recupero l'id del booking scelto
                if(controller.search_type != "" && controller.search_type != null ){
    //                searchPath = "type"; queryExpression[searchPath] = controller.search_type;
                    queryExpression = queryExpression+'&type='+controller.search_type+'';
                }
                //recupero l'id del booking scelto
                if(controller.search_country != "" && controller.search_country != null ){
    //                searchPath = "country"; queryExpression[searchPath] = controller.search_country;
                    queryExpression = queryExpression+'&country='+controller.search_country;
                }
    
                if(controller.search_services != "" && controller.search_services != null ){
                      var services_string;
                    controller.search_services.filter(function( value, index ){
                        if( index === 0 && controller.search_services.get('length') !== 1){          //è il primo valore e ce ne sono altri nella lista
                            services_string = '"'+value+'",';
                        } else if ( index+1 === controller.search_services.get('length') && controller.search_services.get('length') !== 1){     //è l'ultimo valore della lista e ce ne erano altri prima
                            services_string = services_string +'"'+value+'"';
                            queryExpression = queryExpression+'&services={"or":['+services_string+']}';
                        }else if ( controller.search_services.get('length') === 1 ){                       // cè solo un valore nella lista
                            services_string = '"'+value+'"';
                            queryExpression = queryExpression+'&services={"or":['+services_string+']}';
                        } else{                                                      //valori intermedi nella lista
                            services_string = services_string +'"'+value+'",';
                        }
                    });
    
    //                searchPath = "country"; queryExpression[searchPath] = controller.search_country;
    // queryExpression = queryExpression+'&booking={"booking/state":{"or":["edit","lock","request","pending"]}}';
    
                }
    
                this.store.findQuery('company', queryExpression).then(function(queryExpressResults){
    
                    /*     ***infinite scroll***     */
                    app_controller.set("queryExpressResults_length", queryExpressResults.get('length'));
                    app_controller.set("queryExpressResults", queryExpressResults);
    
                    controller.set('is_loading', false);
                    controller.set('before_search', false);
    
                    queryExpressResults.forEach(function(equ, index){
                        if(index+1 <= app_controller.perPage) {
                            app_controller.items.pushObject(equ);
    
                            if(index+1 === queryExpressResults.get('length')){
                                renderResults();
                                return false;
                            }
                        } else {
                            renderResults();
                            return false;
                        }
                    });
    
                    function renderResults() {
                        app_controller.set('firstIndex', app_controller.perPage);
                        app_controller.set("searchResultList", app_controller.items);
    
                    }
                }, function( reason ){
                    app_controller.send( 'error', reason );
                });
            },
    
            /**
             Gestione delle transizioni tra parziali
    
             @action transition_to
             @for your-profile/main-page
             @param {string} path del parziale che si vuole a lyout
             @param {record} entità legate a company - (driver/truck/trailer/clerk)
             */
            transition_to: function( path, record, var1, value1, var2, value2 ) {
                var _this = this, app_controller = _this.controllerFor('application');
                switch ( path ) {
                    case 'your-profile/main':
    
                        record.reload();
                        _this.transitionTo( path, record.get('id') );
                        break;
                }
            }
        }
    });

});
define('p-doc/routes/your-profile/main', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].Route.extend({
        beforeModel: function() {
            var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('your-profile.main'),
                data = this.getProperties();
    
            controller.set('tabList.company', true);
            controller.set('tabList.driver', false);
            controller.set('tabList.truck', false);
            controller.set('tabList.trailer', false);
            controller.set('tabList.clerk', false);
    
            controller.set('isView', true);
            controller.set('isView_docList', true);
    
            controller.set('record_isNew', false);
    
            this.store.find('company', app_controller.company_id).then(function( record ){
                record.get('links').then(function( allRecord ){
                      var allCompany = allRecord.filter( function( company ){
                           if( company.get('type') === 'certifier' && company.get('publishableKey') ){
                               return company;
                           }
                      });
    
                    app_controller.set('records_companyCertifier', allCompany);
                });
            });
    
            //app_controller.set('records_companyCertifier', this.store.find('company', { type: "certifier",  }));
    
            if( app_controller.user_type === 'driver' ){
                _this.store.find( 'user', app_controller.user_id ).then(function( record ){
                    controller.set( 'sub_record', record );
                });
            }
    
            data.model = 'company';
            data.field = 'service';
            $.post('api/custom/tag?token=' + app_controller.token_pdoc, data).then(function(response){
                app_controller.set('auto_suggest_Services', response.tags);
            }, function( response ){
                app_controller.send( 'message_manager', 'Failure', response );
            });
    
            data.field = 'segment';
            $.post('api/custom/tag?token=' + app_controller.token_pdoc, data).then(function(response){
                app_controller.set('auto_suggest_Segments', response.tags);
            }, function( response ){
                app_controller.send( 'message_manager', 'Failure', response );
            });
    
            data.field = 'area';
            $.post('api/custom/tag?token=' + app_controller.token_pdoc, data).then(function(response){
                app_controller.set('auto_suggest_Areas', response.tags);
            }, function( response ){
                app_controller.send( 'message_manager', 'Failure', response );
            });
        },
    
        model: function( company ) {
            var _this = this, app_controller = _this.controllerFor('application');
            app_controller.set('temp_company_id', company.company_id);
    
            return _this.store.find('company', company.company_id);
    
    
        },
    
        afterModel: function(){
            var _this = this, app_controller = _this.controllerFor('application'),
                isLinked = false;
            /******************************************************************************
            * CONTROLLO PER LA CREAZIONE DI DOCUMENTI SU COMPANY
            *
            * solo utente di tipo clerk/admin associato ad una company linked o proprietaria
            * */
            if( String( app_controller.company_id ) === String( app_controller.temp_company_id ) ){         // se l'utente è associato alla company
                app_controller.set('isLinked', true);
            } else {
                _this.store.find( 'company', app_controller.company_id ).then(function( companyRecord ){
                    companyRecord.get('links').then(function( linkedCompanies ){
                        linkedCompanies.filter(function( company_record, index ){
                            if( String(company_record.get('id')) === String(app_controller.temp_company_id) ){      //se la company è di tipo linked
                                isLinked = true;
                            }
    
                            if( index+1 === linkedCompanies.get('length')){
                                app_controller.set('isLinked', isLinked);
                            }
                        });
                    });
                });
            }
        },
    
        actions: {
    
    
            set_variable: function( attr, value ){
                this.controller.set( attr, value );
            },
    
            /**
             Gestione della tab navigation in 'your-profile'; rende attiva la tab selezionata dall'utente
    
             @action setTabs
             @for your-profile/main-page
             @param {string} tab selezionata dall'utente - (company/driver/truck/trailer/clerk)
             */
            setTabs: function( tabToActive ){
                var _this = this, app_controller = _this.controllerFor('application');
    
                this.controller.set('tabList.company',false);
                this.controller.set('tabList.driver',false);
                this.controller.set('tabList.truck',false);
                this.controller.set('tabList.trailer',false);
                this.controller.set('tabList.clerk',false);
    
                this.controller.set('tabList.' + tabToActive, true);
                this.controller.set('transition_to_list', true);
                this.controller.set('record_isNew', false);
                switch ( tabToActive ){
                    case 'company':
                        this.controller.set('isView', true);
                        this.controller.set('isView_docList', true);
                        this.controller.set('isView_docDetails', true);
                        break;
                    case 'driver':
                        this.controller.set('isView_docList', true);
                        break;
                    case 'truck':
                        this.controller.set('isView_docList', true);
                        break;
                    case 'trailer':
                        this.controller.set('isView_docList', true);
                        break;
                    default:
                    break;
                }
            },
    
            /**
             Gestione delle transizioni tra parziali
    
             @action transition_to
             @for your-profile/main-page
             @param {string} path del parziale che si vuole a lyout
             @param {record} entità legate a company - (driver/truck/trailer/clerk)
             */
            transition_to: function( path, record, var1, value1, var2, value2 ) {
                var _this = this, app_controller = _this.controllerFor('application');
               switch ( path ) {
                   case 'your-profile/partials/-user-field':
                       this.controller.set( 'sub_record', record );
                       this.controller.set( 'transition_to_list', false );
                       this.send('set_variable', var1, value1);
                       break;
                   case 'your-profile/partials/-vehicle-field':
                       this.controller.set( 'sub_record', record );
                       this.controller.set( 'transition_to_list', false );
                       this.send('set_variable', var1, value1);
                       break;
                   case 'your-profile/tabs/-tabs-list':
                       this.controller.set( 'sub_record', record );         //record === null
                       this.controller.set( 'transition_to_list', true );
                       this.send('set_variable', var1, value1);
                       break;
                   case 'your-profile/partials/-company-document-edit':
                       this.controller.set( 'sub_record_document', record );
    
                       /** se non è un supplier inizializzo la lista di doc-template in base al certificatore della company in questione */
                       if( app_controller.company_type !== "supplier" ) {
                           app_controller.company_record.get('certifier').then(function( record ){
    
                               if( _this.controller.tabList.company ){
                                   app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'company' }));
                               } else  if( _this.controller.tabList.driver ){
                                   app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'driver' }));
                               } else  if( _this.controller.tabList.truck ){
                                   app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'truck' }));
                               } else  if( _this.controller.tabList.trailer ){
                                   app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'trailer' }));
                               }
                           });
                       }
    
    
                       this.send('set_variable', var1, value1);
                       this.send('set_variable', var2, value2);
                       break;
                   case 'your-profile/partials/-company-document-list':
                       if( this.controller.record_isNew ){
                           record.deleteRecord();
                           record.save();
                       }
    
                       this.controller.set( 'sub_record_document', record );
                       this.send('set_variable', var1, value1);
                       this.send('set_variable', var2, value2);
                       break;
                   case 'your-profile/partials/-tab-user-driver-list':
                       this.controller.set( 'sub_record', record );
                       this.send('set_variable', var1, value1);
                       this.send('set_variable', var2, value2);
                       break;
               }
            },
    
            /************************************************************
             * viene richiamata l'azione PUT
             * 
             * @param type
             * @param path
             * @param value
             */
            set_record: function( type, path, value, companyRecord ) {
                var _this = this, app_controller = _this.controllerFor('application');
    
                switch (type) {
                    case 'document':
                        companyRecord.get('certifier').then(function( certifier ){
                            _this.controller.sub_record_document.set( 'certifier', certifier );
    
                            if( _this.controller.sub_record_document.get('type') === 'document' ){
                                _this.controller.sub_record_document.save().then(function( saved_record ){
                                    if( _this.controller.tabList.company ){
                                        companyRecord.reload().then(function(){
                                            _this.controller.set('record_isNew', false);
                                            app_controller.send( 'message_manager', 'Success', 'You have successfully saved the document.' );
                                            _this.controller.set( path, value );
                                        });
                                    } else {
                                        companyRecord.reload().then(function(){
                                            _this.controller.set('record_isNew', false);
                                            app_controller.send( 'message_manager', 'Success', 'You have successfully saved the document.' );
                                            _this.controller.set( path, value );
                                        });
                                    }
    
                                });
                            } else {
                                _this.controller.sub_record_document.set('validityDate', null).set('deadline', null).set('grace', null).set('alert', null);
    
                                _this.controller.sub_record_document.save().then(function( saved_record ){
                                    if( _this.controller.tabList.company ){
                                        companyRecord.reload().then(function(){
                                            app_controller.send( 'message_manager', 'Success', 'You have successfully saved the document.' );
                                            _this.controller.set('record_isNew', false);
                                            _this.controller.set( path, value );
                                        });
    
                                    } else {
                                        companyRecord.reload().then(function(){
                                            app_controller.send( 'message_manager', 'Success', 'You have successfully saved the document.' );
                                            _this.controller.set('record_isNew', false);
                                            _this.controller.set( path, value );
                                        });
                                    }
                                });
                            }
    
                        });
                        break;
                    case 'user_vehicle':
                        _this.controller.sub_record.save().then(function( saved_record ){
                            app_controller.send( 'message_manager', 'Success', 'You have successfully saved the post.' );
                            _this.controller.set( path, value );
    
                        }, function( text ){
                            app_controller.send( 'message_manager', 'Failure', text );
                        });
    
                        break;
                    case 'company_details':
                            companyRecord.save().then(function( saved_record ){
                                app_controller.send( 'message_manager', 'Success', 'You have successfully saved the post.' );
                                _this.controller.set( path, value );
    
                            }, function( text ){
                                app_controller.send( 'message_manager', 'Failure', text );
                            });
                        break;
                }
            },
    
            save_logo: function( record, attr, value ){
                var _this = this, app_controller = _this.controllerFor('application');
    
                if(app_controller.formData_size !== null){
    
                    if(app_controller.formData.size > '10000000') {     //verifico che il file sia meno grande di 10 Mega-Byte
                        new PNotify({title: 'Warning',text: 'The file must be smaller than 10 MB.',type: 'info',delay: 4000});
                        _this.controller.set( attr, value );
                    } else {
                        var $btn = $(this);
                        $btn.button('loading');
    
                        record.get('files').then(function( allFiles ){
                            var files_length = allFiles.get('length');
                            if( files_length !== 0 ){
                                allFiles.forEach(function( file, index ){
                                    if( file.get('type') === 'LOGO' ){
                                        file.deleteRecord();
                                        file.save();
                                    }
                                    if(files_length === index + 1 ){
                                        $.ajax({
                                            url: 'api/files?token='+ app_controller.token_pdoc +'&entity='+record.get('id')+'&type=logo',
                                            type: "POST",
                                            data: app_controller.formData,
                                            processData: false,
                                            contentType: false
                                        }).then(function(){
                                            $btn.button('reset');
                                            app_controller.formData = new FormData();
                                            app_controller.formData_size = null;
                                            record.reload();
                                            _this.controller.set( attr, value );
    
                                        }, function(){
                                            $btn.button('reset');
                                            new PNotify({title: 'Error',text: 'A problem was occurred.',type: 'error',delay: 4000});
                                        });
    
                                    }
                                });
                            } else {
                                $.ajax({
                                    url: 'api/files?token='+ app_controller.token_pdoc +'&entity='+record.get('id')+'&type=logo',
                                    type: "POST",
                                    data: app_controller.formData,
                                    processData: false,
                                    contentType: false
                                }).then(function(){
                                    $btn.button('reset');
                                    app_controller.formData = new FormData();
                                    app_controller.formData_size = null;
                                    record.reload();
                                    _this.controller.set( attr, value );
    
                                }, function(){
                                    $btn.button('reset');
                                    new PNotify({title: 'Error',text: 'A problem was occurred.',type: 'error',delay: 4000});
                                });
                            }
    
                        });
    
    
                    }
                } else {
                    _this.controller.set( attr, value );
                }
    
            },
    
    
    
            /**
             *   creazione di un nuovo record
             *
             * */
    
            create_record: function( record_company, path, value, attr1, val1, type ){
                var _this = this, app_controller = _this.controllerFor('application'), new_record;
    
                /** COMPANY TAB */
                if ( _this.controller.tabList.company ) {
                    var today = new Date();
    
                    new_record = this.store.createRecord('document', {
                        canEdit: true,
                        canRemove: true,
                        entity: record_company.get('id'),
                        entityType: 'company',
                        date: moment(today).format('YYYY-MM-DD HH:mm:ss'),
                        status: 'active',
                        isCertified: false
                    });
    
                    record_company.get('certifier').then(function( certifier ){
                        new_record.set('company', record_company);
                        new_record.set('certifier', certifier);
    
                        Ember['default'].RSVP.all([
                            new_record.get('company'),
                            new_record.get('certifier'),
                        ]).then(function() {
    
                            new_record.save().then(function( savedRecord ){
                                _this.controller.set('record_isNew', true);
                                //savedRecord
                                savedRecord.get('certifier').then(function( record ) {
                                    app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'company' }));
                                });
                            });
                        }.bind(this));
    
                        _this.controller.set( attr1, val1 );
                        _this.controller.set( 'sub_record_document', new_record );
                    });
    
                    /** DRIVER TAB */
                } else if ( _this.controller.tabList.driver ) {
    
                    if( type === 'document' ){
                        new_record = this.store.createRecord('document', {
                            canEdit: true,
                            canRemove: true,
                            entity:  _this.controller.sub_record.get('id'),
                            entityType: 'user',
                            date: moment(today).format(),
                            status: 'active',
                            isCertified: false
                        });
    
                        record_company.get('certifier').then(function( certifier ){
                            new_record.set('company', record_company);
                            new_record.set('certifier', certifier);
    
                            Ember['default'].RSVP.all([
                                new_record.get('company'),
                                new_record.get('certifier'),
                            ]).then(function() {
                                new_record.save().then(function( savedRecord ){
                                    _this.controller.set('record_isNew', true);
                                    savedRecord.get('certifier').then(function( record ) {
                                        app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'driver' }));
                                    });
                                });
    
                            }.bind(this));
    
                            _this.controller.set( attr1, val1 );
                            _this.controller.set( 'sub_record_document', new_record );
                        });
                    }
    
                    /** CLERK TAB */
                } else if ( _this.controller.tabList.clerk ) {
    
    
                    /** TRUCK TAB */
                } else if ( _this.controller.tabList.truck ) {
    
                    if( type === 'document' ){
                        new_record = this.store.createRecord('document', {
                            canEdit: true,
                            canRemove: true,
                            entity:  _this.controller.sub_record.get('id'),
                            entityType: 'vehicle',
                            date: moment(today).format(),
                            status: 'active',
                            isCertified: false
                        });
    
                        record_company.get('certifier').then(function( certifier ){
                            new_record.set('company', record_company);
                            new_record.set('certifier', certifier);
    
                            Ember['default'].RSVP.all([
                                new_record.get('company'),
                                new_record.get('certifier'),
                            ]).then(function() {
                                new_record.save().then(function( savedRecord ){
                                    _this.controller.set('record_isNew', true);
                                    savedRecord.get('certifier').then(function( record ) {
                                    app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'truck' }));
                                });
                                });
                            }.bind(this));
    
                            _this.controller.set( attr1, val1 );
                            _this.controller.set( 'sub_record_document', new_record );
                        });
                    }
    
                    /** TRAILER TAB */
                } else if ( _this.controller.tabList.trailer ) {
                    if( type === 'document' ){
                        new_record = this.store.createRecord('document', {
                            canEdit: true,
                            canRemove: true,
                            entity:  _this.controller.sub_record.get('id'),
                            entityType: 'vehicle',
                            date: moment(today).format(),
                            status: 'active',
                            isCertified: false
                        });
    
                        record_company.get('certifier').then(function( certifier ){
                            new_record.set('company', record_company);
                            new_record.set('certifier', certifier);
    
                            Ember['default'].RSVP.all([
                                new_record.get('company'),
                                new_record.get('certifier'),
                            ]).then(function() {
                                new_record.save().then(function( savedRecord ){
                                    _this.controller.set('record_isNew', true);
                                    savedRecord.get('certifier').then(function( record ) {
                                    app_controller.set('records_docTemplate', _this.store.find('docTemplate', { company: record.get('id'), type: 'trailer' }));
                                });
                                });
                            }.bind(this));
    
                            _this.controller.set( attr1, val1 );
                            _this.controller.set( 'sub_record_document', new_record );
                        });
                    }
                }
    
    
                _this.controller.set( 'transition_to_list', false );
                _this.controller.set( path, value );
    
            },
    
            /**
             * apertura di un modale nella pagina corrente
             * 
             * @param path
             * @param record_to_delete
             * @param record
             */
            open_modal: function( path, record_to_delete, record, type) {
                var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('your-profile/main');
    
                switch (path){
                    case 'your-profile/modals/delete-record':
                        //controller.set('main_record', record);
                        controller.set('record_to_delete', record_to_delete);
                        break;
                    case 'your-profile/modals/new-record':
                        controller.set('main_record', record);
                        controller.set('record_type', type);
                }
    
                this.render(path, {
                    into: 'application',
                    outlet: 'overview',
                    view: 'modal-manager'
                });
            },
    
            delete_record: function() {
                var _this = this, app_controller = _this.controllerFor('application'), controller = _this.controllerFor('your-profile/main');
    
                controller.record_to_delete.deleteRecord();
                controller.record_to_delete.save();//.then(function(){
                   // controller.main_record.reload();
    //            });
            },
    
    
            /**
             faccio il reload del record a cui sono stati aggiunti i files
    
             @action update_files
             @for Booking - Files Tab
             @param {Number} - unique key
             @param {String}
             @param {String}
             */
    
            update_files: function(mod, val, $btn){
                this.store.find( mod, val ).then(function( record ){
                    record.save();
                    $btn.button('reset');
                    //record.reload();
                });
            },
    
            /**
             l'utente può scaricare un file
    
             @action download_file
             @for Booking Item List
             @param {record}
             */
            download_file: function( fileId ) {
                var self = this, app_controller = self.controllerFor('application'),
                    path = 'api/files/' + fileId + '?token=' + app_controller.token_pdoc + '&download=true';
    
                $.fileDownload(path)
                    // .done(function () { alert('File download a success!'); })
                    .fail(function ( text ) {
                        app_controller.send( 'message_manager', 'Failure', text );
                    });
            },
    
            /*********************************** FUNZIONI CUSTOM ***********************************/
    
            /**
             invio richiesta per rating
    
             @action custom_notifyDocument
             @for your-profile/partials/-company-documents-list.hbs
             @param {document_id} id del documento su cui fare rating
             */
            custom_notifyDocument: function( document_record ){
                var self = this, app_controller = self.controllerFor('application'),
                    data = this.getProperties();
    
    
                data.document = document_record.get('id');
    
                $.post('api/custom/notifyDocument?token=' + app_controller.token_pdoc, data).then(function(response){
                    if (response.success) {
                        document_record.set('isCertified', true).save();
                        app_controller.send( 'message_manager', 'Success', 'You have successfully sent the document.' );
                    }
                }, function( response ){
                    app_controller.send( 'message_manager', 'Failure', response );
                });
            },
    
            /**
             invio richiesta per cambio certificatore
    
             @action custom_setCertifier
             @for your-profile/partials/-field-company.hbs
             @param {company_id} id della company certificatrice
             */
            custom_setCertifier: function( company_id ){
                var self = this, app_controller = self.controllerFor('application'),
                    data = this.getProperties();
    
                data.company = company_id;
    
                $.post('api/custom/setCertifier?token=' + app_controller.token_pdoc, data).then(function(response){
                    if (response.success) {
    
    //                    self.store.find('company', company_id).then(function( record ){
    //                        Stripe.setPublishableKey( record.get('publishableKey') );
    //                    });
    
                        app_controller.send( 'message_manager', 'Success', 'You have successfully add the certifier.' );
                    }
                }, function( response ){
                    var json = response.responseText, result = JSON.parse(json);
                    var error = result.error;
                    app_controller.send( 'message_manager', 'Failure', error );
                });
            },
    
            /**
             invio richiesta per rimozione certificatore
    
             @action custom_removeCertifier
             @for your-profile/partials/-field-company.hbs
    
             */
            custom_removeCertifier: function( record ){
                var self = this, app_controller = self.controllerFor('application');
    
                $.post('api/custom/removeCertifier?token=' + app_controller.token_pdoc).then(function(response){
                    if (response.success) {
                        record.set('certifier', null);
    //                    Stripe.setPublishableKey( null );
                        app_controller.send( 'message_manager', 'Success', 'You have successfully remove the certifier.' );
                    }
                }, function( response ){
                    var json = response.responseText, result = JSON.parse(json);
                    var error = result.error;
                    app_controller.send( 'message_manager', 'Failure', error );
                });
            },
    
    
            custom_showRating: function( record, type ){
                var _this = this, data = _this.getProperties(), app_controller = _this.controllerFor('application');
    
                    record.get('ratings').then(function( ratings ){
    
    
    
                        data.company = record.get('id');
                        switch ( type ){
                            case 'service':
                                $.post('api/custom/companyServiceScore?token=' + app_controller.token_pdoc, data).then(function(response){
                                    if( response.success ){
                                        record.set('serviceScore', response.score);
                                        record.set('visualizationCredit', response.visualizationCredit);
                                    } else {
                                        app_controller.send( 'message_manager', 'Failure', response.error );
                                    }
    
                                }, function( response ){
                                    app_controller.send( 'message_manager', 'Failure', response.error );
    
                                });
    
    
                                break;
                            case 'certification':
                                $.post('api/custom/companyCertificationScore?token=' + app_controller.token_pdoc, data).then(function(response){
                                    if( response.success ){
                                        record.set('certificationScore', response.score);
                                        record.set('visualizationCredit', response.visualizationCredit);
                                    } else {
                                        app_controller.send( 'message_manager', 'Failure', response.error );
                                    }
                                }, function(response){
                                    app_controller.send( 'message_manager', 'Failure', response.error );
    
                                });
                                break;
                        }
                    });
            }
        }
    });

});
define('p-doc/templates/account/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.paymentDetails:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "paymentDetails", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.paymentDetails", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                    </li>\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.buyCredits:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "buyCredits", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.pricePlan", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                    </li>\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.orderHistory:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "orderHistory", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.orderHistory", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                    </li>\r\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "account/tabs/-payment-details", options) : helperMissing.call(depth0, "partial", "account/tabs/-payment-details", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "account/tabs/-buy-credits", options) : helperMissing.call(depth0, "partial", "account/tabs/-buy-credits", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "account/tabs/-order-history", options) : helperMissing.call(depth0, "partial", "account/tabs/-order-history", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <!-------------------- HEADER ---------------------->\r\n            <div class=\"row\">\r\n                <!-------------------- button return-to-list ---------------------->\r\n                <div class=\"col-lg-2\">\r\n\r\n                </div>\r\n                <!-------------------- nome company ---------------------->\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.account", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <!-------------------- cambio button tra new/save ---------------------->\r\n                <!--<div class=\"col-lg-2\">-->\r\n                    <!---->\r\n                        <!---->\r\n                            <!--<button type=\"button\" class=\"btn btn-default pull-right btn-90\" >-->\r\n                                <!--<span class=\"glyphicon glyphicon-pencil btn-font-color\"></span>-->\r\n                            <!--</button>-->\r\n                        <!---->\r\n                            <!--<button type=\"button\" class=\"btn btn-default pull-right btn-90\" >-->\r\n                                <!--<span class=\"glyphicon glyphicon-ok btn-font-color\"></span>-->\r\n                            <!--</button>-->\r\n                        <!---->\r\n\r\n                    <!---->\r\n                <!--</div>-->\r\n            </div>\r\n        </div>\r\n        <!-------------------- BODY ---------------------->\r\n        <div class=\"panel-body\">\r\n            <!-------------------- tabs head - general/company/driver/truck/trailer ---------------------->\r\n            <ul class=\"nav nav-pills nav-justified\" style=\"margin-bottom: 15px;\">\r\n                ");
    stack1 = helpers.unless.call(depth0, "is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </ul>\r\n            <div class=\"tab-content\">\r\n                <div class=\"tab-pane fade active in\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.paymentDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.buyCredits", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.orderHistory", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/account/modals/new-payment-plan', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.newPaymentPlan", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"form-group\">\r\n                ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("controller.listType"),
      'value': ("type"),
      'prompt': ("app_controller.translation.selectTheType"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'prompt': "ID",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'prompt': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"form-group\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'value': ("planName"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"form-group\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'value': ("planDescription"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.amount", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"form-group\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("number"),
      'value': ("planAmount"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.currency", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"form-group\">\r\n                ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("controller.listCurrency"),
      'value': ("planCurrency"),
      'prompt': ("app_controller.translation.selectTheCurrency"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'prompt': "ID",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'prompt': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.credits", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"form-group\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("number"),
      'maxlength': (4),
      'value': ("planCredit"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "new_plan", "type", "planName", "planDescription", "planAmount", "planCurrency", "planCredit", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","ID","ID","ID","ID","ID","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.save", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/account/tabs/-buy-credits', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "app_controller.is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <div class=\"alert alert-dismissable alert-danger\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\r\n                    <strong>Connect with stripe!</strong>\r\n                    <a href='https://connect.stripe.com/oauth/authorize?scope=read_write&response_type=code&state=");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "app_controller.company_id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("&client_id=");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "app_controller.stripe_clientKey", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("' style=\"color: #ffffff;\">Click here to connect.</a>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <div class=\"col-lg-1\">\r\n                    <!-------------------- pencil ---------------------->\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-11\"><legend style=\"margin-top: 35px\"></legend></div>\r\n            ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "account/modals/new-payment-plan", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                    ");
    return buffer;
    }

  function program7(depth0,data) {
    
    
    data.buffer.push("\r\n                <div class=\"col-lg-12\"><legend style=\"margin-top: 35px\"></legend></div>\r\n            ");
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <div class=\"col-lg-4\">\r\n                            ");
    stack1 = helpers['if'].call(depth0, "payment.isVisualization", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                    ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                ");
    stack1 = helpers.view.call(depth0, "tooltip", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            ");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    <div class=\"panel panel-info\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Visualization payment plan.\" >\r\n                                        <div class=\"panel-heading\" style=\"text-align: center\">\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "payment.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                            <h4 style=\"color: #ffffff\"> ");
    stack1 = helpers._triageMustache.call(depth0, "payment.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\r\n                                        </div>\r\n                                        <div class=\"panel-body\">\r\n                                            <h2 style=\"color: #808080; text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "payment.credit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" Credits</h2>\r\n                                            <h4 style=\"color: #808080; text-align: center\">Per ");
    stack1 = helpers._triageMustache.call(depth0, "payment.amount", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "payment.currency", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\r\n                                            <h6 style=\"color: darkgray; text-align: center\">( vat 22% excluded )</h6>\r\n                                            <br>\r\n                                            <br>\r\n                                            ");
    stack1 = helpers.unless.call(depth0, "is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                        </div>\r\n                                    </div>\r\n                                ");
    return buffer;
    }
  function program12(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "delete_plan", "paymentPlan", "payment", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push("><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button>\r\n                                            ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-lg-12\" style=\"text-align: center\">\r\n                                                        ");
    stack1 = helpers.view.call(depth0, "button-disabled-on-click", {hash:{
      'class': ("btn btn-lg btn-default btn-130"),
      'disabled': (false),
      'plan': ("payment.id"),
      'company': ("id"),
      'user': ("app_controller.user_id")
    },hashTypes:{'class': "STRING",'disabled': "BOOLEAN",'plan': "ID",'company': "ID",'user': "ID"},hashContexts:{'class': depth0,'disabled': depth0,'plan': depth0,'company': depth0,'user': depth0},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                                    </div>\r\n                                                </div>\r\n                                            ");
    return buffer;
    }
  function program15(depth0,data) {
    
    
    data.buffer.push("Buy now!");
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                ");
    stack1 = helpers.view.call(depth0, "tooltip", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            ");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    <div class=\"panel panel-primary\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Certification payment plan.\" >\r\n                                        <div class=\"panel-heading\" style=\"text-align: center\">\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "payment.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                            <h4 style=\"color: #ffffff\"> ");
    stack1 = helpers._triageMustache.call(depth0, "payment.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\r\n                                        </div>\r\n                                        <div class=\"panel-body\">\r\n                                            <h2 style=\"color: #808080; text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "payment.credit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" Credits</h2>\r\n                                            <h4 style=\"color: #808080; text-align: center\">Per ");
    stack1 = helpers._triageMustache.call(depth0, "payment.amount", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "payment.currency", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\r\n                                            <h6 style=\"color: darkgray; text-align: center\">( vat 22% excluded )</h6>\r\n                                            <br>\r\n                                            <br>\r\n                                            ");
    stack1 = helpers.unless.call(depth0, "is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                        </div>\r\n                                    </div>\r\n                                ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\">\r\n    <div class=\"col-lg-7\"></div>\r\n    <div class=\"col-lg-4\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "publishableKey", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <!-------------------- BUTTON ---------------------->\r\n        <div class=\"form-group\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                <div class=\"row\">\r\n                    ");
    stack1 = helpers.each.call(depth0, "payment", "in", "app_controller.records_paymentPlans", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/account/tabs/-order-history', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th style=\"width: 20%\">date</th>\r\n                    <th style=\"width: 20%\">amount</th>\r\n                    <th style=\"width: 20%\">credits</th>\r\n                    <th style=\"width: 20%\">download</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                ");
    stack1 = helpers.each.call(depth0, "refill", "in", "refills", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </tbody>\r\n            </table>\r\n        ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <tr>\r\n                        <td>");
    stack1 = helpers._triageMustache.call(depth0, "refill.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                        <td>");
    stack1 = helpers._triageMustache.call(depth0, "refill.amount", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                        <td>");
    stack1 = helpers._triageMustache.call(depth0, "refill.credit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                        <td>\r\n                            ");
    stack1 = helpers.each.call(depth0, "file", "in", "refill.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </td>\r\n                    </tr>\r\n                ");
    return buffer;
    }
  function program3(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-download\"></span></a>\r\n                            ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/account/tabs/-payment-details', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers.unless.call(depth0, "app_controller.is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <br />\r\n                <div class=\"alert alert-dismissable alert-danger\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\r\n                    <strong>Connect with a certifier to set your payment details.</strong><br />\r\n                    <a style=\"color: #ffffff; cursor: pointer\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "link_to", "your-profile/main", "app_controller.company_id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(">Click here to return to your company.</a>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <!-------------------- BUTTON ---------------------->\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-lg-1\">\r\n                            <!-------------------- pencil ---------------------->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "controller.mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                        <div class=\"col-lg-11\"><legend style=\"margin-top: 35px\"></legend></div>\r\n                    </div>\r\n\r\n\r\n\r\n                <!-------------------- FIELDS ---------------------->\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.cardNumber", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <div class=\"col-lg-9\">\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(21, program21, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </div>\r\n                </div>\r\n                ");
    stack1 = helpers.unless.call(depth0, "controller.mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(23, program23, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_mode", "mode_view", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n\r\n                                <!-------------------- ok ---------------------->\r\n                            ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "send_toStripe", "mode_view", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                            ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                        <div class=\"col-lg-9\">\r\n                            ");
    stack1 = helpers['if'].call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.certificationCredit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                        <div class=\"col-lg-9\">\r\n                            ");
    stack1 = helpers['if'].call(depth0, "certificationCredit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.visualizationCredit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                        <div class=\"col-lg-9\">\r\n                            ");
    stack1 = helpers['if'].call(depth0, "visualizationCredit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(16, program16, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                    </div>\r\n                ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                            ");
    return buffer;
    }

  function program12(depth0,data) {
    
    
    data.buffer.push("\r\n                                <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                            ");
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "certificationCredit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                            ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "visualizationCredit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                            ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "cardNumber", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "hideCardNumber", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                            ");
    return buffer;
    }

  function program21(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            <div class=\"input-group\">\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (4),
      'value': ("controller.cardNumber1"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                <span class=\"input-group-addon\">-</span>\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (4),
      'value': ("controller.cardNumber2"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                <span class=\"input-group-addon\">-</span>\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (4),
      'value': ("controller.cardNumber3"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                <span class=\"input-group-addon\">-</span>\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (4),
      'value': ("controller.cardNumber4"),
      'class': ("form-control")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                            </div>\r\n                        ");
    return buffer;
    }

  function program23(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\" class=\"col-lg-3 control-label\">CVC</label>\r\n                        <div class=\"col-lg-3\">\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (4),
      'value': ("controller.cvc"),
      'class': ("form-control"),
      'placeholder': ("CVC")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING",'placeholder': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                        </div>\r\n                        <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.expiration", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                        <div class=\"col-lg-3\">\r\n                            <div class=\"input-group\">\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (2),
      'value': ("controller.mm"),
      'class': ("form-control"),
      'placeholder': ("MM")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING",'placeholder': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                <span class=\"input-group-addon\">/</span>\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("string"),
      'maxlength': (4),
      'value': ("controller.yyyy"),
      'class': ("form-control"),
      'placeholder': ("YYYY")
    },hashTypes:{'type': "STRING",'maxlength': "INTEGER",'value': "ID",'class': "STRING",'placeholder': "STRING"},hashContexts:{'type': depth0,'maxlength': depth0,'value': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\">\r\n    <div class=\"col-lg-7\"></div>\r\n    <div class=\"col-lg-4\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <form class=\"form-horizontal\">\r\n            <fieldset>\r\n                ");
    stack1 = helpers['if'].call(depth0, "certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </fieldset>\r\n        </form>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/admin/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/partials/-progress-bar", options) : helperMissing.call(depth0, "partial", "admin/partials/-progress-bar", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <!-------------------- mode new document ---------------------->\r\n                        ");
    stack1 = helpers['if'].call(depth0, "view_new_field", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program4(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            <div class=\"well well-sm\">\r\n                                <div class=\"row row-margin-top-bottom\">\r\n                                    <div class=\"col-lg-1\"></div>\r\n                                    <div class=\"col-lg-10\">\r\n                                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/partials/-new-doc", options) : helperMissing.call(depth0, "partial", "admin/partials/-new-doc", options))));
    data.buffer.push("\r\n                                    </div>\r\n                                    <div class=\"col-lg-1\"></div>\r\n                                </div>\r\n                            </div>\r\n                        ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        <!-------------------- TAB BODY - COMPANY / DRIVER / TRUCK / TRAILER ---------------------->\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/tabs/-tab-docs-list", options) : helperMissing.call(depth0, "partial", "admin/tabs/-tab-docs-list", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <!-------------------- HEADER ---------------------->\r\n            <div class=\"row\">\r\n                <!-------------------- button return-to-list ---------------------->\r\n                <div class=\"col-lg-2\">\r\n                    <!---->\r\n                        <!--<button type=\"button\" class=\"btn btn-default pull-left btn-90\" >-->\r\n                            <!--<span class=\"glyphicon glyphicon-chevron-left btn-font-color\"></span> <strong class=\"btn-font-color\" style=\"font-size: 21\"></strong>-->\r\n                        <!--</button>-->\r\n                    <!---->\r\n                </div>\r\n                <!-------------------- nome company ---------------------->\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.admin", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <!-------------------- cambio button tra new/save ---------------------->\r\n                <div class=\"col-lg-2\">\r\n                    <!--<div style=\"margin-top: 2px\">-->\r\n                        <!---->\r\n                          <!---->\r\n                        <!---->\r\n                    <!--</div>-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-------------------- BODY ---------------------->\r\n        <div class=\"panel-body\">\r\n            <!-------------------- tabs head - general/company/driver/truck/trailer ---------------------->\r\n            <ul class=\"nav nav-pills nav-justified\" style=\"margin-bottom: 15px;\">\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.general:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "general", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.general", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.company:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\"");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.driver:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "driver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.drivers", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.truck:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "truck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trucks", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.trailer:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "trailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trailers", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n            </ul>\r\n            <div class=\"tab-content\">\r\n                <div class=\"tab-pane fade active in\">\r\n                    <!-------------------- tabs body - progress bar - mode view ---------------------->\r\n                    ");
    stack1 = helpers.unless.call(depth0, "view_new_field", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    <!-------------------- TAB BODY - GENERAL ---------------------->\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.general", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/admin/modals/add-file', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <table class=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "main_record.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </tbody>\r\n                </table>\r\n            ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <tr>\r\n                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                        </tr>\r\n                    ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                <div class=\"input-group\">\r\n                            <span class=\"input-group-btn\">\r\n                                <span class=\"btn btn-primary btn-file\">\r\n                                    Browse file&hellip; <input type=\"file\" multiple>\r\n                                </span>\r\n                            </span>\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("selected_file"),
      'type': ("text"),
      'placeholder': ("max. 10 MB"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'type': "STRING",'placeholder': "STRING",'class': "STRING"},hashContexts:{'id': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    <span class=\"input-group-btn\">\r\n                        <button id='button_upload' ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'value': ("controller.main_record.id")
    },hashTypes:{'value': "ID"},hashContexts:{'value': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" type=\"button\" data-loading-text=\"Loading...\" class=\"btn btn-primary btn-130 pull-right\"><span class=\"glyphicon glyphicon-floppy-disk\"></span> Upload</button>\r\n                    </span>\r\n                </div>\r\n            ");
    return buffer;
    }

    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.AddFiles", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "main_record.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            ");
    stack1 = helpers.view.call(depth0, "upload-file", {hash:{
      'record_model': ("doc-template")
    },hashTypes:{'record_model': "STRING"},hashContexts:{'record_model': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/admin/modals/delete-record', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression;


    data.buffer.push("<div class=\"modal-header\">\r\n<button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <p>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.AreYouSureYouWantToDeleteThisRecord", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("?</p>\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    <a href=\"#\" class=\"btn btn-primary\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "delete_record", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/admin/partials/-docs-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <div class=\"col-lg-2\">\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "admin/modals/delete-record", "docTemp", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-trash\"></span></button>\r\n                    </div>\r\n                    <div class=\"col-lg-10\">\r\n                        ");
    stack1 = helpers._triageMustache.call(depth0, "docTemp.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </div>\r\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    <div class=\"col-lg-12\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("text"),
      'class': ("form-control"),
      'value': ("docTemp.name")
    },hashTypes:{'type': "STRING",'class': "STRING",'value': "ID"},hashContexts:{'type': depth0,'class': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    </div>\r\n                ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.goodsConfiscation", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.goodsConfiscation", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program6(depth0,data) {
    
    
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-check\"></span>\r\n            ");
    }

  function program8(depth0,data) {
    
    
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-unchecked\"></span>\r\n            ");
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.goodsConfiscation", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.goodsConfiscation", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-check btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "goodsConfiscation", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-unchecked btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "goodsConfiscation", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program15(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.vehicleConfiscation", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.vehicleConfiscation", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.vehicleConfiscation", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(20, program20, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.vehicleConfiscation", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-check btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "vehicleConfiscation", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program20(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-unchecked btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "vehicleConfiscation", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program22(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.fiscalResponsibility", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.fiscalResponsibility", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program24(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.fiscalResponsibility", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.fiscalResponsibility", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program25(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-check btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "fiscalResponsibility", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program27(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-unchecked btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "fiscalResponsibility", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.emas", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.emas", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program31(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.emas", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(34, program34, data),fn:self.program(32, program32, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            &nbsp\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.emas", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program32(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-check btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "emas", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program34(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-unchecked btn-font-color\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "docTemp", "emas", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program36(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <label class=\"control-label\">\r\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.validity", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("  <span class=\"glyphicon glyphicon glyphicon-ok\"></span>\r\n                </label>\r\n            ");
    return buffer;
    }

  function program38(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <label class=\"control-label\">\r\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.validity", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </label>\r\n            ");
    return buffer;
    }

  function program40(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("docTemp.validityNum"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program42(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("docTemp.validityNum"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': ("docTemp.isDeadline")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program44(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("docTemp.validityType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0,'disabled': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program46(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("docTemp.validityType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control"),
      'disabled': ("docTemp.isDeadline")
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0,'disabled': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program48(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <label class=\"control-label\">\r\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("  <span class=\"glyphicon glyphicon glyphicon-ok\"></span>\r\n                </label>\r\n            ");
    return buffer;
    }

  function program50(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <label class=\"control-label\">\r\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </label>\r\n            ");
    return buffer;
    }

  function program52(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("docTemp.showDeadline"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program54(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "docTemp.isValidity", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(57, program57, data),fn:self.program(55, program55, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n\r\n                \r\n            ");
    return buffer;
    }
  function program55(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("docTemp.showDeadline"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program57(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['bootstrap-datepicker'] || (depth0 && depth0['bootstrap-datepicker']),options={hash:{
      'value': ("docTemp.deadline"),
      'clearBtn': (true),
      'placeholder': ("Select a date"),
      'class': ("form-control"),
      'autoclose': (true)
    },hashTypes:{'value': "ID",'clearBtn': "BOOLEAN",'placeholder': "STRING",'class': "STRING",'autoclose': "BOOLEAN"},hashContexts:{'value': depth0,'clearBtn': depth0,'placeholder': depth0,'class': depth0,'autoclose': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "bootstrap-datepicker", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program59(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "admin/modals/add-file", "null", "docTemp", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer;\" class=\"btn-font-color glyphicon glyphicon-plus\"></span>\r\n                ");
    return buffer;
    }

  function program61(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.each.call(depth0, "file", "in", "docTemp.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(62, program62, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program62(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <br>\r\n                    <span ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer;\" class=\"btn-font-color\">");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</span>\r\n                ");
    return buffer;
    }

  function program64(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.each.call(depth0, "file", "in", "docTemp.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(65, program65, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program65(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <br>\r\n                    <span ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "admin/modals/delete-record", "file", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer;\" class=\"glyphicon glyphicon-trash btn-font-color\"></span> &nbsp; ");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                ");
    return buffer;
    }

    data.buffer.push("<!------------------------ TAB HEADER ( admin/tabs/-tab-docs-list.hbs )--------------------------->\r\n<!------------------------ TAB BODY --------------------------->\r\n\r\n<!------------------------ PRIMA RIGA --------------------------->\r\n<tr>\r\n    <td rowspan=\"5\">\r\n        <!------------------------ document name --------------------------->\r\n        <h5>\r\n            <div class=\"row\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </h5>\r\n    </td>\r\n    <td>\r\n        <!------------------------ goodsConfiscation --------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </td>\r\n    <td>\r\n        <!------------------------ vehicleConfiscation --------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </td>\r\n\r\n    <!------------------------ VALE DUE RIGHE --------------------------->\r\n    <td rowspan=\"2\">\r\n        <!------------------------ rate - limit --------------------------->\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.rate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("number"),
      'class': ("form-control"),
      'value': ("docTemp.rateValue"),
      'disabled': ("mode_view")
    },hashTypes:{'type': "STRING",'class': "STRING",'value': "ID",'disabled': "ID"},hashContexts:{'type': depth0,'class': depth0,'value': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n    </td>\r\n    <!------------------------ VALE DUE RIGHE --------------------------->\r\n    <td rowspan=\"2\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.limit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("number"),
      'class': ("form-control"),
      'value': ("docTemp.limit"),
      'disabled': ("mode_view")
    },hashTypes:{'type': "STRING",'class': "STRING",'value': "ID",'disabled': "ID"},hashContexts:{'type': depth0,'class': depth0,'value': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n    </td>\r\n</tr>\r\n<!------------------------ SECONDA RIGA --------------------------->\r\n<tr>\r\n    <td>\r\n        <!------------------------ fiscalResponsibility --------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </td>\r\n\r\n    <td>\r\n        <!------------------------ emas --------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(31, program31, data),fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </td>\r\n</tr>\r\n<!------------------------ TERZA RIGA --------------------------->\r\n<tr>\r\n    <td>\r\n        <div class=\"form-group\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.isValidity", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(38, program38, data),fn:self.program(36, program36, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(42, program42, data),fn:self.program(40, program40, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        </div>\r\n    </td>\r\n    <td style=\"padding-top: 32px\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(46, program46, data),fn:self.program(44, program44, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    </td>\r\n    <td colspan=\"2\">\r\n        <div class=\"form-group\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "docTemp.deadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(50, program50, data),fn:self.program(48, program48, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(54, program54, data),fn:self.program(52, program52, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            \r\n\r\n        </div>\r\n    </td>\r\n</tr>\r\n<!------------------------ QUARTA RIGA --------------------------->\r\n<tr>\r\n    <td>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.alert", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("number"),
      'class': ("form-control"),
      'value': ("docTemp.alertNum"),
      'disabled': ("mode_view")
    },hashTypes:{'type': "STRING",'class': "STRING",'value': "ID",'disabled': "ID"},hashContexts:{'type': depth0,'class': depth0,'value': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n    </td>\r\n    <td style=\"padding-top: 32px\">");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("docTemp.alertType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control"),
      'disabled': ("mode_view")
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0,'disabled': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("</td>\r\n    <td>\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.grace", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("number"),
      'class': ("form-control"),
      'value': ("docTemp.graceNum"),
      'disabled': ("mode_view")
    },hashTypes:{'type': "STRING",'class': "STRING",'value': "ID",'disabled': "ID"},hashContexts:{'type': depth0,'class': depth0,'value': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n    </td>\r\n    <td style=\"padding-top: 32px\">");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("docTemp.graceType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control"),
      'disabled': ("mode_view")
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0,'disabled': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("</td>\r\n</tr>\r\n<!------------------------ QUINTA RIGA --------------------------->\r\n<tr>\r\n    <td colspan=\"4\">\r\n        <div class=\"form-group\">\r\n            <label class=\"control-label\">\r\n                ");
    stack1 = helpers.unless.call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(59, program59, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.files", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </label>\r\n            ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(64, program64, data),fn:self.program(61, program61, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n    </td>\r\n</tr>");
    return buffer;
    
  });

});
define('p-doc/templates/admin/partials/-new-doc', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"form-group\" id=\"changeState_name\">\r\n                <label  class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.name"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n        <div class=\"form-group\" id=\"changeState_rateValue\">\r\n            <label  class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.rate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=col-lg-4>\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.rateValue"),
      'type': ("number"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n            <!------------------------------- rate value with progress bar ------------------------------------->\r\n            <div class=col-lg-4>\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isTruck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=col-lg-2>\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isTruck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.new_record.isTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program4(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <div class=\"progress\" style=\"background-color: #ffffff; border: 1px; border-color: #000000;  margin-top: 10px\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isCompanyRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressCompanyRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <div class=\"progress\" style=\"background-color: #ffffff; border: 1px; border-color: #000000;  margin-top: 10px\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isDriverRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressDriverRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <div class=\"progress\" style=\"background-color: #ffffff; border: 1px; border-color: #000000;  margin-top: 10px\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isTruckRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressTruckRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                ");
    return buffer;
    }

  function program10(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <div class=\"progress\" style=\"background-color: #ffffff; border: 1px; border-color: #000000; margin-top: 10px\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isTrailerRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressTrailerRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <h4>");
    stack1 = helpers._triageMustache.call(depth0, "companyRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h4>\r\n                ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <h4>");
    stack1 = helpers._triageMustache.call(depth0, "driverRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h4>\r\n                ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <h4>");
    stack1 = helpers._triageMustache.call(depth0, "truckRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h4>\r\n                ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <h4>");
    stack1 = helpers._triageMustache.call(depth0, "trailerRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h4>\r\n                ");
    return buffer;
    }

  function program20(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.limit"),
      'type': ("number"),
      'class': ("form-control"),
      'placeholder': ("0-100")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'placeholder': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program22(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "limit", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program24(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "limit", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program26(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "goodsConfiscation", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program28(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "goodsConfiscation", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program30(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "vehicleConfiscation", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program32(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "vehicleConfiscation", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program34(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "fiscalResponsibility", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program36(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "fiscalResponsibility", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program38(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "emas", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program40(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "emas", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program42(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "booleanRating", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program44(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "booleanRating", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span>\r\n            ");
    return buffer;
    }

  function program46(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n        <div class=\"form-group\" style=\"margin-top: 20px\" id=\"changeState_validity\">\r\n            <label  class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.validity", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-2\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.validityNum"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': ("new_record.isDeadline")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-2\">\r\n                ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("new_record.validityType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control"),
      'selection': ("selectedValidity")
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING",'selection': "ID"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0,'selection': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n            </div>\r\n            <!------------------------------- deadline ------------------------------------->\r\n            <label class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-4\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.deadline"),
      'type': ("date"),
      'class': ("form-control"),
      'disabled': ("new_record.isValidity")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program48(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div id=\"changeState_alertNum\">\r\n                <label  class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.alert", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-2\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.alertNum"),
      'type': ("number"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                    ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("new_record.alertType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n    ");
    return buffer;
    }

  function program50(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div id=\"changeState_graceNum\">\r\n                <label class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.grace", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-2\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.graceNum"),
      'type': ("number"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                    ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("type_period"),
      'value': ("new_record.graceType"),
      'placeholder': ("Choose a period"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'placeholder': "STRING",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'placeholder': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program52(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.files", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-10\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <form class=\"form-horizontal\">\r\n                                <fieldset>\r\n                                    <div class=\"row\" style=\"margin-top: 15px\">\r\n                                        <div class=\"col-lg-12\">\r\n                                            <table class=\"table table-bordered table-hover\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                ");
    stack1 = helpers.each.call(depth0, "file", "in", "new_record.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(53, program53, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program53(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                                    <tr>\r\n                                                        <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                                        <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                                        <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "admin/modals/delete-record", "file", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                                    </tr>\r\n                                                ");
    return buffer;
    }

  function program55(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    <div class=\"input-group\">\r\n                            <span class=\"input-group-btn\">\r\n                                <span class=\"btn btn-primary btn-file\">\r\n                                    Browse file&hellip; <input type=\"file\" multiple>\r\n                                </span>\r\n                            </span>\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("selected_file"),
      'type': ("text"),
      'placeholder': ("max. 10 MB"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'type': "STRING",'placeholder': "STRING",'class': "STRING"},hashContexts:{'id': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                        <span class=\"input-group-btn\">\r\n                            <button id='button_upload' ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'value': ("new_record.id")
    },hashTypes:{'value': "ID"},hashContexts:{'value': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" type=\"button\" data-loading-text=\"Loading...\" class=\"btn btn-primary btn-130 pull-right\"><span class=\"glyphicon glyphicon-floppy-disk\"></span> Upload</button>\r\n                        </span>\r\n                    </div>\r\n                ");
    return buffer;
    }

    data.buffer.push("<!------------------------------- RECORD FIELD ------------------------------------->\r\n<form class=\"form-horizontal\">\r\n    <fieldset>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-lg-1\">\r\n            <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "view_new_field", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n        </div>\r\n        <div class=\"col-lg-9\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.new", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.document", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend></div>\r\n        <div class=\"col-lg-2\">\r\n            <button class=\"btn btn-default btn-group-justified\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_mode", "view_new_field", false, "return", "new_record", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN","STRING","ID"],data:data})));
    data.buffer.push(">\r\n                <strong>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.return", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n        <!------------------------------- type - company/trailer/driver/truck ------------------------------------->\r\n    <div class=\"form-group\">\r\n        <label  class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n        <div class=\"col-lg-10\">\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("new_record.type"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n    </div>\r\n        <!--<div class=\"form-group\">-->\r\n            <!--<label  class=\"col-lg-2 control-label\"></label>-->\r\n            <!--<div class=\"col-lg-10\">-->\r\n                <!---->\r\n            <!--</div>-->\r\n        <!--</div>-->\r\n        <!------------------------------- name  ------------------------------------->\r\n\r\n        ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("new_record.name"),
      'toChange': ("changeState_name")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        <!------------------------------- rate value ------------------------------------->\r\n    ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("new_record.rateValue"),
      'toChange': ("changeState_rateValue")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        <!------------------------------- limit ------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.limit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=col-lg-4>\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.limit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.limit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <!------------------------------- goods confiscation - boolean ------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-2 control-label\"></label>\r\n            <div class=\"col-lg-1\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.goodsConfiscation", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(28, program28, data),fn:self.program(26, program26, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <label class=\"col-lg-9\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.goodsConfiscation", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n        </div>\r\n        <!------------------------------- vehicle confiscation - boolean ------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-2 control-label\"></label>\r\n            <div class=\"col-lg-1\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.vehicleConfiscation", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(32, program32, data),fn:self.program(30, program30, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <label class=\"col-lg-9\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.vehicleConfiscation", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n        </div>\r\n        <!------------------------------- fiscal Responsibility - boolean ------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-2\"></label>\r\n            <div class=\"col-lg-1\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.fiscalResponsibility", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(36, program36, data),fn:self.program(34, program34, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <label class=\"col-lg-9\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.fiscalResponsibility", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n        </div>\r\n        <!------------------------------- emas - boolean ------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-2 control-label\"></label>\r\n            <div class=\"col-lg-1\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.emas", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(40, program40, data),fn:self.program(38, program38, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <label class=\"col-lg-9\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.emas", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n        </div>\r\n    <!------------------------------- booleanRating - boolean ------------------------------------->\r\n    <div class=\"form-group\">\r\n        <label class=\"col-lg-2 control-label\"></label>\r\n        <div class=\"col-lg-1\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "new_record.booleanRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(44, program44, data),fn:self.program(42, program42, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <label class=\"col-lg-9\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.booleanRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    </div>\r\n\r\n        <!------------------------------- validity ------------------------------------->\r\n    ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("new_record.validityNum"),
      'toChange': ("changeState_validity"),
      'valueToMatch': ("new_record.deadline")
    },hashTypes:{'value': "ID",'toChange': "STRING",'valueToMatch': "ID"},hashContexts:{'value': depth0,'toChange': depth0,'valueToMatch': depth0},inverse:self.noop,fn:self.program(46, program46, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        <!------------------------------- alert ------------------------------------->\r\n\r\n    <div class=\"form-group\" style=\"margin-top: 20px\" >\r\n    ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("new_record.alertNum"),
      'toChange': ("changeState_alertNum")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(48, program48, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n\r\n            <!------------------------------- grace ------------------------------------->\r\n    ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("new_record.graceNum"),
      'toChange': ("changeState_graceNum")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(50, program50, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    <!------------------------------- files list ------------------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "new_record.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(52, program52, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        <div class=\"page-header\"></div>\r\n        <div class=\"form-group\">\r\n            <label  class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.loadModel", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-10\">\r\n                ");
    stack1 = helpers.view.call(depth0, "upload-file", {hash:{
      'record_model': ("doc-template")
    },hashTypes:{'record_model': "STRING"},hashContexts:{'record_model': depth0},inverse:self.noop,fn:self.program(55, program55, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>\r\n\r\n\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/admin/partials/-progress-bar', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-5\">\r\n                    <h5>\r\n                        <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "create_record", "", "view_new_field", true, "company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","STRING"],data:data})));
    data.buffer.push(">\r\n                            <span class=\"glyphicon glyphicon-plus btn-font-color\" style=\"cursor: pointer\"></span>\r\n                        </a>\r\n                        &nbsp;\r\n                        ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </h5>\r\n                    <div class=\"progress\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isCompanyRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressCompanyRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <h5 style=\"margin-top: 45px\">");
    stack1 = helpers._triageMustache.call(depth0, "companyRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                </div>\r\n                <div class=\"col-lg-5\">\r\n                    <h5>\r\n                        ");
    stack1 = helpers.unless.call(depth0, "view_new_field", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </h5>\r\n                    <div class=\"progress\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isDriverRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressDriverRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <h5 style=\"margin-top: 45px\">");
    stack1 = helpers._triageMustache.call(depth0, "driverRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-5\">\r\n                    <h5>\r\n                        ");
    stack1 = helpers.unless.call(depth0, "view_new_field", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </h5>\r\n                    <div class=\"progress\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isTruckRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressTruckRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <h5 style=\"margin-top: 45px\">");
    stack1 = helpers._triageMustache.call(depth0, "truckRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                </div>\r\n                <div class=\"col-lg-5\">\r\n                    <h5>\r\n                        ");
    stack1 = helpers.unless.call(depth0, "view_new_field", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </h5>\r\n                    <div class=\"progress\">\r\n                        <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isTrailerRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressTrailerRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>      <!-- progress-bar-danger  -->\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    <h5 style=\"margin-top: 45px\">");
    stack1 = helpers._triageMustache.call(depth0, "trailerRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "create_record", "", "view_new_field", true, "driver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","STRING"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-plus btn-font-color\" style=\"cursor: pointer\"></span>\r\n                            </a>\r\n                            &nbsp;\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.driver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "view_new_field", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-ok btn-font-color\" style=\"cursor: pointer\"></span>\r\n                            </a>\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.driver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "create_record", "", "view_new_field", true, "truck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","STRING"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-plus btn-font-color\" style=\"cursor: pointer\"></span>\r\n                            </a>\r\n                            &nbsp;\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.truck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "view_new_field", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-ok btn-font-color\" style=\"cursor: pointer\"></span>\r\n                            </a>\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.truck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "create_record", "", "view_new_field", true, "trailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","STRING"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-plus btn-font-color\" style=\"cursor: pointer\"></span>\r\n                            </a>\r\n                            &nbsp;\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "new_record", "view_new_field", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-ok btn-font-color\" style=\"cursor: pointer\"></span>\r\n                            </a>\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-11\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.truck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.trailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(23, program23, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(25, program25, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.truck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.trailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program15(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <div class=\"progress\" style=\"margin-top: 10px\">\r\n                            <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isCompanyRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressCompanyRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <div class=\"progress\" style=\"margin-top: 10px\">\r\n                            <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isDriverRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressDriverRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

  function program19(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <div class=\"progress\" style=\"margin-top: 10px\">\r\n                            <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isTruckRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressTruckRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

  function program21(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <div class=\"progress\" style=\"margin-top: 10px\">\r\n                            <div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("isTrailerRatingOut")
    },hashTypes:{'class': "ID"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'style': ("progressTrailerRating")
    },hashTypes:{'style': "ID"},hashContexts:{'style': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

  function program23(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <h5>");
    stack1 = helpers._triageMustache.call(depth0, "companyRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                    ");
    return buffer;
    }

  function program25(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <h5>");
    stack1 = helpers._triageMustache.call(depth0, "driverRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                    ");
    return buffer;
    }

  function program27(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <h5>");
    stack1 = helpers._triageMustache.call(depth0, "truckRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                    ");
    return buffer;
    }

  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <h5>");
    stack1 = helpers._triageMustache.call(depth0, "trailerRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</h5>\r\n                    ");
    return buffer;
    }

  function program31(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n\r\n    <div class=\"panel panel-default\" style=\"margin-top: 20px\">\r\n        <div class=\"panel-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-1\">\r\n                    <!-------------------- pencil ---------------------->\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.view_totWeight", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(34, program34, data),fn:self.program(32, program32, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.totalWeight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "totalWeight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" %</legend></div>\r\n            </div>\r\n            <div class=\"row\">\r\n                ");
    stack1 = helpers.each.call(depth0, "weight", "in", "configurations", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(36, program36, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
    return buffer;
    }
  function program32(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_mode", "view_totWeight", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n\r\n                        <!-------------------- ok ---------------------->\r\n                    ");
    return buffer;
    }

  function program34(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "configurations", "view_totWeight", true, "totalWeight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                    ");
    return buffer;
    }

  function program36(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                    <div class=\"col-lg-3\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"control-label\" for=\"focusedInput\">");
    stack1 = helpers._triageMustache.call(depth0, "weight.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" &nbsp; ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.weight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                            <div class=\"input-group\">\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("weight.valueNum"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': ("controller.view_totWeight")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                <span class=\"input-group-addon\">%</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ");
    return buffer;
    }

    data.buffer.push("<div class=\"panel panel-default\" style=\"margin-top: 20px\">\r\n    <div class=\"panel-body\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.general", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n\r\n");
    stack1 = helpers['if'].call(depth0, "controller.tabList.general", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(31, program31, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    return buffer;
    
  });

});
define('p-doc/templates/admin/tabs/-tab-docs-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_mode", "mode_view", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil btn-font-color\" style=\"cursor: pointer\"></span></a>\r\n                        &nbsp;\r\n                        ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.documents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_docTemplates", "docTemplates", "mode_view", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok btn-font-color\" style=\"cursor: pointer\"></span></a>\r\n                        &nbsp;\r\n                        ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.documents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "docTemp.isCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/partials/-docs-list", options) : helperMissing.call(depth0, "partial", "admin/partials/-docs-list", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "docTemp.isDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/partials/-docs-list", options) : helperMissing.call(depth0, "partial", "admin/partials/-docs-list", options))));
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.truck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "docTemp.isTruck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program15(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/partials/-docs-list", options) : helperMissing.call(depth0, "partial", "admin/partials/-docs-list", options))));
    data.buffer.push("\r\n                            ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.trailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                ");
    stack1 = helpers['if'].call(depth0, "docTemp.isTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "admin/partials/-docs-list", options) : helperMissing.call(depth0, "partial", "admin/partials/-docs-list", options))));
    data.buffer.push("\r\n                                ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\" style=\"margin-top: 45px\">\r\n    <div class=\"col-lg-12\">\r\n        <table class=\"table table-condensed\">\r\n            <thead>\r\n            <!------------------------ TAB HEADER --------------------------->\r\n            <tr>\r\n                <th style=\"width: 32%\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "mode_view", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </th>\r\n                <th style=\"width: 17%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width: 17%\"></th>\r\n                <th style=\"width: 17%\"></th>\r\n                <th style=\"width: 17%\"></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            ");
    stack1 = helpers.each.call(depth0, "docTemp", "in", "docTemplates", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/application', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\n        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "navbar", options) : helperMissing.call(depth0, "partial", "navbar", options))));
    data.buffer.push("\n    ");
    return buffer;
    }

    data.buffer.push("<div >\n    ");
    stack1 = helpers.unless.call(depth0, "controller.is_login", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n\n    ");
    stack1 = helpers._triageMustache.call(depth0, "outlet", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n\n    <div class=\"container\">\n        <div class=\"row\" style=\"margin-top: 40px\">\n            <div class=\"col-lg-12\">\n                ");
    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "search-result", options) : helperMissing.call(depth0, "outlet", "search-result", options))));
    data.buffer.push("\n            </div>\n        </div>\n    </div>\n\n    ");
    data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "overview", options) : helperMissing.call(depth0, "outlet", "overview", options))));
    data.buffer.push("\n</div>\n\n");
    return buffer;
    
  });

});
define('p-doc/templates/cal', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


    data.buffer.push(escapeExpression((helper = helpers['ember-calendar'] || (depth0 && depth0['ember-calendar']),options={hash:{
      'eventsMode': ("eventsMode"),
      'gridMode': ("month"),
      'allEvents': ("eventList")
    },hashTypes:{'eventsMode': "ID",'gridMode': "STRING",'allEvents': "ID"},hashContexts:{'eventsMode': depth0,'gridMode': depth0,'allEvents': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "ember-calendar", options))));
    
  });

});
define('p-doc/templates/components/auto-complete', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                <span class=\"glyphicon glyphbutton glyphicon-remove\" class=\"as-close\" ></span>\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers['display-result'] || (depth0 && depth0['display-result']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data},helper ? helper.call(depth0, "controller.searchPath", "destination", "size", options) : helperMissing.call(depth0, "display-result", "controller.searchPath", "destination", "size", options))));
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program3(depth0,data) {
    
    
    data.buffer.push("\r\n                <span class=\"glyphicon glyphbutton glyphicon-search\"></span>\r\n            ");
    }

  function program5(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                <li ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "addSelection", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': (":result active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <span class='result-name'>\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers['display-helper'] || (depth0 && depth0['display-helper']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data},helper ? helper.call(depth0, "controller.searchPath", options) : helperMissing.call(depth0, "display-helper", "controller.searchPath", options))));
    data.buffer.push("\r\n                    </span>\r\n                </li>\r\n            ");
    return buffer;
    }

  function program7(depth0,data) {
    
    
    data.buffer.push("\r\n                <li class='no-results'>No Results.</li>\r\n            ");
    }

    data.buffer.push("<div class=\"input-group autocomplete-input-group\">\r\n    <span class=\"input-group-btn\">\r\n        <button class=\"btn btn-primary\" type=\"button\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "buttonManager", "destination", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","ID"],data:data})));
    data.buffer.push(">\r\n            ");
    stack1 = helpers['if'].call(depth0, "destination", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </button>\r\n    </span>\r\n    ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "view.autocomplete", {hash:{
      'value': ("query"),
      'class': ("autocomplete form-control")
    },hashTypes:{'value': "ID",'class': "STRING"},hashContexts:{'value': depth0,'class': depth0},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("\r\n</div>\r\n<div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': (":results hasQuery::hdn")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" >\r\n    <ul class='suggestions-autocomplete'>\r\n        <div class='content' data-spy='scroll'>\r\n            ");
    stack1 = helpers.each.call(depth0, "displayResults", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n    </ul>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/components/auto-suggest', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\n                    <span style=\"display:block; float:left; margin:5px 0 0 2px;\">\n                      <span class=\"label label-default\" style=\"font-size: 12px;\">\n                    <span>\n                        ");
    stack1 = helpers._triageMustache.call(depth0, "yield", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n                        ");
    data.buffer.push(escapeExpression((helper = helpers['show-selections-helper'] || (depth0 && depth0['show-selections-helper']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["ID","ID"],data:data},helper ? helper.call(depth0, "controller.usecase", "controller.searchPath", options) : helperMissing.call(depth0, "show-selections-helper", "controller.usecase", "controller.searchPath", options))));
    data.buffer.push("\n                    </span>\n                    <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "removeSelection", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(">\n                        <i class=\"remove glyphicon glyphicon-remove\" style=\"color: lightgray; cursor: pointer\"></i>\n                    </a>\n                    </span>\n                        &nbsp\n                    </span>\n\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\n            <li ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "addSelection", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': (":result active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\n                <span class=\"result-name\">\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "yield", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['display-helper'] || (depth0 && depth0['display-helper']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data},helper ? helper.call(depth0, "controller.searchPath", options) : helperMissing.call(depth0, "display-helper", "controller.searchPath", options))));
    data.buffer.push("\n                </span>\n            </li>\n        ");
    return buffer;
    }

  function program5(depth0,data) {
    
    
    data.buffer.push("\n            <li class='no-results'>No Results.</li>\n        ");
    }

    data.buffer.push("<div class=\"panel panel-default\">\n    <div class=\"panel-body\">\n        <div class=\"row\">\n            <div class=\"col-lg-5\">\n                ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "view.autosuggest", {hash:{
      'value': ("query"),
      'moveSelection': ("moveSelection"),
      'selectActive': ("selectActive"),
      'hideResults': ("hideResults"),
      'class': ("autosuggest form-control")
    },hashTypes:{'value': "ID",'moveSelection': "STRING",'selectActive': "STRING",'hideResults': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'moveSelection': depth0,'selectActive': depth0,'hideResults': depth0,'class': depth0},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("\n            </div>\n            <div class=\"col-lg-7\">\n                ");
    stack1 = helpers.each.call(depth0, "destination", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n            </div>\n        </div>\n    </div>\n</div>\n<div ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': (":results hasQuery::hdn")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\n    <ul class='suggestions'>\n        ");
    stack1 = helpers.each.call(depth0, "displayResults", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n    </ul>\n</div>\n");
    return buffer;
    
  });

});
define('p-doc/templates/components/custom-modal', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1;


    data.buffer.push("<div class=\"modal fade\">\n    <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                <h4 class=\"modal-title\">");
    stack1 = helpers._triageMustache.call(depth0, "title", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\n            </div>\n            <div class=\"modal-body\">\n                ");
    stack1 = helpers._triageMustache.call(depth0, "yield", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                <!--<button type=\"button\" class=\"btn btn-primary\" >OK</button>-->\n            </div>\n        </div>\n    </div>\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/components/select-2', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1;


    stack1 = helpers._triageMustache.call(depth0, "yield", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/components/speed-meter', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', escapeExpression=this.escapeExpression;


    data.buffer.push("\r\n<canvas ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'id': ("target")
    },hashTypes:{'id': "ID"},hashContexts:{'id': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'height': ("custom_height")
    },hashTypes:{'height': "ID"},hashContexts:{'height': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'width': ("control_width")
    },hashTypes:{'width': "ID"},hashContexts:{'width': depth0},contexts:[],types:[],data:data})));
    data.buffer.push("></canvas>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/dashboard/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"panel panel-default\">\r\n            <div class=\"panel-body\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "post.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-1\"></div>\r\n                    <div class=\"col-lg-2\">\r\n                        <div class=\"fileinput fileinput-new\" data-provides=\"fileinput\">\r\n                            <div class=\"fileinput-new thumbnail\" style=\"width: 95px; height: 95px;\">\r\n                                ");
    stack1 = helpers.each.call(depth0, "file", "in", "post.company.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-3\">\r\n                        <div class=\"panel panel-default\">\r\n                            <div class=\"panel-body\">\r\n                                <h5>");
    stack1 = helpers._triageMustache.call(depth0, "post.company.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </h5>\r\n                                <h6 style=\"color: #d3d3d3\">");
    stack1 = helpers._triageMustache.call(depth0, "post.timeFrom", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h6> <!--class=\"pull-right\" -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-5\">\r\n                        <div class=\"panel panel-default\" style=\"min-height: 95px\">\r\n                            <div class=\"panel-body\">\r\n                                <h5>");
    stack1 = helpers._triageMustache.call(depth0, "post.title", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5>\r\n                                <h6>");
    stack1 = helpers._triageMustache.call(depth0, "post.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-1\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "delete_record", "post", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(">×</button>\r\n                ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "file.isLogo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                        <img src=\"api/files/");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("?token=");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "app_controller.token_pdoc", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("&stream=true\" style=\"opacity: 1;\">\r\n                                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <!-------------------- HEADER ---------------------->\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-2\">\r\n                </div>\r\n                <!-------------------- nome company ---------------------->\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.publicToYourContactsNetwork", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                    <button type=\"button\" class=\"btn btn-default pull-right btn-90\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "submit", "app_controller.company_record", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(">\r\n                        <strong class=\"btn-font-color\" style=\"font-size: 21\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.submit", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <div class=\"row\" style=\"margin-top: 15px\">\r\n                <div class=col-lg-1></div>\r\n                <div class=col-lg-2>\r\n                    <h4>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.title", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\r\n                </div>\r\n                <div class=col-lg-8>\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'type': ("text"),
      'value': ("controller.postTitle"),
      'class': ("form-control"),
      'placeholder': ("insert title")
    },hashTypes:{'type': "STRING",'value': "ID",'class': "STRING",'placeholder': "STRING"},hashContexts:{'type': depth0,'value': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=col-lg-1></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-top: 15px\">\r\n                <div class=col-lg-1></div>\r\n                <div class=col-lg-2>\r\n                    <h4>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.text", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h4>\r\n                </div>\r\n                <div class=col-lg-8>\r\n                   ");
    data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{
      'class': ("form-control"),
      'value': ("controller.postDescription"),
      'rows': ("4"),
      'id': ("textArea")
    },hashTypes:{'class': "STRING",'value': "ID",'rows': "STRING",'id': "STRING"},hashContexts:{'class': depth0,'value': depth0,'rows': depth0,'id': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "textarea", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=col-lg-1></div>\r\n            </div>\r\n            <!--<div class=\"row\" style=\"margin-top: 15px\">-->\r\n                <!--<div class=col-lg-1></div>-->\r\n                <!--<div class=col-lg-2>-->\r\n                    <!--<h4></h4>-->\r\n                <!--</div>-->\r\n                <!--<div class=col-lg-8>-->\r\n                    <!--<div class=\"input-group input-group\">-->\r\n                        <!--<input type=\"text\" class=\"form-control\" placeholder=\"Search...\">-->\r\n                        <!--<span class=\"input-group-btn\"><button class=\"btn btn-default\" type=\"button\"></button></span>-->\r\n                    <!--</div>-->\r\n                <!--</div>-->\r\n                <!--<div class=col-lg-1></div>-->\r\n            <!--</div>-->\r\n        </div>\r\n    </div>\r\n    ");
    stack1 = helpers.each.call(depth0, "post", "in", "app_controller.records_posts", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n</div>\r\n\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/link/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                            <button type=\"button\" class=\"btn btn-default pull-right btn-90\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_mode", "view_new_link", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-plus btn-font-color\"></span>\r\n                            </button>\r\n                        ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                            <button type=\"button\" class=\"btn btn-default pull-right btn-90\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_mode", "view_new_link", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                                <span class=\"glyphicon glyphicon-minus btn-font-color\"></span>\r\n                            </button>\r\n                        ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                <div class=\"well\">\r\n                    <h4 class=\"page-header\">New Connection</h4>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-1\"></div>\r\n                        <div class=\"col-lg-8\">\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers['select-2'] || (depth0 && depth0['select-2']),options={hash:{
      'content': ("app_controller.records_company"),
      'value': ("controller.company_to_link"),
      'optionLabelPath': ("name"),
      'placeholder': ("Choose a company to connect"),
      'typeaheadNoMatchesText': ("No company found for '%@'"),
      'typeaheadErrorText': ("Loading failed: %@"),
      'enabled': (true),
      'allowClear': (true)
    },hashTypes:{'content': "ID",'value': "ID",'optionLabelPath': "STRING",'placeholder': "STRING",'typeaheadNoMatchesText': "STRING",'typeaheadErrorText': "STRING",'enabled': "BOOLEAN",'allowClear': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'optionLabelPath': depth0,'placeholder': depth0,'typeaheadNoMatchesText': depth0,'typeaheadErrorText': depth0,'enabled': depth0,'allowClear': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "select-2", options))));
    data.buffer.push("\r\n                        </div>\r\n                        <div class=\"col-lg-2\">\r\n                            <button type=\"button\" class=\"btn btn-primary btn-group-justified\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_linkCompanies", "controller.company_to_link", "view_new_link", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                               connection\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-lg-1\"></div>\r\n                    </div>\r\n\r\n                </div>\r\n            ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <tr>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "link", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">\r\n                                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "link.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "link", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "link.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "link", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "link.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "link", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "link.country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_unbindLinkedCompanies", "link.id", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                            </tr>\r\n                        ");
    return buffer;
    }
  function program8(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "file.isLogo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program9(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                            <img width=\"30px\" src=\"api/files/");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("?token=");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "app_controller.token_pdoc", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("&stream=true\">\r\n                                        ");
    return buffer;
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-2\"></div>\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.links", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                    <div style=\"margin-top: 2px\">\r\n                        ");
    stack1 = helpers.unless.call(depth0, "view_new_link", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "view_new_link", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            <div class=\"row\" style=\"margin-top: 45px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    <table class=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.logo", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        ");
    stack1 = helpers.each.call(depth0, "link", "in", "links", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/login/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "login/partials/-new", options) : helperMissing.call(depth0, "partial", "login/partials/-new", options))));
    data.buffer.push("\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "login/partials/-submit", options) : helperMissing.call(depth0, "partial", "login/partials/-submit", options))));
    data.buffer.push("\n                ");
    return buffer;
    }

    data.buffer.push("<section id=\"hero\" class=\"hero-fixed hero-fade hero-medium\">\n    <div class=\"container\">\n        <div class=\"row\" style=\"margin-top: 40px\">\n            <div class=\"col-lg-12\">\n                ");
    stack1 = helpers['if'].call(depth0, "controller.newLog", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\n            </div>\n        </div>\n    </div>\n</section>\n\n<div class=\"footer navbar-fixed-bottom\" style=\"background-color: #f5f5f5; padding: 18px 0 0;height: 60px;\">\n    <div class=\"container\">\n        <a style=\"cursor: pointer\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "login/modals/about", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push("> ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.about", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </a> &nbsp;\n        <a style=\"cursor: pointer\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "login/modals/terms", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push("> ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.terms", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a> &nbsp;\n        <a style=\"cursor: pointer\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "login/modals/privacy", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.privacy", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </a> &nbsp;\n    </div>\n</div>\n\n");
    return buffer;
    
  });

});
define('p-doc/templates/login/modals/about', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var stack1, helper, options, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    
    data.buffer.push("\r\n    This is the content of modal about\r\n");
    }

    stack1 = (helper = helpers['custom-modal'] || (depth0 && depth0['custom-modal']),options={hash:{
      'title': ("About")
    },hashTypes:{'title': "STRING"},hashContexts:{'title': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "custom-modal", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    else { data.buffer.push(''); }
    
  });

});
define('p-doc/templates/login/modals/privacy', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    
    data.buffer.push("\r\n    <h3>General Information</h3>\r\n    <p>\r\n        We collect the e-mail addresses of those who communicate with us via e-mail, aggregate information on what pages consumers access or visit, and information volunteered by\r\n        the consumer (such as survey information and/or site registrations). The information we collect is used to improve the content of our Web pages and the quality of our\r\n        service, and is not shared with or sold to other organizations for commercial purposes, except to provide products or services you have requested, when we have your permission,\r\n        or under the following circumstances:\r\n    </p>\r\n    <p>    - It is necessary to share information in order to investigate, prevent, or take action regarding illegal activities, suspected fraud, situations involving potential threats to the physical safety of any person, violations of Terms of Service, or as otherwise required by law.\r\n    <p>    - We transfer information about you if Zeno Intelligence is acquired by or merged with another company. In this event, Zeno Intelligence will notify you before information about you is transferred and becomes subject to a different privacy policy.\r\n\r\n    <h3>Information Gathering and Usage</h3>\r\n    <p>\r\n        When you register for Zeno Intelligence we ask for information such as your name, email address, we do not store credit card information that are handled by our payment gateways.\r\n        Zeno Intelligence uses collected information for the following general purposes: products and services\r\n        provision, billing, identification and authentication, services improvement, contact, and research.\r\n    </p>\r\n\r\n    <h3>Cookies</h3>\r\n    <p>\r\n        A cookie is a small amount of data, which often includes an anonymous unique identifier, that is sent to your browser from a web site's computers and stored on your computer's\r\n        hard drive. Cookies are required to use the Zeno Intelligence service. </p>\r\n    <p>  We use cookies to record current session information, but do not use permanent cookies. You are required to re-login to your Zeno Intelligence account after a certain\r\n        period of time has elapsed to protect you against others accidentally accessing your account contents.      </p>\r\n\r\n    <h3>Data Storage</h3>\r\n    <p>\r\n        Zeno Intelligence uses third party vendors and hosting partners to provide the necessary hardware, software, networking, storage, and related technology required to run Zeno Intelligence.\r\n        Although Zeno Intelligence owns the code, databases, and all rights to the Zeno Intelligence application, you retain all rights to your data.\r\n    </p>\r\n\r\n    <h3>Disclosure</h3>\r\n    <p>\r\n        Zeno Intelligence may disclose personally identifiable information under special circumstances, such as to comply with subpoenas or when your actions violate the Terms of Service.\r\n    </p>\r\n\r\n    <h3>Safe Harbor</h3>\r\n    <p>\r\n        If you choose to provide Zeno Intelligence with your information, you consent to the transfer and storage of that information on our servers located in Ireland.\r\n    </p>\r\n    <p>\r\n        Zeno Intelligence may periodically update this policy. We will notify you about significant changes in the way we treat personal information by sending a notice to the primary email address specified in your Zeno Intelligence primary account holder account or by placing a prominent notice on our site.\r\n        Questions\r\n    </p>\r\n    <p>\r\n        Any questions about this Privacy Policy should be addressed to info@zenointelligence.com.\r\n\r\n    </p>\r\n");
    }

    stack1 = (helper = helpers['custom-modal'] || (depth0 && depth0['custom-modal']),options={hash:{
      'title': ("controller.translation.privacy")
    },hashTypes:{'title': "ID"},hashContexts:{'title': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "custom-modal", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/login/modals/terms', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    
    data.buffer.push("\r\n    <h3>General Terms and Conditions</h3>\r\n    <p>\r\n        The seaforward.com website, including all linked pages is owned solely by Zeno Intelligence srl. The seaforward.com site provides users with access\r\n        to information and materials which is available to only the user of the website and provided as a convenience. Unless otherwise agreed in writing with\r\n        Zeno Intelligence srl your agreement to use the website will always include, at a minimum, the terms and conditions set out in this document.\r\n    </p>\r\n\r\n    <h3>Changes to the Terms and Conditions</h3>\r\n    <p>\r\n        Zeno Intelligence srl reserves the exclusive right to introduce different content, features, links or functionality to users of the website,\r\n        without notice, as well to add or change any of that content. Zeno Intelligence srl may change these Terms and Conditions at anytime without prior notice or warning,\r\n        as a user if you do not agree with any of the Terms and Conditions you should cease use of the seaforward.com website. By using this website you are bound by those\r\n        changes or supplements whether or not you have actually read or are aware of those changes or supplements.\r\n    </p>\r\n\r\n    <h3>Copyright Information</h3>\r\n    <p>\r\n        All content included on the seaforward.com website, such as text, documents, logos, graphics, audio visual images, buttons, banners, icons, news, articles, and software,\r\n        is the property of Zeno Intelligence srl (or its content suppliers), and is protected by United States and international copyright laws.\r\n    </p>\r\n\r\n    <h3>Termination of the Use of the Website</h3>\r\n    <p>\r\n        Zeno Intelligence srl reserves the right, at any time or without prior notice, to terminate the use and operation of the seaforward.com website. Zeno Intelligence srl\r\n        also reserves the right to immediately suspend or terminate the user’s ability to access the seaforward.com website upon breach of the Terms and Conditions of the website.\r\n    </p>\r\n\r\n    <h3>Prohibited Acts</h3>\r\n    <p>\r\n        As a user of the seaforward.com website, you agree to not knowingly; (i) post to the seaforward.com website any unlawful, fraudulent, harassing or obscene information or content\r\n        of any kind; (ii) use any device or technology to provide repeated automated attempts to access password-protected portions of the website; (iii) send to the website or post any\r\n        information that contains a bug or virus; (iv) interfere with the proper working of the website through any device or software; (v) use the content on the website to publish,\r\n        distribute, copy, reverse engineer or derivative works; (vi) take any action which imposes an unreasonable or disproportionately large load on Zeno Intelligence srl infrastructure.\r\n    </p>\r\n\r\n    <h3>Disclaimer of Warranties</h3>\r\n    <p>\r\n        The Internet and computer software (particularly software utilized in conjunction with the Internet) is inherently complex, may not be completely free of errors and cannot\r\n        be absolutely secure and completely resistant to penetration by unauthorized persons, Zeno Intelligence srl cannot guarantee the complete security and continued integrity\r\n        of any information provided to us through our website. Therefore, it is your responsibility to verify your work and information and to make backup copies of all information,\r\n        and Zeno Intelligence srl will not be responsible for your failure to do so.\r\n    </p>\r\n    <p>\r\n        YOU EXPRESSLY ACKNOWLEDGE AND AGREE THAT USE OF OUR SERVICES AND THE INTERNET IS AT YOUR OWN RISK AND THAT THE SERVICES ARE PROVIDED AS IS AND ZENO INTELLIGENCE SRL WILL USE\r\n        COMMERCIALLY REASONABLE EFFORTS TO MAKE ACCESS TO THE SERVICES AND TO ITS WEB SITE AVAILABLE TO YOU THROUGH THE REQUIRED ACCESS PROTOCOLS AND TO PROTECT THE SECURITY AND\r\n        CONFIDENTIALITY OF ANY INFORMATION YOU TRANSMIT THROUGH OUR WEBSITE OR UTILIZING OUR SERVICES, BUT ZENO INTELLIGENCE SRL MAKES NO WARRANTY OR GUARANTEE THAT YOU WILL BE ABLE\r\n        TO ACCESS THE SERVICES OR OUR WEB SITE AT ANY PARTICULAR TIME OR FROM ANY PARTICULAR LOCATION OR THAT ANY INFORMATION YOU TRANSMIT THROUGH OUR WEBSITE OR UTILIZING OUR SERVICES\r\n        WILL BE COMPLETELY SECURE AND FREE FROM UNAUTHORIZED ACCESS.\r\n    </p>\r\n\r\n    <h3>Limitation of Liability</h3>\r\n    <p>\r\n        In no event will Zeno Intelligence srl or any of its employees or Directors be liable for any losses or damages, whether in contract or otherwise, arising out of your use or\r\n        inability to use or reliance upon the seaforward.com website.\r\n    </p>\r\n");
    }

    stack1 = (helper = helpers['custom-modal'] || (depth0 && depth0['custom-modal']),options={hash:{
      'title': ("controller.translation.terms")
    },hashTypes:{'title': "ID"},hashContexts:{'title': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "custom-modal", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/login/partials/-new', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("name"),
      'value': ("controller.name"),
      'type': ("text"),
      'placeholder': ("controller.translation.name"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'value': "ID",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'value': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                \r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("username"),
      'value': ("controller.username"),
      'type': ("text"),
      'placeholder': ("controller.translation.userName"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'value': "ID",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'value': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\">\r\n    <div class=\"col-lg-6\">\r\n        <div class= \"well well-lg\" style=\"background-color: rgba(38,85,63, 0.9); border: 0px; height: 550px\">\r\n            <div class=\"row\" style=\"text-align: center\">\r\n                <h2 style=\"color: #ffffff\"><strong>");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.newCompany", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong></h2>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-top: 30px; margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    stack1 = helpers.view.call(depth0, "verify-field", {hash:{
      'model_val': ("company"),
      'val': ("controller.name")
    },hashTypes:{'model_val': "STRING",'val': "ID"},hashContexts:{'model_val': depth0,'val': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("vatNumber"),
      'valueBinding': ("vatNumber"),
      'type': ("text"),
      'placeholder': ("controller.translation.vatNumber"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("street"),
      'valueBinding': ("street"),
      'type': ("text"),
      'placeholder': ("controller.translation.street"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("city"),
      'valueBinding': ("city"),
      'type': ("text"),
      'placeholder': ("controller.translation.city"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("zipCode"),
      'valueBinding': ("zipCode"),
      'type': ("text"),
      'placeholder': ("controller.translation.zipCode"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("app_controller.nations"),
      'optionLabelPath': ("content.country"),
      'valueBinding': ("country"),
      'prompt': ("controller.translation.selectACompany"),
      'value': ("country"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'optionLabelPath': "STRING",'valueBinding': "STRING",'prompt': "ID",'value': "ID",'class': "STRING"},hashContexts:{'content': depth0,'optionLabelPath': depth0,'valueBinding': depth0,'prompt': depth0,'value': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("email"),
      'valueBinding': ("companyEmail"),
      'type': ("text"),
      'placeholder': ("controller.translation.email"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 30px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'id': ("companyType"),
      'valueBinding': ("companyType"),
      'prompt': ("controller.translation.selectACompanyType"),
      'content': ("companyTypeList"),
      'value': ("companyType"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'prompt': "ID",'content': "ID",'value': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'prompt': depth0,'content': depth0,'value': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-6\">\r\n        <div class= \"well well-lg\" style=\"background-color: rgba(38,85,63, 0.9); border: 0px; height: 550px; margin-bottom: 25px\">\r\n        <!--<div class= \"well well-lg\" style=\"background-color: rgba(245, 245, 245, 0.4); border: 0; height: 520px\">-->\r\n            <div class=\"row\" style=\"text-align: center\">\r\n                <h2  style=\"color: #ffffff\"><strong>");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.newUser", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong></h2>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-top: 30px; margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("firstName"),
      'valueBinding': ("firstName"),
      'type': ("text"),
      'placeholder': ("controller.translation.firstName"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("lastName"),
      'valueBinding': ("lastName"),
      'type': ("text"),
      'placeholder': ("controller.translation.lastName"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    stack1 = helpers.view.call(depth0, "verify-field", {hash:{
      'model_val': ("user"),
      'val': ("controller.username")
    },hashTypes:{'model_val': "STRING",'val': "ID"},hashContexts:{'model_val': depth0,'val': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 10px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("pwd"),
      'valueBinding': ("pwd"),
      'type': ("password"),
      'placeholder': ("controller.translation.password"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 30px\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("userEmail"),
      'valueBinding': ("userEmail"),
      'type': ("text"),
      'placeholder': ("controller.translation.email"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "ID",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class= \"well well-lg pattern-white\" >\r\n<!--<div class= \"well well-lg\" style=\"background-color:rgba(245, 245, 245, 0.4); border: 0\">-->\r\n    <div class=\"row\" style=\"margin-left: 30px; margin-right: 30px\">\r\n        <div class=\"col-lg-6\">\r\n            <button class=\"btn btn-default btn-160 pull-left\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_newLog", 0, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","INTEGER"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.backToLogin", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</button>\r\n        </div>\r\n        <div class=\"col-lg-6\">\r\n            <button class=\"btn btn-default btn-160 pull-right\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "new_signUp", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.signUp", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</button>\r\n        </div>\r\n    </div>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/login/partials/-submit', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    
    data.buffer.push("\r\n            ");
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "loggedIn", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program4(depth0,data) {
    
    
    data.buffer.push("\r\n                    <p>You are already logged in!</p>\r\n                ");
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                    <div class=\"row pull-right\">\r\n                        <li class=\"dropdown\">\r\n                            <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" style=\"color: #ffffff\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.language", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(": ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translationType", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("<b class=\"caret\"></b></a>\r\n                            <ul class=\"dropdown-menu\" >\r\n                                <li><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "changeLanguage", "english", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.english", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a></li>\r\n                                <li><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "changeLanguage", "italian", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.italian", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a></li>\r\n                            </ul>\r\n                        </li>\r\n                    </div>\r\n                    <div class=\"row\" style=\"text-align: center\">\r\n                        <h2 style=\"color: white\"><strong>Padroncino Doc</strong></h2>\r\n                    </div>\r\n                    <div class=\"row\" style=\"margin-top: 30px; margin-bottom: 30px\">\r\n                        <div class=\"col-lg-3\"></div>\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("username"),
      'valueBinding': ("username"),
      'type': ("text"),
      'placeholder': ("Username"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "STRING",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("password"),
      'valueBinding': ("password"),
      'type': ("password"),
      'placeholder': ("Password"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'valueBinding': "STRING",'type': "STRING",'placeholder': "STRING",'class': "STRING"},hashContexts:{'id': depth0,'valueBinding': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3\"></div>\r\n                    </div>\r\n                    <div class=\"row\" style=\"margin-bottom: 30px\">\r\n                        <div class=\"col-lg-3\"></div>\r\n                        <div class=\"col-lg-6\">\r\n                            <button type=\"button\" class=\"btn btn-default btn-160 pull-left\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_newLog", 1, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","INTEGER"],data:data})));
    data.buffer.push(">\r\n                                ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.signUp", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default btn-160 pull-right\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "login", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.login", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</button>\r\n                        </div>\r\n                        <div class=\"col-lg-3\"></div>\r\n                    </div>\r\n                ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n    <div class=\"col-lg-8\">\r\n        <div class= \"well well-lg\" style=\"background-color: rgba(38,85,63, 0.7); border: 0px\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "appController.authToken", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n    </div>\r\n    <div class=\"col-lg-2\"></div>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/modal-layout', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1;


    data.buffer.push("<div class=\"modal-backdrop fade in\">&nbsp;</div>\r\n\r\n<div class=\"modal fade show\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "yield", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/navbar', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.yourCompany", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.searchCompanies", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                    <li>");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "link/main", "company_id", options) : helperMissing.call(depth0, "link-to", "link/main", "company_id", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</li>\r\n                ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.links", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                        ");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "notification/main", "company_id", options) : helperMissing.call(depth0, "link-to", "notification/main", "company_id", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.notifications", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            <span class=\"badge\" style=\"max-height: 40px\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.company_record.firedNotifications", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</span>\r\n                        ");
    return buffer;
    }

  function program11(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                        ");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "notification/main", "company_id", options) : helperMissing.call(depth0, "link-to", "notification/main", "company_id", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.notifications", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                    <li>");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "admin/main", "company_id", options) : helperMissing.call(depth0, "link-to", "admin/main", "company_id", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</li>\r\n                ");
    return buffer;
    }
  function program15(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.admin", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                    <li>");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "account/main", "company_id", options) : helperMissing.call(depth0, "link-to", "account/main", "company_id", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</li>\r\n                ");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.account", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

    data.buffer.push("<div class=\"navbar navbar-default navbar-fixed-top\">\r\n    <div class=\"container\">\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "link_to", "dashboard/main", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">Dashboard</a>\r\n            <button class=\"navbar-toggle\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-main\">\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n        </div>\r\n        <div class=\"navbar-collapse collapse\" id=\"navbar-main\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <li>");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:["STRING","ID"],data:data},helper ? helper.call(depth0, "your-profile/main", "company_id", options) : helperMissing.call(depth0, "link-to", "your-profile/main", "company_id", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </li>\r\n                <li>");
    stack1 = (helper = helpers['link-to'] || (depth0 && depth0['link-to']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "search-company/main", options) : helperMissing.call(depth0, "link-to", "search-company/main", options));
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</li>\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.user_type_admin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                <li>\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.company_record.firedNotifications", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </li>\r\n\r\n                ");
    stack1 = helpers['if'].call(depth0, "is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.user_type_admin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </ul>\r\n\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n\r\n                <li class=\"dropdown\">\r\n                    <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" id=\"themes\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.language", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(": ");
    stack1 = helpers._triageMustache.call(depth0, "controller.translationType", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" <span class=\"caret\"></span></a>\r\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"themes\">\r\n                        <li><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "changeLanguage", "english", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.english", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a></li>\r\n                        <li><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "changeLanguage", "italian", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "controller.translation.italian", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a></li>\r\n                    </ul>\r\n                </li>\r\n\r\n\r\n                <li class=\"active\"><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "logout", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push(">Logout</a></li>\r\n            </ul>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/notification/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.linksRequest:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\"");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "linksRequest", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.linksRequest", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                    </li>\r\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "status_hide", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program4(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "notification/partials/-general-status-hide", options) : helperMissing.call(depth0, "partial", "notification/partials/-general-status-hide", options))));
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "notification/tabs/-tab-general", options) : helperMissing.call(depth0, "partial", "notification/tabs/-tab-general", options))));
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "status_hide", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program9(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "notification/partials/-linksRequest-status-hide", options) : helperMissing.call(depth0, "partial", "notification/partials/-linksRequest-status-hide", options))));
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "notification/tabs/-tab-linksRequest", options) : helperMissing.call(depth0, "partial", "notification/tabs/-tab-linksRequest", options))));
    data.buffer.push("\r\n                        ");
    return buffer;
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-2\"></div>\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.notifications", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <ul class=\"nav nav-pills nav-justified\" style=\"margin-bottom: 15px;\">\r\n                <!-------------------- label: company ---------------------->\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("tabList.general:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\"");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "general", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.generals", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n                ");
    stack1 = helpers['if'].call(depth0, "app_controller.is_admin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </ul>\r\n            <!-------------------- TAB BODY ---------------------->\r\n            <div class=\"tab-content\">\r\n                <div class=\"tab-pane fade active in\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "tabList.general", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "tabList.linksRequest", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/notification/modals/certificate', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">\r\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.docTemplate.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </p>\r\n            ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n\r\n            <div class=\"col-lg-3\"> </div>\r\n            <div class=\"col-lg-8\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "new_record.emas", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.approved", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n\r\n        ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-check\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_variable", "rating", 0, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","INTEGER"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <span class=\"glyphicon glyphicon glyphicon-unchecked\" style=\"cursor: pointer; margin-top: 5px\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_variable", "rating", 100, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","INTEGER"],data:data})));
    data.buffer.push("></span>\r\n                ");
    return buffer;
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-2\">\r\n                ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.rating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-8\">\r\n                <div class=\"input-group\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.rating"),
      'type': ("number"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    <span class=\"input-group-addon\">%</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-2\">\r\n                ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.isLimited", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-8\">\r\n                ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("controller.bool"),
      'value': ("isLimited"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row\" style=\"margin-top: 15px\">\r\n            <div class=\"col-lg-12\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-2\">\r\n                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.files", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-8\">\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">\r\n                        ");
    stack1 = helpers.each.call(depth0, "file", "in", "controller.selectedRecord.document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </p>\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program15(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" >");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n                        ");
    return buffer;
    }

    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row\" style=\"margin-bottom: 15px\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-2\">\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-8\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-bottom: 15px\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-2\">\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.template", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-8\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.docTemplate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-bottom: 15px\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.docTemplate.booleanRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n    ");
    stack1 = helpers.unless.call(depth0, "controller.selectedRecord.isServiceRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 15px\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-2\">\r\n            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-8\">\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{
      'value': ("controller.description"),
      'class': ("form-control"),
      'rows': ("3")
    },hashTypes:{'value': "ID",'class': "STRING",'rows': "STRING"},hashContexts:{'value': depth0,'class': depth0,'rows': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "textarea", options))));
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_rateDocument", "controller.selectedRecord.type", "rating", "isLimited", "controller.description", "controller.selectedRecord.actionToken", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","ID","ID","ID","ID","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.send", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/notification/modals/show-details', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, self=this, escapeExpression=this.escapeExpression;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.date", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.valueNum", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.fromUserDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.value", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.valueNum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.user", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.fromUserDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.date", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.valueNum", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.fromUserDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.date", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.deadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-6\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program15(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.showDeadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.document.name", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-6\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.document.type", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.document.note", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.docTemplate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    ");
    return buffer;
    }
  function program20(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\"> ");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.document.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program22(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\"> ");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.document.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program24(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-top: 15px\">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"panel panel-default\">\r\n                        <div class=\"panel-heading\"><strong>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.note", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong></div>\r\n                        <div class=\"panel-body\">\r\n                            ");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.document.note", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program26(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-top: 15px\">\r\n                <div class=\"col-lg-12\">\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.files", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "controller.selectedRecord.document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program27(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"border-bottom: 1px solid #e5e5e5;\">\r\n                            <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" >");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n                        </p>\r\n                    ");
    return buffer;
    }

  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-top: 15px\">\r\n                <div class=\"col-lg-12\">\r\n                    <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.template", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <p style=\"border-bottom: 1px solid #e5e5e5;\">\r\n                        ");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.docTemplate.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "controller.selectedRecord.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.isNewRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.isServiceRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.isCertificationRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.selectedRecord.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers.unless.call(depth0, "controller.selectedRecord.isNewRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/notification/partials/-general-status-hide', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.user", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.download", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <th style=\"width:15%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.value", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.unless.call(depth0, "notification.isLink", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers.unless.call(depth0, "notification.viewNotification", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <tr ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("notification.highlighted:warning")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                            <td align=\"center\">\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </td>\r\n                            <td align=\"center\">\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.highlighted", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </td>\r\n                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n\r\n                            <!-- TIPO DEADLINE-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO NEW RATING-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isNewRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO CREDIT-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isCredit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO SERVICE RATING-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isServiceRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO CERTIFICATION RATING - SOLO PER IL CERTIFICATORE-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isCertificationRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <td>\r\n                                <a href=\"#\"><span class=\"glyphicon glyphicon-eye-close\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "status", "show", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","STRING"],data:data})));
    data.buffer.push("></span></a>\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n                    ");
    return buffer;
    }
  function program8(depth0,data) {
    
    
    data.buffer.push("\r\n                                    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                                ");
    }

  function program10(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <a href=\"#\"><span class=\"glyphicon glyphicon-check\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <a href=\"#\"><span class=\"glyphicon glyphicon-unchecked\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.valueNum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.showDeadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n\r\n                            ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.valueNum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                                <td></td>\r\n\r\n                            ");
    return buffer;
    }

  function program18(depth0,data) {
    
    
    data.buffer.push("\r\n                                <td></td>\r\n                                <td></td>\r\n\r\n                            ");
    }

  function program20(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromUserDetails", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>\r\n                                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "notification.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </td>\r\n                            ");
    return buffer;
    }
  function program21(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" >");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n                                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\" style=\"margin-top: 45px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <table class=\"table table-bordered table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th style=\"width:5%\"></th>\r\n                <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.new", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                ");
    stack1 = helpers['if'].call(depth0, "isCertifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                <th style=\"width:5%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.resume", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            ");
    stack1 = helpers.each.call(depth0, "notification", "in", "app_controller.records_notifications", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n<div class=\"row\" style=\"margin-top: 20px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <a href=\"#\"><h5 class=\"pull-right\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "show_hide_notifications", "status_hide", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.return", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/notification/partials/-links-request-status-hide', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "notification.isLink", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.unless.call(depth0, "notification.viewNotification", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <tr ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("notification.highlighted:error")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                                    <td align=\"center\">\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "notification.highlighted", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    </td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromUserDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>\r\n                                        <a href=\"#\"><span class=\"glyphicon glyphicon-share\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "status", "view", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","STRING"],data:data})));
    data.buffer.push("></span></a>\r\n                                    </td>\r\n                                </tr>\r\n                            ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                            <a href=\"#\"><span class=\"glyphicon glyphicon-check\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                        ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                            <a href=\"#\"><span class=\"glyphicon glyphicon-unchecked\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                        ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <tr ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("notification.highlighted:warning")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                                    <td align=\"center\">\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "notification.highlighted", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    </td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromUserDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td>\r\n                                        <a href=\"#\"><span class=\"glyphicon glyphicon-share\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "status", "show", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","STRING"],data:data})));
    data.buffer.push("></span></a>\r\n                                    </td>\r\n                                </tr>\r\n                            ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\" style=\"margin-top: 45px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <!--<th style=\"width:5%\"> </th>-->\r\n                    <th style=\"width:5%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.new", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.user", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:30%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.note", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:5%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.hide", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                ");
    stack1 = helpers.each.call(depth0, "notification", "in", "app_controller.records_notifications", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<div class=\"row\" style=\"margin-top: 20px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <a href=\"#\"><h5 class=\"pull-right\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "show_hide_notifications", "status_hide", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.return", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/notification/tabs/-tab-general', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <th style=\"width:15%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.user", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.download", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.certificate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <th style=\"width:15%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.value", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.certificate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.unless.call(depth0, "notification.isLink", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "notification.viewNotification", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <tr ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("notification.highlighted:warning")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                            <td align=\"center\">\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </td>\r\n                            <td align=\"center\">\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.highlighted", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n\r\n                            <!-- TIPO DEADLINE-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO NEW RATING-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isNewRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO CREDIT-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isCredit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <!-- TIPO SERVICE RATING-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isServiceRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            <!-- TIPO INFO-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isInfo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            <!-- TIPO CERTIFICATION RATING - SOLO PER IL CERTIFICATORE-->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "notification.isCertificationRating", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            <td>\r\n                                <a href=\"#\"><span class=\"glyphicon glyphicon-eye-close\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "status", "hide", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","STRING"],data:data})));
    data.buffer.push("></span></a>\r\n                            </td>\r\n                        </tr>\r\n\r\n                    ");
    return buffer;
    }
  function program8(depth0,data) {
    
    
    data.buffer.push("\r\n                                    <span class=\"glyphicon glyphicon-exclamation-sign\"></span>\r\n                                ");
    }

  function program10(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <a href=\"#\"><span class=\"glyphicon glyphicon-check\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <a href=\"#\"><span class=\"glyphicon glyphicon-unchecked\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.valueNum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers['if'].call(depth0, "notification.deadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                                <td></td>\r\n                            ");
    return buffer;
    }
  function program15(depth0,data) {
    
    var stack1;
    stack1 = helpers._triageMustache.call(depth0, "notification.showDeadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    else { data.buffer.push(''); }
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.valueNum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            ");
    return buffer;
    }

  function program19(depth0,data) {
    
    
    data.buffer.push("\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            ");
    }

  function program21(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "notification.valueNum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/show-details", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers['if'].call(depth0, "notification.deadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.actionToken", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            ");
    return buffer;
    }
  function program22(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <td><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "notification/modals/certificate", "notification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></a></td>\r\n                                ");
    return buffer;
    }

  function program24(depth0,data) {
    
    
    data.buffer.push("\r\n                                    <td></td>\r\n                                ");
    }

  function program26(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromUserDetails", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>\r\n                                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "notification.document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(27, program27, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </td>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.actionToken", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            ");
    return buffer;
    }
  function program27(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" >");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n                                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\" style=\"margin-top: 45px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <table class=\"table table-bordered table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th style=\"width:5%\"></th>\r\n                <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.new", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                ");
    stack1 = helpers['if'].call(depth0, "isCertifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                <th style=\"width:10%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.hide", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            ");
    stack1 = helpers.each.call(depth0, "notification", "in", "app_controller.records_notifications", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n<div class=\"row\" style=\"margin-top: 20px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <a href=\"#\"><h5 class=\"pull-right\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "show_hide_notifications", "status_hide", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.showHideNotifications", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/notification/tabs/-tab-links-request', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "notification.isLink", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "notification.viewNotification", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "notification.isDeadline", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <tr ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("notification.highlighted:error")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                                <td align=\"center\">\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "notification.highlighted", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromUserDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.is_actionToken", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                <td> <a href=\"#\"><span class=\"glyphicon glyphicon-eye-close\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "status", "hide", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","STRING"],data:data})));
    data.buffer.push("></span></a></td>\r\n                            </tr>\r\n                        ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                        <a href=\"#\"><span class=\"glyphicon glyphicon-check\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                    ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                        <a href=\"#\"><span class=\"glyphicon glyphicon-unchecked\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "highlighted", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("></span></a>\r\n                                    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <td><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_acceptedLink", "notification", "notification.fromCompany", "", "notification.actionToken", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","ID","ID","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></a></td>\r\n                                ");
    return buffer;
    }

  function program11(depth0,data) {
    
    
    data.buffer.push("\r\n                                    <td></td>\r\n                                ");
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <tr ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("notification.highlighted:warning")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                                <td align=\"center\">\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "notification.highlighted", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.showDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.fromUserDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "notification.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "notification.is_actionToken", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                <td> <a href=\"#\"><span class=\"glyphicon glyphicon-eye-close\" style=\"text-align: center\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "notification", "status", "hide", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","STRING"],data:data})));
    data.buffer.push("></span></a></td>\r\n                            </tr>\r\n                        ");
    return buffer;
    }

    data.buffer.push("<div class=\"row\" style=\"margin-top: 45px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <table class=\"table table-bordered table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th style=\"width:5%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.new", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.date", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:20%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.user", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:30%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.note", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:30%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.accept", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                <th style=\"width:5%\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.hide", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            ");
    stack1 = helpers.each.call(depth0, "notification", "in", "app_controller.records_notifications", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n<div class=\"row\" style=\"margin-top: 20px\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-10\">\r\n        <a href=\"#\"><h5 class=\"pull-right\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "show_hide_notifications", "status_hide", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.showHideLinkRequests", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/search-company/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    
    data.buffer.push("\r\n                <div class=\"well well-lg\" style=\"background-color: #FAFDFD\">\r\n                    <h3 class=\"page-header\">Loading...</h3>\r\n                    <div class=\"progress\">\r\n                        <div class=\"progress-bar progress-bar-striped active\"  role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 100%\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ");
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.unless.call(depth0, "controller.before_search", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "app_controller.searchResults", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "search-company/partials/-result-search-records", options) : helperMissing.call(depth0, "partial", "search-company/partials/-result-search-records", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program7(depth0,data) {
    
    
    data.buffer.push("\r\n                        <div class=\"well well-lg\" style=\"background-color: #FAFDFD\">\r\n                            <h3 class=\"page-body\">No results.</h3>\r\n                        </div>\r\n                    ");
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <!-------------------- HEADER ---------------------->\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-2\">\r\n                </div>\r\n                <!-------------------- nome company ---------------------->\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.searchCompanies", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <div class=\"col-lg-2\">\r\n                    <button type=\"button\" class=\"btn btn-default pull-right btn-90\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "search_records", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push(">\r\n                        <strong class=\"btn-font-color\" style=\"font-size: 21\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.search", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <div class=\"row\" style=\"margin-top: 20px\">\r\n                <div class=\"col-lg-11\">\r\n                    <form class=\"form-horizontal\">\r\n                        <fieldset>\r\n                            <div class=\"form-group\">\r\n\r\n                                <label for=\"name\" class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                                <div class=\"col-lg-4\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers['select-2'] || (depth0 && depth0['select-2']),options={hash:{
      'content': ("app_controller.records_company"),
      'value': ("controller.name"),
      'optionValuePath': ("id"),
      'optionLabelPath': ("name"),
      'placeholder': ("Choose a company name"),
      'typeaheadNoMatchesText': ("No company found for '%@'"),
      'typeaheadErrorText': ("Loading failed: %@"),
      'enabled': (true),
      'allowClear': (true)
    },hashTypes:{'content': "ID",'value': "ID",'optionValuePath': "STRING",'optionLabelPath': "STRING",'placeholder': "STRING",'typeaheadNoMatchesText': "STRING",'typeaheadErrorText': "STRING",'enabled': "BOOLEAN",'allowClear': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'optionValuePath': depth0,'optionLabelPath': depth0,'placeholder': depth0,'typeaheadNoMatchesText': depth0,'typeaheadErrorText': depth0,'enabled': depth0,'allowClear': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "select-2", options))));
    data.buffer.push("\r\n                                </div>\r\n                                <label for=\"name\" class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                                <div class=\"col-lg-4\">\r\n                                    ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("types_list"),
      'value': ("controller.search_type"),
      'prompt': ("Choose a company type"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'prompt': "STRING",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'prompt': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                                <div class=\"col-lg-4\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers['select-2'] || (depth0 && depth0['select-2']),options={hash:{
      'content': ("app_controller.nations"),
      'value': ("controller.search_country"),
      'optionValuePath': ("country"),
      'optionLabelPath': ("country"),
      'optionDescriptionPath': ("iso2"),
      'placeholder': ("Choose company country"),
      'enabled': (true),
      'allowClear': (true)
    },hashTypes:{'content': "ID",'value': "ID",'optionValuePath': "STRING",'optionLabelPath': "STRING",'optionDescriptionPath': "STRING",'placeholder': "STRING",'enabled': "BOOLEAN",'allowClear': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'optionValuePath': depth0,'optionLabelPath': depth0,'optionDescriptionPath': depth0,'placeholder': depth0,'enabled': depth0,'allowClear': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "select-2", options))));
    data.buffer.push("\r\n                                </div>\r\n                                <label for=\"name\" class=\"col-lg-2 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.services", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                                <div class=\"col-lg-4\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers['select-2'] || (depth0 && depth0['select-2']),options={hash:{
      'content': ("app_controller.auto_suggest_Services"),
      'value': ("controller.search_services"),
      'optionValuePath': ("value"),
      'optionLabelPath': ("value"),
      'multiple': (true),
      'placeholder': ("Choose services"),
      'enabled': (true),
      'allowClear': (true)
    },hashTypes:{'content': "ID",'value': "ID",'optionValuePath': "STRING",'optionLabelPath': "STRING",'multiple': "BOOLEAN",'placeholder': "STRING",'enabled': "BOOLEAN",'allowClear': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'optionValuePath': depth0,'optionLabelPath': depth0,'multiple': depth0,'placeholder': depth0,'enabled': depth0,'allowClear': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "select-2", options))));
    data.buffer.push("\r\n\r\n                                    <!--optionDescriptionPath=\"iso2\"-->\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.is_loading", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n\r\n    </div>\r\n</div>\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/search-company/partials/-result-search-records', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <tr>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "company", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "company.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "company", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "company.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "company", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "company.country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/main", "company", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">\r\n                                ");
    stack1 = helpers.each.call(depth0, "service", "in", "company.services", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </td>\r\n                        </tr>\r\n                    ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers._triageMustache.call(depth0, "service", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }

    data.buffer.push("<form class=\"form-horizontal\">\r\n    <fieldset>\r\n        <div class=\"row\" style=\"margin-top: 15px\">\r\n            <div class=\"col-lg-12\">\r\n                <table class=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.services", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    ");
    stack1 = helpers.each.call(depth0, "company", "in", "app_controller.searchResults", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/main', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, self=this, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("controller.tabList.driver:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "driver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">\r\n                            <h5>\r\n\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            </h5>\r\n                        </a>\r\n                    </li>\r\n                    <!-------------------- label: trucks-list / truck ---------------------->\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("controller.tabList.truck:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "truck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">\r\n                            <h5>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.truck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </h5>\r\n                        </a>\r\n                    </li>\r\n                    <!-------------------- label: trailers-list / trailer ---------------------->\r\n                    <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("controller.tabList.trailer:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                        <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "trailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">\r\n                            <h5>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.trailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </h5>\r\n                        </a>\r\n                    </li>\r\n                ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.driversList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.returnToList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.driversList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trucksList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trucksList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program15(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trailersList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.trailersList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }

  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers.unless.call(depth0, "is_driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program20(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <!-------------------- label: clerks-list / clerk ---------------------->\r\n                        <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("controller.tabList.clerk:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                            <a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "clerk", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push(">\r\n                                <h5>\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.clerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(21, program21, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </h5>\r\n                            </a>\r\n                        </li>\r\n                    ");
    return buffer;
    }
  function program21(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program22(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push(" ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.clerksList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ");
    return buffer;
    }

  function program24(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.clerksList", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }

  function program26(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/tabs/-tab-company", options) : helperMissing.call(depth0, "partial", "your-profile/tabs/-tab-company", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program28(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(31, program31, data),fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program29(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/tabs/-tab-user-driver-list", options) : helperMissing.call(depth0, "partial", "your-profile/tabs/-tab-user-driver-list", options))));
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program31(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.truck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(34, program34, data),fn:self.program(32, program32, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program32(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/tabs/-tab-vehicle-truck-list", options) : helperMissing.call(depth0, "partial", "your-profile/tabs/-tab-vehicle-truck-list", options))));
    data.buffer.push("\r\n                            ");
    return buffer;
    }

  function program34(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.trailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(37, program37, data),fn:self.program(35, program35, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            ");
    return buffer;
    }
  function program35(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/tabs/-tab-vehicle-trailer-list", options) : helperMissing.call(depth0, "partial", "your-profile/tabs/-tab-vehicle-trailer-list", options))));
    data.buffer.push("\r\n                                ");
    return buffer;
    }

  function program37(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.clerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(38, program38, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program38(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/tabs/-tab-user-clerk-list", options) : helperMissing.call(depth0, "partial", "your-profile/tabs/-tab-user-clerk-list", options))));
    data.buffer.push("\r\n                                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"container container-outer\">\r\n    <div class=\"panel panel-primary\">\r\n        <div class=\"panel-heading\">\r\n            <!-------------------- HEADER ---------------------->\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-2\"></div>\r\n                <!-------------------- nome company ---------------------->\r\n                <div class=\"col-lg-8\">\r\n                    <div class=\"panel-title1\" style=\"text-align: center\">");
    stack1 = helpers._triageMustache.call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</div>\r\n                </div>\r\n                <div class=\"col-lg-2\"></div>\r\n            </div>\r\n        </div>\r\n        <!-------------------- BODY ---------------------->\r\n        <!-------------------- TAB-HEAD ---------------------->\r\n        <div class=\"panel-body\">\r\n            <ul class=\"nav nav-pills nav-justified\" style=\"margin-bottom: 15px;\">\r\n                <!-------------------- label: company ---------------------->\r\n                <li ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'class': ("controller.tabList.company:active")
    },hashTypes:{'class': "STRING"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">\r\n                    <a href=\"#\"");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "setTabs", "company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","STRING"],data:data})));
    data.buffer.push("><h5>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h5></a>\r\n                </li>\r\n                <!-------------------- label: drivers-list / driver ---------------------->\r\n                ");
    stack1 = helpers['if'].call(depth0, "isCarrier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </ul>\r\n            <!-------------------- TAB BODY ---------------------->\r\n            <div class=\"tab-content\">\r\n                <div class=\"tab-pane fade active in\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(28, program28, data),fn:self.program(26, program26, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/modals/change-password', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["ID","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>Change password</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-3\"></div>\r\n        <div class=\"col-lg-6\">\r\n            <label>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.CurrentPassword", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.curr_pwd"),
      'class': ("form-control"),
      'type': ("password")
    },hashTypes:{'value': "ID",'class': "STRING",'type': "STRING"},hashContexts:{'value': depth0,'class': depth0,'type': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-3\"></div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <h5 class=\"page-header\"></h5>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-3\"></div>\r\n        <div class=\"col-lg-6\">\r\n            <label> ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.NewPassword", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.new_pwd"),
      'class': ("form-control"),
      'type': ("password")
    },hashTypes:{'value': "ID",'class': "STRING",'type': "STRING"},hashContexts:{'value': depth0,'class': depth0,'type': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-3\"></div>\r\n    </div>\r\n    <br>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-3\"></div>\r\n        <div class=\"col-lg-6\">\r\n            <label> ");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.ConfirmNewPassword", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </label>\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.confirm_pwd"),
      'class': ("form-control"),
      'type': ("password")
    },hashTypes:{'value': "ID",'class': "STRING",'type': "STRING"},hashContexts:{'value': depth0,'class': depth0,'type': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-3\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </a>\r\n    <a href=\"#\" class=\"btn btn-primary\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_password", "curr_pwd", "new_pwd", "confirm_pwd", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","ID","ID","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.save", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/modals/delete-record', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression;


    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["ID","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <p>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.AreYouSureYouWantToDeleteThisRecord", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("?</p>\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    <a href=\"#\" class=\"btn btn-primary\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "delete_record", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/modals/new-record', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.newClerk", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n    ");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.newDriver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n    ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.newTruck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n    ");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.newTrailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n        ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("newFirstName"),
      'toChange': ("changeState_firstName")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n        ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("newLastName"),
      'toChange': ("changeState_lastName")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        </div>\r\n        <!--<div class=\"row\" style=\"margin-bottom: 15px\">-->\r\n            <!--<label class=\"col-lg-3 control-label\"></label>-->\r\n            <!--<div class=\"col-lg-9\">-->\r\n                <!---->\r\n                <!---->\r\n            <!--</div>-->\r\n        <!--</div>-->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.phone", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newPhone"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.skype", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newSkype"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("newEmail"),
      'toChange': ("changeState_email")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("newUsername"),
      'toChange': ("changeState_username")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("newPassword"),
      'toChange': ("changeState_password")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"form-group\" id=\"changeState_firstName\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newFirstName"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"form-group\" id=\"changeState_lastName\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newLastName"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program14(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-bottom: 15px\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.patents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.autocomplete_patents"),
      'destination': ("controller.newPatents"),
      'searchPath': ("type"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'searchPath': "STRING",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'searchPath': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                <div class=\"form-group\" id=\"changeState_email\">\r\n                    <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.email", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <div class=\"col-lg-9\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newEmail"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    </div>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                <div class=\"form-group\" id=\"changeState_username\">\r\n                    <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.username", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <div class=\"col-lg-9\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newUsername"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    </div>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program20(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                <div class=\"form-group\" id=\"changeState_password\">\r\n                    <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.password", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <div class=\"col-lg-6\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newPassword"),
      'type': ("password"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    </div>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program22(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-bottom: 15px\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.languages", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'destination': ("controller.newLanguages"),
      'usecase': ("customModeWithoutSource")
    },hashTypes:{'destination': "ID",'usecase': "STRING"},hashContexts:{'destination': depth0,'usecase': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"row\" style=\"margin-bottom: 15px\">-->\r\n                <!--<label class=\"col-lg-3 control-label\"></label>-->\r\n                <!--<div class=\"col-lg-9\">-->\r\n                    <!---->\r\n                <!--</div>-->\r\n            <!--</div>-->\r\n        ");
    return buffer;
    }

  function program24(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            ");
    stack1 = helpers.view.call(depth0, "required-field", {hash:{
      'value': ("newName"),
      'toChange': ("changeState_name")
    },hashTypes:{'value': "ID",'toChange': "STRING"},hashContexts:{'value': depth0,'toChange': depth0},inverse:self.noop,fn:self.program(25, program25, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newBrand"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.model", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newModel"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newDescription"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-bottom: 15px\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.configuration", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.auto_suggest_Configurations"),
      'destination': ("controller.newConfigurations"),
      'searchPath': ("value"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'searchPath': "STRING",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'searchPath': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        ");
    stack1 = helpers['if'].call(depth0, "newRecordTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(29, program29, data),fn:self.program(27, program27, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    return buffer;
    }
  function program25(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                <div class=\"form-group\" id=\"changeState_name\">\r\n                    <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <div class=\"col-lg-9\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newName"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    </div>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program27(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-bottom: 15px\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.chassisNumber", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newChassisNumber"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 15px\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.weight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newWeight"),
      'type': ("number"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-bottom: 15px\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.tare", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newTare"),
      'type': ("number"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program29(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n            <div class=\"row\" style=\"margin-bottom: 15px\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.category", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("newCategory"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program31(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <a href=\"#\" class=\"btn btn-primary\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "createRecord_user", "controller.record_type", "newFirstName", "newLastName", "newUsername", "newBirthDate", "controller.newPatents", "newPhone", "newSkype", "newEmail", "newPassword", "controller.newLanguages", "newCurriculum", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.save", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    ");
    return buffer;
    }

  function program33(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <a href=\"#\" class=\"btn btn-primary\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "createRecord_vehicle", "controller.record_type", "newName", "newBrand", "newModel", "newDescription", "controller.newConfigurations", "newRegistrationYear", "newChassisNumber", "newWeight", "newTare", "newCategory", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","ID","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.save", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    ");
    return buffer;
    }

    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["ID","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordClerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordTruck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n</div>\r\n<div class=\"modal-body\">\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordUser", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordVehicle", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["ID","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordUser", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(31, program31, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.newRecordVehicle", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(33, program33, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/modals/show-certification-rating', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, self=this, escapeExpression=this.escapeExpression;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "rate.isTypeCertification", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <tr>\r\n                            <td >");
    stack1 = helpers._triageMustache.call(depth0, "rate.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td >");
    stack1 = helpers._triageMustache.call(depth0, "rate.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td >");
    stack1 = helpers._triageMustache.call(depth0, "rate.value", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                        </tr>\r\n                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Ratings", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.from", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.rate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                ");
    stack1 = helpers.each.call(depth0, "rate", "in", "ratings", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/modals/show-rating', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, self=this, escapeExpression=this.escapeExpression;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "rate.isTypeService", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <tr>\r\n                            <td >");
    stack1 = helpers._triageMustache.call(depth0, "rate.fromCompanyDetail", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td >");
    stack1 = helpers._triageMustache.call(depth0, "rate.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                            <td >");
    stack1 = helpers._triageMustache.call(depth0, "rate.value", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                        </tr>\r\n                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"modal-header\">\r\n    <button type=\"button\" class=\"close\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["ID","STRING","STRING"],data:data})));
    data.buffer.push(">&times;</button>\r\n    <h3>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Ratings", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</h3>\r\n</div>\r\n<div class=\"modal-body\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <table class=\"table table-bordered table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.from", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.rate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                ");
    stack1 = helpers.each.call(depth0, "rate", "in", "ratings", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <a href=\"#\" class=\"btn\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "close", "overview", "application", {hash:{
      'target': ("view")
    },hashTypes:{'target': "STRING"},hashContexts:{'target': depth0},contexts:[depth0,depth0,depth0],types:["STRING","STRING","STRING"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.Close", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</a>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-company-document-edit', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_variable", "isView_docDetails", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n                ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "document", "isView_docList", true, "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","STRING","BOOLEAN","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.name", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    
    data.buffer.push("\r\n                        <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                    ");
    }

  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("sub_record_document.name"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.type", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n\r\n                    ");
    stack1 = helpers.unless.call(depth0, "is_supplier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(19, program19, data),fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                ");
    return buffer;
    }
  function program17(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("documentTypes"),
      'value': ("sub_record_document.type"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program19(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("documentTypes_supplier"),
      'value': ("sub_record_document.type"),
      'class': ("form-control")
    },hashTypes:{'content': "ID",'value': "ID",'class': "STRING"},hashContexts:{'content': depth0,'value': depth0,'class': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program21(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.template", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(27, program27, data),fn:self.program(22, program22, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.validityDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-3\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(32, program32, data),fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-2\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadLine", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </label>\r\n            </div>\r\n\r\n            <div class=\"col-lg-3\">\r\n\r\n                ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.expirationDate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(36, program36, data),fn:self.program(34, program34, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.alert", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-3\">\r\n\r\n                    ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.alert", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(38, program38, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-2\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.grace", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            </div>\r\n            <div class=\"col-lg-3\">\r\n\r\n                    ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.grace", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(40, program40, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            </div>\r\n        </div>\r\n        ");
    return buffer;
    }
  function program22(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.docTemplate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program23(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.docTemplate.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                        ");
    return buffer;
    }

  function program25(depth0,data) {
    
    
    data.buffer.push("\r\n                            <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                        ");
    }

  function program27(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers['select-2'] || (depth0 && depth0['select-2']),options={hash:{
      'content': ("app_controller.records_docTemplate"),
      'value': ("sub_record_document.docTemplate"),
      'optionLabelPath': ("name"),
      'placeholder': ("Choose a document type"),
      'typeaheadNoMatchesText': ("No document type found for '%@'"),
      'typeaheadErrorText': ("Loading failed: %@"),
      'enabled': (true),
      'allowClear': (true)
    },hashTypes:{'content': "ID",'value': "ID",'optionLabelPath': "STRING",'placeholder': "STRING",'typeaheadNoMatchesText': "STRING",'typeaheadErrorText': "STRING",'enabled': "BOOLEAN",'allowClear': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'optionLabelPath': depth0,'placeholder': depth0,'typeaheadNoMatchesText': depth0,'typeaheadErrorText': depth0,'enabled': depth0,'allowClear': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "select-2", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.validityDate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(30, program30, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program30(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.validityDate_toString", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program32(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['bootstrap-datepicker'] || (depth0 && depth0['bootstrap-datepicker']),options={hash:{
      'value': ("controller.sub_record_document.validityDate"),
      'clearBtn': (true),
      'placeholder': ("Select a date"),
      'class': ("form-control"),
      'autoclose': (true)
    },hashTypes:{'value': "ID",'clearBtn': "BOOLEAN",'placeholder': "STRING",'class': "STRING",'autoclose': "BOOLEAN"},hashContexts:{'value': depth0,'clearBtn': depth0,'placeholder': depth0,'class': depth0,'autoclose': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "bootstrap-datepicker", options))));
    data.buffer.push("\r\n\r\n                    \r\n                    \r\n                ");
    return buffer;
    }

  function program34(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.showExpirationDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program36(depth0,data) {
    
    
    data.buffer.push("\r\n                    <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                ");
    }

  function program38(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.alert_toString", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program40(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.grace_toString", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program42(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.note", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(43, program43, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program43(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "sub_record_document.note", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program45(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{
      'value': ("sub_record_document.note"),
      'class': ("form-control"),
      'rows': (4)
    },hashTypes:{'value': "ID",'class': "STRING",'rows': "INTEGER"},hashContexts:{'value': depth0,'class': depth0,'rows': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "textarea", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program47(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.filesToDownload", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(51, program51, data),fn:self.program(48, program48, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program48(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.each.call(depth0, "controller.sub_record_document.docTemplate.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(49, program49, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program49(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                        ");
    return buffer;
    }

  function program51(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record_document.docTemplate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(25, program25, data),fn:self.program(52, program52, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program52(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <form class=\"form-horizontal\">\r\n                                        <fieldset>\r\n                                            <div class=\"row\" style=\"margin-top: 15px\">\r\n                                                <div class=\"col-lg-12\">\r\n                                                    <table class=\"table table-bordered table-hover\">\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                                                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.download", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        ");
    stack1 = helpers.each.call(depth0, "file", "in", "controller.sub_record_document.docTemplate.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(53, program53, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        ");
    return buffer;
    }
  function program53(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                                            <tr>\r\n                                                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                                                <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                                                <td><a href=\"#\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-download\"></span></a></td>\r\n                                                            </tr>\r\n                                                        ");
    return buffer;
    }

  function program55(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.files", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(58, program58, data),fn:self.program(56, program56, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program56(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.each.call(depth0, "controller.sub_record_document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(49, program49, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program58(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-12\">\r\n                                <form class=\"form-horizontal\">\r\n                                    <fieldset>\r\n                                        <div class=\"row\" style=\"margin-top: 15px\">\r\n                                            <div class=\"col-lg-12\">\r\n                                                <table class=\"table table-bordered table-hover\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "controller.sub_record_document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(59, program59, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </fieldset>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    ");
    return buffer;
    }
  function program59(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                                        <tr>\r\n                                                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                                            <td>");
    stack1 = helpers._triageMustache.call(depth0, "file.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                                            <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "file", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                                        </tr>\r\n                                                    ");
    return buffer;
    }

  function program61(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers.view.call(depth0, "upload-file", {hash:{
      'record_model': ("document")
    },hashTypes:{'record_model': "STRING"},hashContexts:{'record_model': depth0},inverse:self.noop,fn:self.program(62, program62, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program62(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        <div class=\"input-group\">\r\n                            <span class=\"input-group-btn\">\r\n                                <span class=\"btn btn-primary btn-file\">\r\n                                    Browse file&hellip; <input type=\"file\" multiple>\r\n                                </span>\r\n                            </span>\r\n                            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'id': ("selected_file"),
      'type': ("text"),
      'placeholder': ("max. 10 MB"),
      'class': ("form-control")
    },hashTypes:{'id': "STRING",'type': "STRING",'placeholder': "STRING",'class': "STRING"},hashContexts:{'id': depth0,'type': depth0,'placeholder': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                            <span class=\"input-group-btn\">\r\n                                <button id='button_upload' ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'value': ("sub_record_document.id")
    },hashTypes:{'value': "ID"},hashContexts:{'value': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(" type=\"button\" data-loading-text=\"Loading...\" class=\"btn btn-primary btn-130 pull-right\"><span class=\"glyphicon glyphicon-floppy-disk\"></span> Upload</button>\r\n                            </span>\r\n                        </div>\r\n                    ");
    return buffer;
    }

    data.buffer.push("<form class=\"form-horizontal\" style=\"margin-top: 25px\">\r\n    <fieldset>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-lg-1\">\r\n\r\n            <!--------   modifica del documento\r\n                         grants -  canEdit sul modello e nel caso in cui il document sia un NewDocument\r\n            -------------------------------->\r\n\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.canEdit_companyDocument", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-9\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.documents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend></div>\r\n        <div class=\"col-lg-2\">\r\n            <button class=\"btn btn-default btn-group-justified\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-list", "sub_record_document", "isView_docList", true, "isView_docDetails", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(">\r\n                <strong>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.return", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</strong>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        ");
    stack1 = helpers['if'].call(depth0, "sub_record_document.isDocument", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        <div class=\"form-group\">\r\n            <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.note", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(45, program45, data),fn:self.program(42, program42, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record_document.docTemplate.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(47, program47, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record_document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(55, program55, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        <div class=\"page-header\"></div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-lg-3\"></div>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers.unless.call(depth0, "isView_docDetails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(61, program61, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-company-documents-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <div class=\"col-lg-1\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "can_create_doc", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.documents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend></div>\r\n            </div>\r\n\r\n            <div class=\"row\" style=\"margin-top: 15px\">\r\n                <div class=\"col-lg-12\">\r\n                    <table class=\"table table-bordered table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.download", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.send", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                            <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        ");
    stack1 = helpers.each.call(depth0, "doc", "in", "documents", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.unless.call(depth0, "controller.is_driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program3(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                            <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "create_record", "", "isView_docList", false, "isView_docDetails", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                        ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "doc.isActive", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <tr>\r\n                                    <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-edit", "doc", "isView_docList", false, "isView_docDetails", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "doc.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-edit", "doc", "isView_docList", false, "isView_docDetails", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "doc.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                    <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-edit", "doc", "isView_docList", false, "isView_docDetails", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "doc.showExpirationDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" </td>\r\n\r\n                                    <td>\r\n                                        ");
    stack1 = helpers.each.call(depth0, "file", "in", "doc.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    </td>\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "doc.isDocument", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "doc.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(26, program26, data),fn:self.program(24, program24, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </tr>\r\n                            ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            <span ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer;\" class=\"btn-font-color\">");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</span>\r\n                                        ");
    return buffer;
    }

  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers.unless.call(depth0, "doc.isCertified", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "doc.isOwnerCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                        ");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_notifyDocument", "doc", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-send\"></span></a></td>\r\n                                            ");
    return buffer;
    }

  function program13(depth0,data) {
    
    
    data.buffer.push("\r\n                                                <td></td>\r\n                                            ");
    }

  function program15(depth0,data) {
    
    
    data.buffer.push("\r\n                                            <td></td>\r\n                                        ");
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "doc.isInvoice", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            ");
    stack1 = helpers.unless.call(depth0, "doc.isCertified", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                        ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                                ");
    stack1 = helpers['if'].call(depth0, "doc.isOwnerCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                            ");
    return buffer;
    }
  function program20(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                    <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_notifyDocument", "doc", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-send\"></span></a></td>\r\n                                                ");
    return buffer;
    }

  function program22(depth0,data) {
    
    
    data.buffer.push("\r\n                                                    <td></td>\r\n                                                ");
    }

  function program24(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                        <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "doc", "sub_record_company", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                    ");
    return buffer;
    }

  function program26(depth0,data) {
    
    
    data.buffer.push("\r\n                                        <td></td>\r\n                                    ");
    }

    data.buffer.push("<form class=\"form-horizontal\" style=\"margin-top: 25px\">\r\n    <fieldset>\r\n        ");
    stack1 = helpers['if'].call(depth0, "certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </fieldset>\r\n</form>\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-field-company', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("   <!-- può modificare solo il proprietario della company o i clerks-->\r\n    <div class=\"form-group\">\r\n        <div class=\"col-lg-1\">\r\n            <!-------------------- pencil ---------------------->\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend></div>\r\n    </div>\r\n");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_state", "your-profile/main", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n\r\n                <!-------------------- ok ---------------------->\r\n            ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "company_details", "isView", true, "app_controller.company_record", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","STRING","BOOLEAN","ID"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n            ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program9(depth0,data) {
    
    
    data.buffer.push("\r\n                <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n            ");
    }

  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("name"),
      'type': ("text"),
      'class': ("form-control")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING"},hashContexts:{'value': depth0,'type': depth0,'class': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "type", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression(helpers.view.call(depth0, "select", {hash:{
      'content': ("types"),
      'value': ("type"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'content': "ID",'value': "ID",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'content': depth0,'value': depth0,'class': depth0,'disabled': depth0},contexts:[depth0],types:["STRING"],data:data})));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n    <div class=\"form-group\">\r\n        <label for=\"profile\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.certifier", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n        <div class=\"col-lg-6\">\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-3\">\r\n            ");
    stack1 = helpers.unless.call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n    </div>\r\n");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(22, program22, data),fn:self.program(20, program20, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program20(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "certifier.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program22(depth0,data) {
    
    
    data.buffer.push("\r\n                    <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                ");
    }

  function program24(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            \r\n                ");
    data.buffer.push(escapeExpression((helper = helpers['select-2'] || (depth0 && depth0['select-2']),options={hash:{
      'content': ("app_controller.records_companyCertifier"),
      'value': ("certifier"),
      'optionLabelPath': ("name"),
      'placeholder': ("Choose a document type"),
      'typeaheadNoMatchesText': ("No document type found for '%@'"),
      'typeaheadErrorText': ("Loading failed: %@"),
      'enabled': (true),
      'disabled': ("controller.isView")
    },hashTypes:{'content': "ID",'value': "ID",'optionLabelPath': "STRING",'placeholder': "STRING",'typeaheadNoMatchesText': "STRING",'typeaheadErrorText': "STRING",'enabled': "BOOLEAN",'disabled': "ID"},hashContexts:{'content': depth0,'value': depth0,'optionLabelPath': depth0,'placeholder': depth0,'typeaheadNoMatchesText': depth0,'typeaheadErrorText': depth0,'enabled': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "select-2", options))));
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program26(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <button type=\"button\" class=\"btn btn-primary btn-100\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_setCertifier", "certifier.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.setCertifier", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</button>\r\n                <button type=\"button\" class=\"btn btn-danger btn-100\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_removeCertifier", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.removeCertifier", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</button>\r\n            ");
    return buffer;
    }

  function program28(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "street", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "street", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program31(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("street"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program33(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "city", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(34, program34, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program34(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "city", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program36(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("city"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program38(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "province", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(39, program39, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program39(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "province", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program41(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("province"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program43(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "zipCode", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(44, program44, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program44(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "zipCode", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program46(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("zipCode"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program48(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "district", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(49, program49, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program49(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "district", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program51(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("district"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program53(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "country", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(54, program54, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program54(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program56(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("country"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program58(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "vat", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(59, program59, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program59(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "vat", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program61(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("vat"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program63(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "phone", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(64, program64, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program64(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "phone", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program66(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("phone"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program68(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "fax", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(69, program69, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program69(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "fax", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program71(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("fax"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program73(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "transportListCode", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(74, program74, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program74(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "transportListCode", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program76(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("transportListCode"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program78(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "chamberOfCommerce", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(79, program79, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program79(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "chamberOfCommerce", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program81(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("chamberOfCommerce"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program83(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "emails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(84, program84, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program84(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.each.call(depth0, "emails", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(85, program85, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program85(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                ");
    return buffer;
    }

  function program87(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'destination': ("emails"),
      'usecase': ("customModeWithoutSource")
    },hashTypes:{'destination': "ID",'usecase': "STRING"},hashContexts:{'destination': depth0,'usecase': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program89(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "description", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(90, program90, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program90(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n            ");
    return buffer;
    }

  function program92(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{
      'value': ("description"),
      'class': ("form-control"),
      'rows': ("3"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'class': "STRING",'rows': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'class': depth0,'rows': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "textarea", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program94(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.auto_suggest_Services"),
      'destination': ("services"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program96(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "services", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(97, program97, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program97(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.each.call(depth0, "services", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(85, program85, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program99(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.auto_suggest_Segments"),
      'destination': ("segments"),
      'searchPath': ("value"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'searchPath': "STRING",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'searchPath': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program101(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "segments", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(102, program102, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program102(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.each.call(depth0, "segments", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(85, program85, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }

  function program104(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.auto_suggest_Areas"),
      'destination': ("areas"),
      'searchPath': ("value"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'searchPath': "STRING",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'searchPath': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n        ");
    return buffer;
    }

  function program106(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "areas", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(107, program107, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program107(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers.each.call(depth0, "areas", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(85, program85, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }

    data.buffer.push("<div class=\"form-horizontal\">\r\n<fieldset>\r\n<!-------------------- tab company - cambio button tra edit/view ---------------------->\r\n");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n\r\n<!-------------------- form company ---------------------->\r\n<div class=\"form-group\">\r\n    <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"profile\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.profile", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n\r\n");
    stack1 = helpers.unless.call(depth0, "controller.is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.street", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(31, program31, data),fn:self.program(28, program28, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.city", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(36, program36, data),fn:self.program(33, program33, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.province", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(41, program41, data),fn:self.program(38, program38, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.zipCode", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(46, program46, data),fn:self.program(43, program43, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.district", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(51, program51, data),fn:self.program(48, program48, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.country", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(56, program56, data),fn:self.program(53, program53, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.vatNumber", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(61, program61, data),fn:self.program(58, program58, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.phone", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(66, program66, data),fn:self.program(63, program63, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.fax", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(71, program71, data),fn:self.program(68, program68, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"form-group\">\r\n    <label for=\"transportListCode\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.transportListCode", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(76, program76, data),fn:self.program(73, program73, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"chamberOfCommerce\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.chamberOfCommerce", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(81, program81, data),fn:self.program(78, program78, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"emails\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.emails", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(87, program87, data),fn:self.program(83, program83, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"description\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(92, program92, data),fn:self.program(89, program89, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    </div>\r\n</div>\r\n<div class=\"page-header\"></div>\r\n<div class=\"form-group\">\r\n    <label for=\"services\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.services", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(96, program96, data),fn:self.program(94, program94, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"segments\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.segments", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(101, program101, data),fn:self.program(99, program99, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n<div class=\"form-group\">\r\n    <label for=\"areas\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.areas", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n    <div class=\"col-lg-9\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(106, program106, data),fn:self.program(104, program104, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n</div>\r\n</fieldset>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-logo', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n    ");
    stack1 = helpers['if'].call(depth0, "is_driver_and_canEdit", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("   <!-- se è un guidatore può modificare il suo profilo-->\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-lg-1\">\r\n                <!-------------------- pencil ---------------------->\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView_logo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-9\" style=\"margin-top: 35px\"><legend></legend></div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n    ");
    return buffer;
    }
  function program3(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_variable", "isView_logo", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n                    <!-------------------- ok ---------------------->\r\n                ");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "save_logo", "", "isView_logo", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                    ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "save_logo", "controller.sub_record", "isView_logo", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                    ");
    return buffer;
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("   <!-- può modificare solo il proprietario della company o i clerks-->\r\n<div class=\"row\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"form-group\">\r\n        <div class=\"col-lg-1\">\r\n            <!-------------------- pencil ---------------------->\r\n            ");
    stack1 = helpers['if'].call(depth0, "controller.isView_logo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-9\" style=\"margin-top: 35px\"><legend></legend></div>\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_variable", "isView_logo", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n\r\n                <!-------------------- ok ---------------------->\r\n            ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n            ");
    return buffer;
    }
  function program14(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "save_logo", "", "isView_logo", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "save_logo", "controller.sub_record", "isView_logo", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"fileinput fileinput-new\" data-provides=\"fileinput\">\r\n                <div class=\"fileinput-new thumbnail\" style=\"width: 250px; height: 250px;\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(23, program23, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.each.call(depth0, "file", "in", "files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program20(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers['if'].call(depth0, "file.isLogo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program21(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <img src=\"api/files/");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("?token=");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "app_controller.token_pdoc", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("&stream=true\">\r\n                            ");
    return buffer;
    }

  function program23(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.each.call(depth0, "file", "in", "controller.sub_record.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program25(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <!-------------------- UPLOAD NUOVA IMMAGINE ---------------------->\r\n            ");
    stack1 = helpers.view.call(depth0, "upload-image", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program26(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                <div class=\"fileinput fileinput-new\" data-provides=\"fileinput\">\r\n                    <div class=\"fileinput-new thumbnail\" style=\"width: 250px; height: 250px;\">\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(31, program31, data),fn:self.program(27, program27, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                    </div>\r\n                    <div class=\"fileinput-preview fileinput-exists thumbnail\" style=\"max-width: 250px; max-height: 250px;\"></div>\r\n                    <div>\r\n                    <span class=\"btn btn-default btn-file\">\r\n                        <span class=\"fileinput-new\">Select image</span>\r\n                        <span class=\"fileinput-exists\">Change</span>\r\n                        <input type=\"file\" name=\"...\">\r\n                    </span>\r\n                        <a href=\"#\" class=\"btn btn-default fileinput-exists\" data-dismiss=\"fileinput\">Remove</a>\r\n                    </div>\r\n                </div>\r\n            ");
    return buffer;
    }
  function program27(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers.each.call(depth0, "file", "in", "files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(28, program28, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program28(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                ");
    stack1 = helpers['if'].call(depth0, "file.isLogo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            ");
    return buffer;
    }
  function program29(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <img src=\"api/files/");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("?token=");
    data.buffer.push(escapeExpression(helpers.unbound.call(depth0, "app_controller.token_pdoc", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data})));
    data.buffer.push("&stream=true\" style=\"opacity: 0.4;\">\r\n                                ");
    return buffer;
    }

  function program31(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers.each.call(depth0, "file", "in", "controller.sub_record.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(28, program28, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program33(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "is_admin_or_clerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(34, program34, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program34(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(35, program35, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program35(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "show_serviceScore", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(38, program38, data),fn:self.program(36, program36, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program36(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                        <div class=\"panel panel-primary\">\r\n                            <div class=\"panel-heading\"><h3>Service rating</h3></div>\r\n                            <div class=\"panel-body\">\r\n                                <div class=\"row\">\r\n                                    <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/show-rating", "null", "", "service", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"label label-primary pull-right\" style=\"margin-right: 8px\">Show  ");
    stack1 = helpers._triageMustache.call(depth0, "totalServiceRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ratings</span>  </a>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers['speed-meter'] || (depth0 && depth0['speed-meter']),options={hash:{
      'speed': ("serviceScore"),
      'target': ("speed1"),
      'rateSize': (55),
      'custom_height': (130)
    },hashTypes:{'speed': "ID",'target': "STRING",'rateSize': "INTEGER",'custom_height': "INTEGER"},hashContexts:{'speed': depth0,'target': depth0,'rateSize': depth0,'custom_height': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "speed-meter", options))));
    data.buffer.push("\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

  function program38(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.view.call(depth0, "tooltip", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(39, program39, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program39(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                            <button type=\"button\" class=\"btn btn-primary btn-group-justified\" data-toggle=\"tooltip\" data-placement=\"left\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_showRating", "", "service", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","ID","STRING"],data:data})));
    data.buffer.push(" title=\"You will be charged 1 credit to see the rating for 15 days.\">Show service rating</button>\r\n                        ");
    return buffer;
    }

  function program41(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers['if'].call(depth0, "is_admin_or_clerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(42, program42, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program42(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.tabList.company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(49, program49, data),fn:self.program(43, program43, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program43(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "show_certificationScore", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(46, program46, data),fn:self.program(44, program44, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program44(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                        <div class=\"panel panel-primary\">\r\n                            <div class=\"panel-heading\"><h3>Certific. rating</h3></div>\r\n                            <div class=\"panel-body\">\r\n                                <div class=\"row\">\r\n                                    <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/show-certification-rating", "null", "", "certification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"label label-primary pull-right\" style=\"margin-right: 8px\">Show ");
    stack1 = helpers._triageMustache.call(depth0, "totalCertificationRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ratings</span></a>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers['speed-meter'] || (depth0 && depth0['speed-meter']),options={hash:{
      'speed': ("allCertificationScore"),
      'target': ("speed2"),
      'rateSize': (55),
      'custom_height': (130)
    },hashTypes:{'speed': "ID",'target': "STRING",'rateSize': "INTEGER",'custom_height': "INTEGER"},hashContexts:{'speed': depth0,'target': depth0,'rateSize': depth0,'custom_height': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "speed-meter", options))));
    data.buffer.push("\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

  function program46(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.view.call(depth0, "tooltip", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(47, program47, data),contexts:[depth0],types:["STRING"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program47(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                            <button type=\"button\" class=\"btn btn-primary btn-group-justified\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"You will be charged 1 credit to see the rating for 15 days.\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_showRating", "", "certification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","ID","STRING"],data:data})));
    data.buffer.push(">Show certification rating</button>\r\n                        ");
    return buffer;
    }

  function program49(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "show_certificationScore", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(50, program50, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program50(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                        <div class=\"panel panel-primary\">\r\n                            <div class=\"panel-heading\"><h3>Certific. rating</h3></div>\r\n                            <div class=\"panel-body\">\r\n                                <div class=\"row\">\r\n                                    <a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/show-certification-rating", "null", "", "certification", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"label label-primary pull-right\" style=\"margin-right: 8px\">Show ");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.totalCertificationRating", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" ratings</span></a>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    ");
    data.buffer.push(escapeExpression((helper = helpers['speed-meter'] || (depth0 && depth0['speed-meter']),options={hash:{
      'speed': ("controller.sub_record.certificationScore"),
      'target': ("speed2"),
      'rateSize': (55),
      'custom_height': (130)
    },hashTypes:{'speed': "ID",'target': "STRING",'rateSize': "INTEGER",'custom_height': "INTEGER"},hashContexts:{'speed': depth0,'target': depth0,'rateSize': depth0,'custom_height': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "speed-meter", options))));
    data.buffer.push("\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ");
    return buffer;
    }

    stack1 = helpers['if'].call(depth0, "controller.tabList.driver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n\r\n");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-1\"></div>\r\n    <div class=\"col-lg-4\">\r\n        <!-------------------- IMMAGINE IN MODE VIEW ---------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView_logo", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(25, program25, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n    <div class=\"col-lg-3\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "controller.is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(33, program33, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n    <div class=\"col-lg-3\">\r\n        ");
    stack1 = helpers.unless.call(depth0, "controller.is_certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(41, program41, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </div>\r\n    <div class=\"col-lg-1\"></div>\r\n</div>\r\n\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-sub-record-document-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "canCreate_subRecord_doc", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "create_record", "", "isView_docList", false, "isView_docDetails", false, "document", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN","STRING"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                    ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "document.isActive", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <tr>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-edit", "document", "isView_docList", false, "isView_docDetails", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "document.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-edit", "document", "isView_docList", false, "isView_docDetails", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "document.docTemplate.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-company-document-edit", "document", "isView_docList", false, "isView_docDetails", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "document.showExpirationDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                <td>\r\n                                    ");
    stack1 = helpers.each.call(depth0, "file", "in", "document.files", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </td>\r\n                                ");
    stack1 = helpers['if'].call(depth0, "document.isDocument", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                ");
    stack1 = helpers['if'].call(depth0, "document.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(25, program25, data),fn:self.program(23, program23, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                            </tr>\r\n                        ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        <span ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "download_file", "file.id", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer;\" class=\"btn-font-color\">");
    stack1 = helpers._triageMustache.call(depth0, "file.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</span>\r\n                                    ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers.unless.call(depth0, "document.isCertified", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(9, program9, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program9(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "document.isOwnerCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program10(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                            <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_notifyDocument", "document", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-send\"></span></a></td>\r\n                                        ");
    return buffer;
    }

  function program12(depth0,data) {
    
    
    data.buffer.push("\r\n                                            <td></td>\r\n                                        ");
    }

  function program14(depth0,data) {
    
    
    data.buffer.push("\r\n                                        <td></td>\r\n                                    ");
    }

  function program16(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "document.isInvoice", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                ");
    return buffer;
    }
  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers.unless.call(depth0, "document.isCertified", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "document.isOwnerCompany", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                        ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "custom_notifyDocument", "document", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:["STRING","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-send\"></span></a></td>\r\n                                            ");
    return buffer;
    }

  function program21(depth0,data) {
    
    
    data.buffer.push("\r\n                                                <td></td>\r\n                                            ");
    }

  function program23(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "document", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                ");
    return buffer;
    }

  function program25(depth0,data) {
    
    
    data.buffer.push("\r\n                                    <td></td>\r\n                                ");
    }

    data.buffer.push("<form class=\"form-horizontal\" style=\"margin-top: 25px\">\r\n    <fieldset>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-lg-1\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "certifier", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.documents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend></div>\r\n        </div>\r\n        <div class=\"row\" style=\"margin-top: 15px\">\r\n            <div class=\"col-lg-12\">\r\n                <table class=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.type", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.deadline", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.download", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.send", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    ");
    stack1 = helpers.each.call(depth0, "document", "in", "controller.sub_record.documents", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-user-field', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                    <!-------------------- pencil ---------------------->\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_state", "your-profile/main", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n                ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n\r\n                    <!-------------------- ok ---------------------->\r\n                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "user_vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.firstName", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    
    data.buffer.push("\r\n                        <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                    ");
    }

  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.firstName"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.lastName", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.lastName"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.username", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.username", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program21(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.username"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program23(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.birthDate", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(24, program24, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program24(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.birthDate_toString", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program26(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['bootstrap-datepicker'] || (depth0 && depth0['bootstrap-datepicker']),options={hash:{
      'value': ("controller.sub_record.birthDate"),
      'clearBtn': (true),
      'autoclose': (true),
      'placeholder': ("Click to select a date"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'clearBtn': "BOOLEAN",'autoclose': "BOOLEAN",'placeholder': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'clearBtn': depth0,'autoclose': depth0,'placeholder': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "bootstrap-datepicker", options))));
    data.buffer.push("\r\n\r\n                    \r\n                    \r\n                ");
    return buffer;
    }

  function program28(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label for=\"patents\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.patents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(35, program35, data),fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.patents", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(33, program33, data),fn:self.program(30, program30, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program30(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers.each.call(depth0, "controller.sub_record.patents", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(31, program31, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }
  function program31(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                            ");
    return buffer;
    }

  function program33(depth0,data) {
    
    
    data.buffer.push("\r\n                            <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                        ");
    }

  function program35(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.autocomplete_patents"),
      'destination': ("controller.sub_record.patents"),
      'searchPath': ("type"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'searchPath': "STRING",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'searchPath': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program37(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.phone", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(38, program38, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program38(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.phone", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program40(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.phone"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program42(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.skype", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(43, program43, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program43(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.skype", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program45(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.skype"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program47(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.email", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(48, program48, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program48(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.email", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program50(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.email"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program52(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label for=\"skype\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.username", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(56, program56, data),fn:self.program(53, program53, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program53(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.username", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(33, program33, data),fn:self.program(54, program54, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program54(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.username", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                        ");
    return buffer;
    }

  function program56(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.username"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program58(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            ");
    stack1 = helpers.unless.call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(59, program59, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        ");
    return buffer;
    }
  function program59(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.password", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                    <div class=\"col-lg-6\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.password"),
      'type': ("password"),
      'class': ("form-control"),
      'disabled': (true)
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "BOOLEAN"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                    </div>\r\n                    <div class=\"col-lg-3\">\r\n                        <button type=\"button\" class=\"btn btn-primary btn-group-justified\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/change-password", "controller.sub_record", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","ID"],data:data})));
    data.buffer.push(" ");
    data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{
      'disabled': ("controller.isView")
    },hashTypes:{'disabled': "ID"},hashContexts:{'disabled': depth0},contexts:[],types:[],data:data})));
    data.buffer.push(">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.changePassword", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</button>\r\n                    </div>\r\n                </div>\r\n            ");
    return buffer;
    }

  function program61(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n            <div class=\"form-group\">\r\n                <label class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.languages", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(65, program65, data),fn:self.program(62, program62, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n\r\n            <!------------------------------------------- curriculum ------------------------------------------->\r\n            <div class=\"form-group\">\r\n                <label for=\"curriculum\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.curriculum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n                <div class=\"col-lg-9\">\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(70, program70, data),fn:self.program(67, program67, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }
  function program62(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.languages", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(33, program33, data),fn:self.program(63, program63, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program63(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            ");
    stack1 = helpers.each.call(depth0, "controller.sub_record.languages", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(31, program31, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        ");
    return buffer;
    }

  function program65(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        \r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'destination': ("controller.sub_record.languages"),
      'usecase': ("customModeWithoutSource")
    },hashTypes:{'destination': "ID",'usecase': "STRING"},hashContexts:{'destination': depth0,'usecase': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

  function program67(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.curriculum", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(33, program33, data),fn:self.program(68, program68, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program68(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.curriculum", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                        ");
    return buffer;
    }

  function program70(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{
      'cols': ("80"),
      'rows': ("12"),
      'value': ("controller.sub_record.curriculum"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'cols': "STRING",'rows': "STRING",'value': "ID",'class': "STRING",'disabled': "ID"},hashContexts:{'cols': depth0,'rows': depth0,'value': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "textarea", options))));
    data.buffer.push("\r\n                    ");
    return buffer;
    }

    data.buffer.push("<div class=\"form-horizontal\">\r\n<fieldset>\r\n\r\n    <div class=\"form-group\">\r\n        <div class=\"col-lg-1\">\r\n<!------------------------------------------- BUTTON ------------------------------------------->\r\n\r\n            ");
    stack1 = helpers['if'].call(depth0, "canEdit_userProfile", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend> </div>\r\n    </div>\r\n\r\n    <!------------------------------------------- first name ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n\r\n    <!------------------------------------------- last name ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"lastName\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n\r\n    <!------------------------------------------- username ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"skype\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.username", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(21, program21, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n\r\n    <!------------------------------------------- birth date ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"lastName\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.birthDate", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(26, program26, data),fn:self.program(23, program23, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    <!------------------------------------------- patent ------------------------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.isDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(28, program28, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    <!------------------------------------------- phone ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"phone\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.phone", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(40, program40, data),fn:self.program(37, program37, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    <!------------------------------------------- skype ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"skype\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.skype", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(45, program45, data),fn:self.program(42, program42, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    <!------------------------------------------- email ------------------------------------------->\r\n        <div class=\"form-group\">\r\n            <label for=\"skype\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.email", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(50, program50, data),fn:self.program(47, program47, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    <!------------------------------------------- username ------------------------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.isClerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(52, program52, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    <!------------------------------------------- channge password ------------------------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "check_changePassword", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(58, program58, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    <!------------------------------------------- languages ------------------------------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.isDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(61, program61, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    </fieldset>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/partials/-vehicle-field', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("   <!-- può modificare solo il proprietario della company o i clerks-->\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "change_state", "your-profile/main", false, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:["STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-pencil\"></span></button>\r\n                    ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                        <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "set_record", "user_vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","STRING","BOOLEAN"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-ok\"></span></button>\r\n                    ");
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.name", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(7, program7, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program7(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program9(depth0,data) {
    
    
    data.buffer.push("\r\n                        <p style=\"margin-top: 25px; border-bottom: 1px solid #e5e5e5;\"></p>\r\n                    ");
    }

  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.name"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.brand", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(14, program14, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program14(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program16(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.brand"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program18(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.vehicleModel", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(19, program19, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program19(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.vehicleModel", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program21(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.vehicleModel"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program23(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.description", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(24, program24, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program24(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program26(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.description"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program28(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.vehicleConfigurations", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(29, program29, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program29(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        ");
    stack1 = helpers.each.call(depth0, "controller.sub_record.vehicleConfigurations", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(30, program30, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                    ");
    return buffer;
    }
  function program30(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                            <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                        ");
    return buffer;
    }

  function program32(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['auto-suggest'] || (depth0 && depth0['auto-suggest']),options={hash:{
      'source': ("app_controller.auto_suggest_Configurations"),
      'destination': ("controller.sub_record.vehicleConfigurations"),
      'searchPath': ("value"),
      'usecase': ("customMode"),
      'minChars': (0)
    },hashTypes:{'source': "ID",'destination': "ID",'searchPath': "STRING",'usecase': "STRING",'minChars': "INTEGER"},hashContexts:{'source': depth0,'destination': depth0,'searchPath': depth0,'usecase': depth0,'minChars': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "auto-suggest", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program34(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.registrationYear", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(35, program35, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program35(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.registrationYear", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program37(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers['bootstrap-datepicker'] || (depth0 && depth0['bootstrap-datepicker']),options={hash:{
      'value': ("controller.sub_record.registrationYear"),
      'clearBtn': (true),
      'autoclose': (true),
      'placeholder': ("Select a date"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'clearBtn': "BOOLEAN",'autoclose': "BOOLEAN",'placeholder': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'clearBtn': depth0,'autoclose': depth0,'placeholder': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "bootstrap-datepicker", options))));
    data.buffer.push("\r\n                    \r\n                    \r\n                ");
    return buffer;
    }

  function program39(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.chassisNumber", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(43, program43, data),fn:self.program(40, program40, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.weight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(48, program48, data),fn:self.program(45, program45, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.tare", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(53, program53, data),fn:self.program(50, program50, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program40(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.chassisNumber", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(41, program41, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program41(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.chassisNumber", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program43(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.chassisNumber"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program45(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.weight", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(46, program46, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program46(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.weight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program48(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.weight"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program50(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.tare", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(51, program51, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program51(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.tare", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program53(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.tare"),
      'type': ("number"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

  function program55(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.category", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(59, program59, data),fn:self.program(56, program56, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n\r\n    ");
    return buffer;
    }
  function program56(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.category", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(9, program9, data),fn:self.program(57, program57, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                ");
    return buffer;
    }
  function program57(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                        <p style=\"margin-top: 10px; border-bottom: 1px solid #e5e5e5;\">");
    stack1 = helpers._triageMustache.call(depth0, "controller.sub_record.category", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</p>\r\n                    ");
    return buffer;
    }

  function program59(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{
      'value': ("controller.sub_record.category"),
      'type': ("text"),
      'class': ("form-control"),
      'disabled': ("controller.isView")
    },hashTypes:{'value': "ID",'type': "STRING",'class': "STRING",'disabled': "ID"},hashContexts:{'value': depth0,'type': depth0,'class': depth0,'disabled': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, "input", options))));
    data.buffer.push("\r\n                ");
    return buffer;
    }

    data.buffer.push("<div class=\"form-horizontal\">\r\n    <fieldset>\r\n        <div class=\"form-group\">\r\n            <div class=\"col-lg-1\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend> </div>\r\n        </div>\r\n        <!--<legend>-->\r\n            <!--&lt;!&ndash;------------------ button return-to-list --------------------&ndash;&gt;-->\r\n            <!--<span  style=\"cursor: pointer\" class=\"pull-right\">-->\r\n                <!--<strong style=\"color: #4582ec;\">List</strong>-->\r\n                <!--<span class=\"glyphicon glyphicon-chevron-right btn-font-color\"></span>-->\r\n            <!--</span>-->\r\n        <!--</legend>-->\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(16, program16, data),fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.model", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(21, program21, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(26, program26, data),fn:self.program(23, program23, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.configuration", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(32, program32, data),fn:self.program(28, program28, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\" class=\"col-lg-3 control-label\">");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.registrationYear", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</label>\r\n            <div class=\"col-lg-9\">\r\n                ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(37, program37, data),fn:self.program(34, program34, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n            </div>\r\n        </div>\r\n\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.sub_record.isTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(55, program55, data),fn:self.program(39, program39, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n    </fieldset>\r\n</div>");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/tabs/-tab-company', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n    <div class=\"row row-margin-top-bottom\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-field-company", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-field-company", options))));
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n");
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n\r\n    <!--------------------- details - edit --------------------->\r\n    <div class=\"well well-sm\">\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-field-company", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-field-company", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    </div>\r\n");
    return buffer;
    }

  function program5(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n    <div class=\"row row-margin-top-bottom\">\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-company-documents-list", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-company-documents-list", options))));
    data.buffer.push("\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n");
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n\r\n    <!--------------------- document - edit --------------------->\r\n    <div class=\"well well-sm\">\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-company-document-edit", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-company-document-edit", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    </div>\r\n");
    return buffer;
    }

    data.buffer.push("<!-------------------------------------\r\n    FORM company details\r\n------>\r\n\r\n\r\n<!--------------------- IMAGE LOGO --------------------->\r\n\r\n");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-logo", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-logo", options))));
    data.buffer.push("\r\n\r\n\r\n<!--------------------- details - view --------------------->\r\n");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n<!--------------------- document - view --------------------->\r\n");
    stack1 = helpers['if'].call(depth0, "controller.isView_docList", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/tabs/-tab-user-clerk-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n    <div class=\"row row-margin-top-bottom\" >\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <div class=\"form-horizontal\">\r\n                <fieldset>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-lg-1\">\r\n                            <!-------------------- altre tab - cambio button tra edit/view/add ---------------------->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "is_admin_for_this_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend> </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" style=\"margin-top: 15px\">\r\n                        <div class=\"col-lg-12\">\r\n                            <table class=\"table table-bordered table-hover\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                ");
    stack1 = helpers.each.call(depth0, "user", "in", "users", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    stack1 = helpers['if'].call(depth0, "is_admin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/new-record", "null", "", "clerk", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                            ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "user.isClerk", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        <tr>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "user.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "user.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "user.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                        </tr>\r\n                                    ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "user", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                            ");
    return buffer;
    }

  function program8(depth0,data) {
    
    
    data.buffer.push("\r\n                                                <td></td>\r\n                                            ");
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers.each.call(depth0, "user", "in", "users", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "user.isAdmin", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program12(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            <tr>\r\n                                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "user.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "user.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                                ");
    stack1 = helpers['if'].call(depth0, "user.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                            </tr>\r\n                                        ");
    return buffer;
    }
  function program13(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                    <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "user", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                                ");
    return buffer;
    }

  function program15(depth0,data) {
    
    
    data.buffer.push("\r\n                                                    <td></td>\r\n                                                ");
    }

  function program17(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n\r\n    <!-------------------- SHOW DRIVER RECORD ---------------------->\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(20, program20, data),fn:self.program(18, program18, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    }
  function program18(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-user-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-user-field", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program20(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"well well-sm\">\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-user-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-user-field", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

    data.buffer.push("\r\n<!-------------------- SHOW DRIVERS LIST ---------------------->\r\n");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/tabs/-tab-user-driver-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n        <div class=\"row row-margin-top-bottom\" >\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                <form class=\"form-horizontal\">\r\n                    <fieldset>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-lg-1\">\r\n                                <!-------------------- altre tab - cambio button tra edit/view/add ---------------------->\r\n                                ");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                            </div>\r\n                            <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend> </div>\r\n                        </div>\r\n                        <div class=\"row\" style=\"margin-top: 15px\">\r\n                            <div class=\"col-lg-12\">\r\n                                <table class=\"table table-bordered table-hover\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.patents", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                        <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    ");
    stack1 = helpers.each.call(depth0, "user", "in", "users", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                    <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/new-record", "null", "", "driver", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                                ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        ");
    stack1 = helpers['if'].call(depth0, "user.isDriver", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                    ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                            <tr>\r\n                                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "user.firstName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "user.lastName", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                                <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-user-field", "user", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">\r\n                                                    ");
    stack1 = helpers.each.call(depth0, "patent", "in", "user.patents", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                                ");
    stack1 = helpers['if'].call(depth0, "user.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                            </tr>\r\n                                        ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '', stack1;
    stack1 = helpers._triageMustache.call(depth0, "patent", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push(" &nbsp ");
    return buffer;
    }

  function program8(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                    <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "user", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                                ");
    return buffer;
    }

  function program10(depth0,data) {
    
    
    data.buffer.push("\r\n                                                    <td></td>\r\n                                                ");
    }

  function program12(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n\r\n        <!--------------------- image logo --------------------->\r\n        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-logo", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-logo", options))));
    data.buffer.push("\r\n\r\n        <!-------------------- SHOW DRIVER RECORD ---------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(15, program15, data),fn:self.program(13, program13, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n        <!--------------------- document - view --------------------->\r\n        ");
    stack1 = helpers['if'].call(depth0, "controller.isView_docList", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(19, program19, data),fn:self.program(17, program17, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    ");
    return buffer;
    }
  function program13(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-user-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-user-field", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program15(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            <div class=\"well well-sm\">\r\n                <div class=\"row row-margin-top-bottom\">\r\n                    <div class=\"col-lg-1\"></div>\r\n                    <div class=\"col-lg-10\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-user-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-user-field", options))));
    data.buffer.push("\r\n                    </div>\r\n                    <div class=\"col-lg-1\"></div>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-sub-record-document-list", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-sub-record-document-list", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        ");
    return buffer;
    }

  function program19(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n            <!--------------------- document - edit --------------------->\r\n            <div class=\"well well-sm\">\r\n                <div class=\"row row-margin-top-bottom\">\r\n                    <div class=\"col-lg-1\"></div>\r\n                    <div class=\"col-lg-10\">\r\n                        ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-company-document-edit", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-company-document-edit", options))));
    data.buffer.push("\r\n                    </div>\r\n                    <div class=\"col-lg-1\"></div>\r\n                </div>\r\n            </div>\r\n        ");
    return buffer;
    }

    data.buffer.push("\r\n<!-- se ad essere loggato è un driver gli si fà vedere solo la sua pagina altrimenti si mostra all'utelte la lista di drivers per la sua comany-->\r\n\r\n\r\n    <!-------------------- SHOW DRIVERS LIST ---------------------->\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/tabs/-tab-vehicle-trailer-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n    <div class=\"row row-margin-top-bottom\" >\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <form class=\"form-horizontal\">\r\n                <fieldset>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-lg-1\">\r\n                            <!-------------------- altre tab - cambio button tra edit/view/add ---------------------->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend> </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" style=\"margin-top: 15px\">\r\n                        <div class=\"col-lg-12\">\r\n                            <table class=\"table table-bordered table-hover\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.model", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.weight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.tare", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                ");
    stack1 = helpers.each.call(depth0, "vehicle", "in", "vehicles", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/new-record", "null", "", "trailer", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                            ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "vehicle.isTrailer", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        <tr>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.model", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.weight", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.tare", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "vehicle.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                        </tr>\r\n                                    ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "vehicle", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                            ");
    return buffer;
    }

  function program8(depth0,data) {
    
    
    data.buffer.push("\r\n                                                <td></td>\r\n                                            ");
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n\r\n\r\n    <!--------------------- image logo --------------------->\r\n    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-logo", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-logo", options))));
    data.buffer.push("\r\n\r\n    <!-------------------- SHOW DRIVER RECORD ---------------------->\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    <!--------------------- document - view --------------------->\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.isView_docList", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-vehicle-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-vehicle-field", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"well well-sm\">\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-vehicle-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-vehicle-field", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program15(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-sub-record-document-list", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-sub-record-document-list", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <!--------------------- document - edit --------------------->\r\n        <div class=\"well well-sm\">\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-company-document-edit", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-company-document-edit", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

    data.buffer.push("\r\n<!-------------------- SHOW DRIVERS LIST ---------------------->\r\n");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    
  });

});
define('p-doc/templates/your-profile/tabs/-tab-vehicle-truck-list', ['exports', 'ember'], function (exports, Ember) {

  'use strict';

  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};
    var buffer = '', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n    <div class=\"row row-margin-top-bottom\" >\r\n        <div class=\"col-lg-1\"></div>\r\n        <div class=\"col-lg-10\">\r\n            <form class=\"form-horizontal\">\r\n                <fieldset>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-lg-1\">\r\n                            <!-------------------- altre tab - cambio button tra edit/view/add ---------------------->\r\n                            ");
    stack1 = helpers['if'].call(depth0, "can_edit_company", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                        </div>\r\n                        <div class=\"col-lg-11\"><legend>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.details", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</legend> </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" style=\"margin-top: 15px\">\r\n                        <div class=\"col-lg-12\">\r\n                            <table class=\"table table-bordered table-hover\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.vehicleModel", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.category", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n\r\n                                    <th>");
    stack1 = helpers._triageMustache.call(depth0, "app_controller.translation.delete", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                ");
    stack1 = helpers.each.call(depth0, "vehicle", "in", "vehicles", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0,depth0],types:["ID","ID","ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n        <div class=\"col-lg-1\"></div>\r\n    </div>\r\n");
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                <button class=\"btn btn-primary btn-50\" ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/new-record", "null", "", "truck", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID","STRING"],data:data})));
    data.buffer.push("><span class=\"glyphicon glyphicon-plus\"></span></button>\r\n                            ");
    return buffer;
    }

  function program4(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                    ");
    stack1 = helpers['if'].call(depth0, "vehicle.isTruck", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n                                ");
    return buffer;
    }
  function program5(depth0,data) {
    
    var buffer = '', stack1;
    data.buffer.push("\r\n                                        <tr>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.name", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.description", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.brand", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.model", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            <td ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "transition_to", "your-profile/partials/-vehicle-field", "vehicle", "isView", true, {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","STRING","BOOLEAN"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\">");
    stack1 = helpers._triageMustache.call(depth0, "vehicle.category", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("</td>\r\n                                            ");
    stack1 = helpers['if'].call(depth0, "vehicle.canRemove", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n\r\n                                        </tr>\r\n                                    ");
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = '';
    data.buffer.push("\r\n                                                <td><a ");
    data.buffer.push(escapeExpression(helpers.action.call(depth0, "open_modal", "your-profile/modals/delete-record", "vehicle", "", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0,depth0],types:["STRING","STRING","ID","ID"],data:data})));
    data.buffer.push(" style=\"cursor: pointer\"><span class=\"glyphicon glyphicon-trash\"></span></a></td>\r\n                                            ");
    return buffer;
    }

  function program8(depth0,data) {
    
    
    data.buffer.push("\r\n                                                <td></td>\r\n                                            ");
    }

  function program10(depth0,data) {
    
    var buffer = '', stack1, helper, options;
    data.buffer.push("\r\n\r\n\r\n    <!--------------------- image logo --------------------->\r\n    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-logo", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-logo", options))));
    data.buffer.push("\r\n\r\n    <!-------------------- SHOW DRIVER RECORD ---------------------->\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.isView", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(13, program13, data),fn:self.program(11, program11, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n    <!--------------------- document - view --------------------->\r\n    ");
    stack1 = helpers['if'].call(depth0, "controller.isView_docList", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    }
  function program11(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-vehicle-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-vehicle-field", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program13(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"well well-sm\">\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-vehicle-field", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-vehicle-field", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program15(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <div class=\"row row-margin-top-bottom\">\r\n            <div class=\"col-lg-1\"></div>\r\n            <div class=\"col-lg-10\">\r\n                ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-sub-record-document-list", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-sub-record-document-list", options))));
    data.buffer.push("\r\n            </div>\r\n            <div class=\"col-lg-1\"></div>\r\n        </div>\r\n    ");
    return buffer;
    }

  function program17(depth0,data) {
    
    var buffer = '', helper, options;
    data.buffer.push("\r\n        <!--------------------- document - edit --------------------->\r\n        <div class=\"well well-sm\">\r\n            <div class=\"row row-margin-top-bottom\">\r\n                <div class=\"col-lg-1\"></div>\r\n                <div class=\"col-lg-10\">\r\n                    ");
    data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:["STRING"],data:data},helper ? helper.call(depth0, "your-profile/partials/-company-document-edit", options) : helperMissing.call(depth0, "partial", "your-profile/partials/-company-document-edit", options))));
    data.buffer.push("\r\n                </div>\r\n                <div class=\"col-lg-1\"></div>\r\n            </div>\r\n        </div>\r\n    ");
    return buffer;
    }

    data.buffer.push("\r\n<!-------------------- SHOW DRIVERS LIST ---------------------->\r\n");
    stack1 = helpers['if'].call(depth0, "controller.transition_to_list", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(1, program1, data),contexts:[depth0],types:["ID"],data:data});
    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }
    data.buffer.push("\r\n");
    return buffer;
    
  });

});
define('p-doc/tests/helpers/resolver', ['exports', 'ember/resolver', 'p-doc/config/environment'], function (exports, Resolver, config) {

  'use strict';

  var resolver = Resolver['default'].create();

  resolver.namespace = {
    modulePrefix: config['default'].modulePrefix,
    podModulePrefix: config['default'].podModulePrefix
  };

  exports['default'] = resolver;

});
define('p-doc/tests/helpers/start-app', ['exports', 'ember', 'p-doc/app', 'p-doc/router', 'p-doc/config/environment'], function (exports, Ember, Application, Router, config) {

  'use strict';

  function startApp(attrs) {
    var application;

    var attributes = Ember['default'].merge({}, config['default'].APP);
    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;

    Ember['default'].run(function() {
      application = Application['default'].create(attributes);
      application.setupForTesting();
      application.injectTestHelpers();
    });

    return application;
  }
  exports['default'] = startApp;

});
define('p-doc/tests/test-helper', ['p-doc/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {

  'use strict';

  ember_qunit.setResolver(resolver['default']);

});
define('p-doc/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('adapter:application', 'ApplicationAdapter', {
    // Specify the other units that are required for this test.
    // needs: ['serializer:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var adapter = this.subject();
    ok(adapter);
  });

});
define('p-doc/tests/unit/components/auto-complete-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('auto-complete', 'AutoCompleteComponent', {
    // specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });
  
  ember_qunit.test('it renders', function() {
    expect(2);
  
    // creates the component instance
    var component = this.subject();
    equal(component._state, 'preRender');
  
    // appends the component to the page
    this.append();
    equal(component._state, 'inDOM');
  });

});
define('p-doc/tests/unit/components/auto-suggest-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('auto-suggest', 'AutoSuggestComponent', {
    // specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function() {
    expect(2);

    // creates the component instance
    var component = this.subject();
    equal(component._state, 'preRender');

    // appends the component to the page
    this.append();
    equal(component._state, 'inDOM');
  });

});
define('p-doc/tests/unit/components/custom-modal-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('custom-modal', 'CustomModalComponent', {
    // specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });

  ember_qunit.test('it renders', function() {
    expect(2);

    // creates the component instance
    var component = this.subject();
    equal(component._state, 'preRender');

    // appends the component to the page
    this.append();
    equal(component._state, 'inDOM');
  });

});
define('p-doc/tests/unit/components/speed-meter-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForComponent('speed-meter', 'SpeedMeterComponent', {
    // specify the other units that are required for this test
    // needs: ['component:foo', 'helper:bar']
  });
  
  ember_qunit.test('it renders', function() {
    expect(2);
  
    // creates the component instance
    var component = this.subject();
    equal(component._state, 'preRender');
  
    // appends the component to the page
    this.append();
    equal(component._state, 'inDOM');
  });

});
define('p-doc/tests/unit/controllers/account/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:account/main', 'AccountMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/admin/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:admin/main', 'AdminMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:application', 'ApplicationController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/dashboard/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:dashboard/main', 'DashboardMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/link/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:link/main', 'LinkMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/login/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:login/main', 'LoginMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/notification/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:notification/main', 'NotificationMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/search-company/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:search-company/main', 'SearchCompanyMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/controllers/your-profile/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('controller:your-profile/main', 'YourProfileMainController', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var controller = this.subject();
    ok(controller);
  });

});
define('p-doc/tests/unit/helpers/display-helper-test', ['p-doc/helpers/display-helper'], function (display_helper) {

  'use strict';

  module('DisplayHelperHelper');

  // Replace this with your real tests.
  test('it works', function() {
    var result = display_helper.displayHelper(42);
    ok(result);
  });

});
define('p-doc/tests/unit/helpers/display-result-test', ['p-doc/helpers/display-result'], function (display_result) {

  'use strict';

  module('DisplayResultHelper');
  
  // Replace this with your real tests.
  test('it works', function() {
    var result = display_result.displayResult(42);
    ok(result);
  });

});
define('p-doc/tests/unit/helpers/show-selections-helper-test', ['p-doc/helpers/show-selections-helper'], function (show_selections_helper) {

  'use strict';

  module('ShowSelectionsHelperHelper');

  // Replace this with your real tests.
  test('it works', function() {
    var result = show_selections_helper.showSelectionsHelper(42);
    ok(result);
  });

});
define('p-doc/tests/unit/initializers/app-initializer-test', ['ember', 'p-doc/initializers/app-initializer'], function (Ember, app_initializer) {

  'use strict';

  var container, application;

  module('AppInitializerInitializer', {
    setup: function() {
      Ember['default'].run(function() {
        container = new Ember['default'].Container();
        application = Ember['default'].Application.create();
        application.deferReadiness();
      });
    }
  });

  // Replace this with your real tests.
  test('it works', function() {
    app_initializer.initialize(container, application);

    // you would normally confirm the results of the initializer here
    ok(true);
  });

});
define('p-doc/tests/unit/initializers/globals-test', ['ember', 'p-doc/initializers/globals'], function (Ember, globals) {

  'use strict';

  var container, application;
  
  module('GlobalsInitializer', {
    setup: function() {
      Ember['default'].run(function() {
        container = new Ember['default'].Container();
        application = Ember['default'].Application.create();
        application.deferReadiness();
      });
    }
  });
  
  // Replace this with your real tests.
  test('it works', function() {
    globals.initialize(container, application);
  
    // you would normally confirm the results of the initializer here
    ok(true);
  });
  

});
define('p-doc/tests/unit/initializers/inject-store-into-autocomplete-test', ['ember', 'p-doc/initializers/inject-store-into-autocomplete'], function (Ember, inject_store_into_autocomplete) {

  'use strict';

  var container, application;
  
  module('InjectStoreIntoAutocompleteInitializer', {
    setup: function() {
      Ember['default'].run(function() {
        container = new Ember['default'].Container();
        application = Ember['default'].Application.create();
        application.deferReadiness();
      });
    }
  });
  
  // Replace this with your real tests.
  test('it works', function() {
    inject_store_into_autocomplete.initialize(container, application);
  
    // you would normally confirm the results of the initializer here
    ok(true);
  });
  

});
define('p-doc/tests/unit/initializers/inject-store-into-autosuggest-test', ['ember', 'p-doc/initializers/inject-store-into-autosuggest'], function (Ember, inject_store_into_autosuggest) {

  'use strict';

  var container, application;

  module('InjectStoreIntoAutosuggestInitializer', {
    setup: function() {
      Ember['default'].run(function() {
        container = new Ember['default'].Container();
        application = Ember['default'].Application.create();
        application.deferReadiness();
      });
    }
  });

  // Replace this with your real tests.
  test('it works', function() {
    inject_store_into_autosuggest.initialize(container, application);

    // you would normally confirm the results of the initializer here
    ok(true);
  });

});
define('p-doc/tests/unit/models/company-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('company', 'Company', {
    // Specify the other units that are required for this test.
    needs: []
  });

  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/configuration-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('configuration', 'Configuration', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/doc-template-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('doc-template', 'DocTemplate', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/document-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('document', 'Document', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/file-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('file', 'File', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/grant-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('grant', 'Grant', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/notification-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('notification', 'Notification', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/payment-plan-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('payment-plan', 'PaymentPlan', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/post-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('post', 'Post', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/rating-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('rating', 'Rating', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/refill-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('refill', 'Refill', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/tag-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('tag', 'Tag', {
    // Specify the other units that are required for this test.
    needs: []
  });
  
  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/user-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('user', 'User', {
    // Specify the other units that are required for this test.
    needs: []
  });

  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/models/vehicle-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleForModel('vehicle', 'Vehicle', {
    // Specify the other units that are required for this test.
    needs: []
  });

  ember_qunit.test('it exists', function() {
    var model = this.subject();
    // var store = this.store();
    ok(!!model);
  });

});
define('p-doc/tests/unit/routes/account/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:account/main', 'AccountMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/admin/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:admin/main', 'AdminMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:application', 'ApplicationRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/dashboard/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:dashboard/main', 'DashboardMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/link/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:link/main', 'LinkMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/login/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:login/main', 'LoginMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/notification/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:notification/main', 'NotificationMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/search-company/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:search-company/main', 'SearchCompanyMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });
  
  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/routes/your-profile/main-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('route:your-profile/main', 'YourProfileMainRoute', {
    // Specify the other units that are required for this test.
    // needs: ['controller:foo']
  });

  ember_qunit.test('it exists', function() {
    var route = this.subject();
    ok(route);
  });

});
define('p-doc/tests/unit/transforms/custom-date-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('transform:custom-date', 'CustomDateTransform', {
    // Specify the other units that are required for this test.
    // needs: ['serializer:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var transform = this.subject();
    ok(transform);
  });

});
define('p-doc/tests/unit/transforms/raw-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('transform:raw', 'RawTransform', {
    // Specify the other units that are required for this test.
    // needs: ['serializer:foo']
  });

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var transform = this.subject();
    ok(transform);
  });

});
define('p-doc/tests/unit/views/button-disabled-on-click-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:button-disabled-on-click', 'ButtonDisabledOnClickView');
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/modal-manager-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:modal-manager', 'ModalManagerView');

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/required-field-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:required-field', 'RequiredFieldView');
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/tooltip-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:tooltip', 'TooltipView');
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/upload-file-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:upload-file', 'UploadFileView');
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/upload-image-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:upload-image', 'UploadImageView');
  
  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/verify-field-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:verify-field', 'VerifyFieldView');

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/tests/unit/views/verify-sign-up-fields-test', ['ember-qunit'], function (ember_qunit) {

  'use strict';

  ember_qunit.moduleFor('view:verify-sign-up-fields', 'VerifySignUpFieldsView');

  // Replace this with your real tests.
  ember_qunit.test('it exists', function() {
    var view = this.subject();
    ok(view);
  });

});
define('p-doc/transforms/custom-date', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Transform.extend({
        deserialize: function(serialized) {
            var isNull =  (serialized === null || serialized === undefined || serialized === '');
            //console.log('serialized: '+serialized);
    
            return isNull ? null : moment(serialized, "YYYY-MM-DD HH:mm:ss Z").format("YYYY-MM-DD");
            //return Ember.isNone(serialized) ? null : serialized;
        },
    
        serialize: function(deserialized) {
           // moment().zone("+01:00");
            var isNull =  (deserialized === null || deserialized === undefined || deserialized === '');
            //console.log('deserialized: '+deserialized);
            return isNull ? null : encodeURIComponent(moment(deserialized, "YYYY-MM-DD HH:mm:ss Z").format("YYYY-MM-DD"));//.format("YYYY-MM-DD").zone());// HH:mm:ss Z     ATTENZIONE!! CAMBIARE FORMAT ANCHE IN MODEL:COMPANY ALLA PROPERTY: firedNotifications
            //return Ember.isNone(deserialized) ? null : moment(deserialized).format("YYYY-MM-DD");
        }
    });

});
define('p-doc/transforms/custom-time', ['exports', 'ember-data'], function (exports, DS) {

    'use strict';

    exports['default'] = DS['default'].Transform.extend({
        deserialize: function(serialized) {
            var isNull = (serialized === null || serialized === undefined || serialized === '');
            console.log('serialized: '+serialized);
            return isNull ? null : moment(serialized, "YYYY-MM-DD HH:mm:ss Z").format("YYYY-MM-DD HH:mm:ss Z");
            //return Ember.isNone(serialized) ? null : serialized;
        },
    
        serialize: function(deserialized) {
            var isNull = (deserialized === null || deserialized === undefined || deserialized === '');
            console.log('deserialized: '+deserialized);
            return isNull ? null : moment(deserialized, "YYYY-MM-DD HH:mm:ss Z").format("YYYY-MM-DD HH:mm:ss Z");
            //return Ember.isNone(deserialized) ? null : moment(deserialized).format("YYYY-MM-DD");
        }
    });

});
define('p-doc/transforms/raw', ['exports', 'ember-data', 'ember'], function (exports, DS, Ember) {

    'use strict';

    exports['default'] = DS['default'].Transform.extend({
        deserialize: function(serialized) {
            return Ember['default'].isNone(serialized) ? [] : serialized;
        },
    
        serialize: function(deserialized) {
            return Ember['default'].isNone(deserialized) ? [] : deserialized;
        }
    });

});
define('p-doc/views/button-disabled-on-click', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        classNames: ['button-disabled-onClick'],
        tagName: 'button',
        attributeBindings : ['disabled'],
    
        plan: [],
        company: [],
        user: [],
    
        click: function () {
            var controller = this.get('controller'), $btn = $(this)[0];
            $btn.set('disabled', true);
    
            controller.send('new_refill', this.plan, this.company, this.user, $btn);
        }
    });

});
define('p-doc/views/modal-manager', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        didInsertElement: function() {
            Ember['default'].run.next(this,function(){
                this.$('.modal, .modal-backdrop').addClass('in');
            });
        },
    
        layoutName: 'modal-layout',
        actions: {
            delete_record: function(outlet, parentView){
    
                this.controller.send('delete_record');
                this.send( 'close', outlet, parentView);
            },
    
            change_password: function( curr_pwd, new_pwd, confirm_pwd, outlet, parentView ){
                var view = this, data = view.getProperties();
    
                data.user = view.controller.sub_record.get('username');
                data.token = view.get('controller.controllers.application').token_pdoc;
                data.curr_pwd = curr_pwd;
                data.new_pwd = new_pwd;
                data.confirm_pwd = confirm_pwd;
    
                if( data.new_pwd === data.confirm_pwd ){
                    $.post('api/custom/changePassword?token=' + view.get('controller.controllers.application').token_pdoc, data).then(function(response){
                        if (response.success) {
                            new PNotify({ title: 'Well done', text: 'You successfully changed password.', type: 'success', delay: 2000 });
    
                            view.controller.set('curr_pwd', null).set('new_pwd', null).set('confirm_pwd', null);
                            view.send( 'close', outlet, parentView);
                        }
                    }, function(){
                        new PNotify({ title: 'Warning', text: 'Password incorrect, please check it.', type: 'error', delay: 2000 });
                        view.send( 'close', outlet, parentView);
                    });
                }else{
                    new PNotify({ title: 'Warning', text: 'The new passwords do not match, please check them.', type: 'error', delay: 2000 });
                    view.send( 'close', outlet, parentView);
                }
    
    
            },
    
            //creazione di un nuovo payment plan da parte di un certificatore
            new_plan: function( type, planName, planDescription, planAmount, planCurrency, planCredit, outlet, parentView ){
                var _this = this;
    
                this.controller.get('store').createRecord('paymentPlan', {
                    name: planName,
                    type: type,
                    description: planDescription,
                    amount: planAmount,
                    currency: planCurrency,
                    credit: planCredit,
                    company: this.controller.get('main_record')
                }).save().then(function( val ){
                    _this.get('controller.controllers.application').set('records_paymentPlans', _this.controller.get('store').find('payment-plan', { company:  _this.get('controller.controllers.application').company_id }));
                    _this.controller.get('main_record').reload();
                    _this.send( 'close', outlet, parentView);
    
                    _this.controller.set('type', null).set('planName', null).set('planDescription', null).set('planAmount', null).set('planCurrency', null).set('planCredit', null);
                });
            },
    
            //azione custom per le azioni di certificazione da parte del certificatore e per i rating da parte delle company
            // che si sono fatte vicevolmente delle prestazioni
            custom_rateDocument: function( type, rating, isLimited, description, actionToken, outlet, parentView ){
                var view = this, data = this.getProperties(),
                    selectedRecord = view.controller.selectedRecord, controller = view.controller;
    
                data.rating = rating;
                data.isLimited = isLimited;
                data.description = description;
    
                if( type === 'certificationRating' ){
                    data.actionFn = 'certificationRateDocument';
                    $.post('api/action?actionToken=' + actionToken, data).then(function(response){
                        if (response.success) {
                            selectedRecord.set('highlighted', false);
                            selectedRecord.set('actionToken', null);
                            controller.set('rating', null);
                            controller.set('description', null);
                            selectedRecord.save().then(function(){
                                new PNotify({ title: 'Well done', text: 'You successfully send the rate.', type: 'success', delay: 2000 });
                            });
                        }
                    }, function( error ){
                        selectedRecord.set('actionToken', null);
                        new PNotify({ title: 'Warning', text: error, type: 'error', delay: 2000 });
                    });
                } else if ( type === 'serviceRating' ){
                    data.actionFn = 'serviceRateDocument';
                    $.post('api/action?actionToken=' + actionToken, data).then(function(response){
                        if (response.success) {
                            selectedRecord.set('highlighted', false);
                            selectedRecord.set('actionToken', null);
                            controller.set('rating', null);
                            controller.set('description', null);
                            selectedRecord.save().then(function(){
    
                                new PNotify({ title: 'Well done', text: 'You successfully send the rate.', type: 'success', delay: 2000 });
                            });
                        }
                    }, function( error ){
                        selectedRecord.set('actionToken', null);
                        new PNotify({ title: 'Warning', text: error, type: 'error', delay: 2000 });
                    });
                }
    
                view.controller.set('description', null);
                view.send( 'close', outlet, parentView);
            },
    
            createRecord_user: function( type, newFirstName, newLastName, newUsername, newBirthDate, newPatents, newPhone, newSkype, newEmail, newPassword, newLanguages, newCurriculum, outlet, parentView ){
                var view = this;
    
                $.post('api/verifyUser', {username: newUsername}).then(function(response){
                    if ( !response.success ) {
                        new PNotify({
                            title: 'Attention',
                            text: 'A user with this username already exists, please change it.',
                            type: 'info'
                        });
                    }
                    else
                    {
                        if( newFirstName && newLastName && newEmail && newUsername && newPassword ){
                            var new_record = view.controller.get('store').createRecord('user', {
                                type: type,
                                company: view.controller.main_record,
                                firstName: newFirstName,
                                lastName: newLastName,
                                username: newUsername,
                                birthDate: newBirthDate,
                                phone: newPhone,
                                skype: newSkype,
                                email: newEmail,
                                password: newPassword
                            });
    
                            if( type === 'driver' ){
                                new_record.set('profile', 'user').set('visibility', 'public').set('patents', newPatents).set('languages', newLanguages).set('curriculum', newCurriculum).save().then(function( ){
    
                                    view.controller.set('newFirstName', null).set('newLastName', null).set('newBirthDate', null).set('newPhone', null).set('newSkype', null).set('newEmail', null).set('newUsername', null).set('newPassword', null);
    
                                    view.controller.main_record.reload();
                                    view.send( 'close', outlet, parentView);
    
    
                                }, function( response ){
                                    var json = response.responseText, obj = JSON.parse(json);
                                    new PNotify({ title: 'Warning', text: obj.error, type: 'warning', delay: 2000 });
                                });
                            } else {
                                new_record.set('visibility', 'private').save().then(function( response ){
    
                                    view.controller.set('newFirstName', null).set('newLastName', null).set('newBirthDate', null).set('newPhone', null).set('newSkype', null).set('newEmail', null).set('newUsername', null).set('newPassword', null);
    
                                    view.controller.main_record.reload();
                                    view.send( 'close', outlet, parentView);
    
                                }, function( response ){
                                    var json = response.responseText, obj = JSON.parse(json);
                                    new PNotify({ title: 'Warning', text: obj.error, type: 'warning', delay: 2000 });
                                });
                            }
                        } else {
                            $('[id^="changeState_"]').addClass("has-error");
                            new PNotify({ title: 'Warning', text: 'Controllare di aver compilato tutti i campi obbligatori.', type: 'warning', delay: 2000 });
                        }
                    }
                }, function(){
                    new PNotify({
                        title: 'Error',
                        text: 'A problem was occurred.',
                        type: 'error'
                    });
                });
            },
    
            createRecord_vehicle: function( type, newName, newBrand, newModel, newDescription, newConfigurations, newRegistrationYear, newChassisNumber, newWeight, newTare, newCategory, outlet, parentView ){
                var view = this;
    
                if( newName ){
                    var new_record = this.controller.get('store').createRecord('vehicle', {
                        type: type,
                        company: this.controller.main_record,
                        name: newName,
                        brand: newBrand,
                        vehicleModel: newModel,
                        description: newDescription,
                        vehicleConfigurations: newConfigurations,
                        registrationYear: newRegistrationYear,
                        category: newCategory
                    });
    
                    if( type === 'trailer' ){
                        new_record.set('chassisNumber', newChassisNumber).set('weight', newWeight).set('tare', newTare).save().then(function(){
                            view.controller.set('newConfigurations', []).set('newName', null).set('newBrand', null).set('newModel', null).set('newDescription', null).set('newRegistrationYear', null).set('newChassisNumber', null).set('newWeight', null).set('newTare', null).set('newCategory', null);
    
                            view.controller.main_record.reload();
                            view.send( 'close', outlet, parentView);
                        });
                    } else {
                        new_record.save().then(function(){
                            view.controller.set('newConfigurations', []).set('newName', null).set('newBrand', null).set('newModel', null).set('newDescription', null).set('newRegistrationYear', null).set('newChassisNumber', null).set('newWeight', null).set('newTare', null).set('newCategory', null);
    
                            view.controller.main_record.reload();
                            view.send( 'close', outlet, parentView);
                        });
                    }
    
                } else {
                    $('[id^="changeState_"]').addClass("has-error");
                    new PNotify({ title: 'Warning', text: 'Controllare di aver compilato tutti i campi obbligatori.', type: 'warning', delay: 2000 });
                }
    
            },
            close: function(outlet, parentView) {
                var view = this;
    
                this.$('.modal, .modal-backdrop').one("transitionend", function() {
                    view.controller.send( 'close_modal', outlet, parentView );
                });
    
                this.$('.modal').removeClass('in');
            }
        }
    });

});
define('p-doc/views/required-field', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        value: null,
        valueToMatch: null,
        toChange: [],
    
        focusOut: function(){
            var _this = $('#'+this.toChange);
    
            if( this.value === '' && this.valueToMatch === '' || this.value === '' && this.valueToMatch === null ){
                _this.addClass("has-error");
            } else {
                if( _this.hasClass("has-error") ){
                    _this.removeClass("has-error");
                }
            }
        }
    });

});
define('p-doc/views/tooltip', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        didInsertElement: function() {
            $(function () {
                $('[data-toggle="tooltip"]').tooltip()
            })
        }
    
    });

});
define('p-doc/views/upload-file', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        record_model:[],
    
        didInsertElement: function() {
            var view = this, controller = this.get('controller'),
                formData = new FormData(),formData_size = null;
    
            $(document).on('change', '.btn-file :file', function() {
                var input = $(this),
                    numFiles = input.get(0).files ? input.get(0).files.length : 1,
                    label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [numFiles, label]);
    
                if ( input.get(0).files ) {
                    formData_size = input.get(0).files[0].size;
                    formData.append("file", input.get(0).files[0]);
                }
            });
    
            $(document).ready( function() {
                $('.btn-file :file').on('fileselect', function(event, numFiles, label) {
    
                    var input = $(this).parents('.input-group').find(':text'),
                        log = numFiles > 1 ? numFiles + ' files selected' : label;
    
                    if( input.length ) {
                        input.val(log);
                    } else {
                        if( log ) { alert(log); }
                    }
                });
    
                $('#button_upload').bind('click', actionPost);
            });
    
            function actionPost() {
                if($("#selected_file").val() !== ''){
    
                    if(formData_size > '10000000') {     //verifico che il file sia meno grande di 10 Mega-Byte
                        new PNotify({
                            title: 'Warning',
                            text: 'The file must be smaller than 10 MB.',
                            type: 'info',
                            delay: 4000
                        });
                    } else {
                        var self = this, $btn = $(this);
                        //var xhr = new XMLHttpRequest();
                        $btn.button('loading');
    
                        //https://test.zenointelligence.com/seaforward/
                        $.ajax({
                            url: 'api/files?token='+ view.get('controller.controllers.application').token_pdoc +'&entity='+this.value,
                            type: "POST",
                            data: formData,
                            processData: false,
                            contentType: false
                        }).then(function(){
                            $("#selected_file").val(" ");
                            formData = new FormData();
                            controller.send('update_files', view.record_model, self.value,  $btn);
    
                        }, function(){
                            $btn.button('reset');
                            new PNotify({
                                title: 'Error',
                                text: 'A problem was occurred.',
                                type: 'error',
                                delay: 4000
                            });
                        });
    
                    }
                }
            }
        }
    });

});
define('p-doc/views/upload-image', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        didInsertElement: function() {
            var view = this, controller = this.get('controller');
    
            var fileinput = $('.fileinput').fileinput();
    
            fileinput.on('change.bs.fileinput', function(e, files){
                //cancello immagini salvate precedentemente
                view.get('controller.controllers.application').formData_size = null;
                view.get('controller.controllers.application').formData = new FormData();
                //salvo nuova immagine
                view.get('controller.controllers.application').formData_size = files.size;
                view.get('controller.controllers.application').formData.append("file", files);
            });
    
            fileinput.on('clear.bs.fileinput', function(e){
                view.get('controller.controllers.application').formData_size = null;
                view.get('controller.controllers.application').formData = new FormData();
            });
    
        }
    });

});
define('p-doc/views/verify-field', ['exports', 'ember'], function (exports, Ember) {

    'use strict';

    exports['default'] = Ember['default'].View.extend({
        model_val:[],
        val:[],

        focusOut: function() {
            var self = this, data = self.getProperties();

            if(this.model_val === 'company') {
                data.name = this.val;
                $.post('api/verifyCompany', data).then(function(response){
                    if ( !response.success ) {
                        self.get('controller').set('name', null);
                        new PNotify({
                            title: 'Attention',
                            text: 'A company with this name already exists, please change it.',
                            type: 'info'
                        });
                    }
                }, function(){
                    new PNotify({
                        title: 'Error',
                        text: 'A problem was occurred.',
                        type: 'error'
                    });
                });
            }

            if(this.model_val === 'user') {
                data.username = this.val;
                $.post('api/verifyUser', data).then(function(response){
                    if ( !response.success ) {
                        self.get('controller').set('username', null);
                        new PNotify({
                            title: 'Attention',
                            text: 'A user with this username already exists, please change it.',
                            type: 'info'
                        });
                    }
                }, function(){
                    new PNotify({
                        title: 'Error',
                        text: 'A problem was occurred.',
                        type: 'error'
                    });
                });
            }
        }
    });

});
/* jshint ignore:start */

define('p-doc/config/environment', ['ember'], function(Ember) {
  var prefix = 'p-doc';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */

});

if (runningTests) {
  require("p-doc/tests/test-helper");
} else {
  require("p-doc/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
//# sourceMappingURL=p-doc.map